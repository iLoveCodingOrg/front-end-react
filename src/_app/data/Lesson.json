[
  {
    "_id": "56271dff12c48c7105503808",
    "slug": "built-in-filters-in-angular-js-part-2",
    "title": "Built-in Filters in Angular JS - Part 2",
    "subTitle": "Learn Angular Filters and how data can be filtered or manipulated with filters",
    "thumbnail": "learnAngular-10-filters-2.png",
    "demoUrl": "demo/learnAngular-10-filters-2/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445404159067E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:50:34.207Z"
    },
    "updatedMsec": 1.533750634207E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-10-filters-2.zip",
    "videoSource": "//player.vimeo.com/video/127808193",
    "duration": "5:40",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:09:19.067Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "562d2b8a9068f91a3cdf1c5f",
    "slug": "find-something-query-the-dom-with-jquery-part-3",
    "title": "Find Something / Query the DOM with jQuery - part 3",
    "subTitle": "Other ways which are crucial to know how to find elements within your website so once they are selected, you can take some action. like change its color, add animation, change its look and feel etc.",
    "thumbnail": "jQuery14-2-selectors-3.png",
    "demoUrl": "demo/jQuery14-4-selectors-3/index.html",
    "bodyContent": "<h1>What are Selectors in jQuery Part 3</h1><p>In this lesson, we are going to look at another way to querying the DOM </p><p><b>Getting started</b></p><p><b><span style=\"float: none;\">I have already created the document in HTML</span></b></p><p><img src=\"//a.ilovecoding.org/img/findsomething-query-the-dom-with-jquery-part-3-sc1.png\" style=\"width: 100%;\"/><br/>I'm going to import jQuery in our head tag, go to the <a href=\"https://code.jquery.com/\" target=\"\">website</a> and click on uncompressed version </p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc2.png\" style=\"width: 100%;\"/><br/></p><p>It will lead you to another page, simply copy and paste the URL in the script tag</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc3.png\" style=\"width: 100%;\"/><br/></p><p>In this lesson, we are going to discuss the methods below to query the DOM</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc4.png\" style=\"width: 100%;\"/><br/></p><p><span style=\"float: none;\">I'm going to test if our code is working </span></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function( ){&#10;&#10;$('body').addclass('new');&#10;&#10;});</code></pre><p><span style=\"float: none;\">Save it, refresh the screen and you see it added a class of new to the body which means our jQuery is working</span></p><div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc5.png\" style=\"width: 100%;\"/><br/></div><div><br/><span style=\"float: none;\">But before we proceed, I want to show you something cool. Open your chrome developer tools, go to the console and if I write some code like <code>$('body')</code> and hit enter you see it queried the DOM and brought me the body element from the DOM. Also you notice its surrounded by the brackets [ ] which means its an array.</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc6.png\" style=\"width: 100%;\"/><br/>When we import jQuery in our project, it can also be accessed in the console. So for example if I write <code>$('p')</code> it's going to return the paragraph tags and same with the <b>li </b>tags as well <code>$('li')</code> and the div tags as well <code>$('div')</code></div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc7.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div>If I write <code>$('#main')</code> it means give me all the elements which have an ID of main, if I hit enter I only get 1 div because there's only one div in our HTML document<br/></div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc8.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div>In the image below, three divs are the children of first div </div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc9.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div><font face=\"inherit\">If you want it's children you can simply write <code>$('main').children( )</code> save it, refresh the screen you see the children of div are returned.</font></div><div><font face=\"inherit\"> </font><br/></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc10.png\" style=\"width: 100%;\"/><br/></div><div><!--EndFragment--><br/><span style=\"float: none;\">If you want the particular div as shown in a screenshot below </span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc11.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\">you can simply write <code>$('.header')</code> refresh the screen and you see it returned the first div</span></div><div><span style=\"float: none;\"> </span><!--EndFragment--><br/><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc12.png\" style=\"width: 100%;\"/><br/><br/><p>If you want the siblings of that particular div, I can simply write <code>$('.header').siblings( )</code> hit enter and you see it returned the div siblings </p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc13.png\" style=\"width: 100%;\"/><br/></p><p><span style=\"float: none;\">So far we have looked at children and sibling methods of jQuery. We can also do that in our text editor as well.</span></p><p><span style=\"float: none;\"><b>.sibling( )<br/></b>I can simply write  <b><br/></b></span></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('.header').sibling().css('color', 'red');</code></pre><!--EndFragment--><b></b></div><b>.children( )<br/></b>I can simply write <br/> <!--EndFragment--><br/><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul').children().css('color', 'green');</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and you see all the siblings of the header have the color of red, and all the children of the <b>ul</b> tag have the color of green as shown below </span><br/><br/><div><b></b><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc14.png\" style=\"width: 100%;\"/><br/><br/><p><b>.parent( )<br/></b>For the parent we can target the footer tag, and the div is the parent of that particular footer tag<b><br/></b></p><span style=\"float: none;\"><!--EndFragment--><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc15.png\" style=\"width: 100%;\"/><br/></span></div><br/><p>I can simply write </p><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('.footer').parent().css('background-color', 'blue');</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and you see the background color is now changed to blue</span></div><div><br/><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc16.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\"><b>.first( )</b><br/>If you want the first child and its color to brown you can simply write <br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul').children().first().css('color', 'brown');</code></pre><p><span style=\"float: none;\"><span style=\"float: none;\">Save it, refresh the screen and you see the color is now changed to brown. you can also transform the text to uppercase or all lower case etc</span></span></p><p><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc17.png\" style=\"width: 100%;\"/><br/>you can also indent your code so it looks more readable like such</span></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul')&#10;.children()&#10;.first()&#10;.css('color', 'brown');</code></pre><!--EndFragment--><p><span style=\"float: none;\">You see the code is now more readable, also if you go to the console and write </span></p><p><code>$('ul')</code> you will get the <b>ul</b> tags and if you say you don't want the<b> ul</b> tag but you want its children as well so you can say <code>$('ul').children()</code> and it will return its children. If you only want the first children you can simple write <code>$('ul').children().first()</code> and it will return the fist children</p><div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc18.png\" style=\"width: 100%;\"/><br/><div><br/></div><div><span style=\"float: none;\"><b>.last( ) </b></span></div><div><span style=\"float: none;\">The last one is pretty straightforward as well</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul')<br/>.children()<br/>.last()<br/>.css('text-transform', 'uppercase');</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and you see the last one has the upper case now</span><br/><br/><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc19.png\" style=\"width: 100%;\"/><br/><div><span style=\"float: none;\"></span></div><div><b><br/></b><b>.hasClass( ) </b></div><div><span style=\"float: none;\">I am just going to query the DOM and look for all the divs that we have in our document by writing <code>$('div')</code></span><br/><br/><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc20.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">Then we are going to write div which has class of the header like such <code>$('div').hasClass('header')</code> save it, refresh the screen and you see it returned 'true' means it has a class of header. It's mostly a true or false statement</span></div><div><br/><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc21.png\" style=\"width: 100%;\"/><br/><br/><div><span style=\"float: none;\">So if I say <code>$('div').last( ).hasClass('header')</code> save it, refresh the screen and you see it will return 'false' because the last div has a class of footer</span><br/><br/><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc22.png\" style=\"width: 100%;\"/><br/><p><span class=\"Apple-converted-space\"><!--EndFragment--><br/><b>.attr( )</b></span></p><p>Now I'm going to look at the final method to query the DOM for today's lesson. If you have taken the <a href=\"https://ilovecoding.org/courses/htmlcss2\" target=\"\">Learn HTML &amp; CSS in 14 Days</a> course we have discussed what attributes are. Attributes provide additional information about an element. For example: The paragraphs are defined with the <code>&lt;p&gt;</code> tag, in this example, the element has a title attribute. The value of the attribute is &#34;iLoveCoding&#34; for example </p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">&lt;p title=&#34;iLoveCoding&#34;&gt; &#10; This is some random text&#10;&lt;/p&gt;</code></pre><p>So if I want to know attribute of the first <b>id </b>you can simply say <code>$('div').first().attr('id')</code> hit enter and it will say the attribute for the <b>id </b>is main<br/></p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc23.png\" style=\"width: 100%;\"/><br/></p><p>If you want to know the class of the div, you can simply write <span style=\"float: none;\"><code>$('div').first().attr('class')</code> save it, refresh it and hit enter you will see it returned the class of the div </span></p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc24.png\" style=\"width: 100%;\"/></p><p><font face=\"inherit\">So if I only write <code>$('div')</code> it's going to return multiple </font>results<br/></p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc25.png\" style=\"width: 100%;\"/><br/></p><p>If I want to find the attribute of the above results I can simply do <code>$('div').attr('class')</code> and hit enter, it just gives the result of the first one<br/></p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-3-sc26.png\" style=\"width: 100%;\"/><br/></p><p>I hope you enjoyed this lesson, if you have any question, please leave your comments below. I'll talk to you in the next lesson. Goodbye :)</p></div></div></div></div>",
    "createdMsec": 1.445800842063E+12,
    "updatedIso": {
      "$date": "2017-05-08T13:02:15.668Z"
    },
    "updatedMsec": 1.494248535669E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-4-selectors-3.zip",
    "videoSource": "//player.vimeo.com/video/116479521",
    "duration": "14:24",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:20:42.063Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "jQuery"
    ]
  },
  {
    "_id": "5622cff58795649145fce17d",
    "slug": "media-query-what-makes-responsive-design-possible",
    "title": "Media Query: What Makes Responsive Design Possible",
    "subTitle": "Media Query is a new CSS feature that makes responsive design possible. Media queries allow you to write specific CSS styles for different screen sizes. All popular frameworks such as Bootstrap, Zurb etc use media queries in the background to implement responsive design techniques.",
    "thumbnail": "mediaQuery.png",
    "demoUrl": "demo/mediaQuery/index.html",
    "bodyContent": "<p><a href=\"https://ilovecodingorg/lessons/bestpractices-when-writing-media-queries-2\" target=\"\">Best Practices when Writing Media Queries Part 2</a></p><p>Welcome to another lesson of iLoveCoding. In this lesson, we will learn about Media Query. Media Query is the key ingredient through which responsive designs are build. A responsive design is about using CSS and HTML to resize, hide, shrink or move the web content to make it look beautiful on any screen and should respond to the user's behavior.</p><p>If you resize the window, the website is going to change its layout so the content still looks good and beautiful. If you're on android, iPhone, tablet etc the website is going to look slightly different. Media query was introduced in CSS3 which was launched few years ago. It's syntax looks like such. You put @media and set a condition and if the condition is true, whatever is inside the brackets is going to run. So in that case below, if the minimum width is 400px, the background color is going to be red.</p><pre>@media (min-width: 400px){<br/>  body{<br/>    background-color: red<br/>  }<br/>}<br/></pre><p>For the sake of demonstration, I have boilerplate ready as you can see below, it has some pre-written HTML and CSS.</p><p><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc1.png\" style=\"width: 100%;\"/><br/></p><p>Now I'm going to start writing a media query. If the minimum width is 400px then the background color is going to be red</p><pre>@media (min-width:400px){<br/>  .box{<br/>     background-color: red;<br/>  }<br/>}</pre><p><span style=\"float: none;\">Save it and if I change the windows size, you can see the color has changed to red<br/></span><br/><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc2.png\" style=\"width: 100%;\"/></p><div><div>I can add another condition, if the minimum width is 600px, change the color to blue like such</div><br/><!--StartFragment--><pre>@media (min-width:600px){<br/>  .box{<br/>     background-color: blue;<br/>  }<br/>}</pre><!--EndFragment--><div><span style=\"float: none;\">If I change the size of the window, the color is going to be blue as you can see below </span><!--EndFragment--><br/><br/></div><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc3.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">If I make it smaller, it's going to be red, even more smaller then it will go back to its original color grey as you can see</span></div><div><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc4.png\" style=\"width: 100%;\"/><br/><div>You can have multiple conditions. If the minimum width is 400px and maximum width is 600px the background color is going to be red</div><div><br/><!--StartFragment--><pre>@media (min-width:400px) and (max-width:600px){<br/>  .box{<br/>     background-color: red;<br/>  }<br/>}</pre><!--EndFragment--></div><span style=\"float: none;\">And if the minimum width is 900px the background color is going to be blue </span><!--EndFragment--><br/><br/><!--StartFragment--><pre>@media (min-width:900px){<br/>  .box{<br/>     background-color: blue;<br/>  }<br/>}</pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the page and now if the width is 400 to 600px the background color is going to be red as you can see</span></div><div><br/><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc5.png\" style=\"width: 100%;\"/><br/><br/><div><span style=\"float: none;\">If I go over 600px the background color is going to be grey because that's the default color.</span></div><div><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc6.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">If I go further 900px the background color is going to be blue</span></div><div><span style=\"float: none;\"> </span><!--EndFragment--><br/><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc7.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">Lets suppose if you don't want to show anything when the minimum width is 900px, you can simply say display none and nothing is going to show up</span></div><div><br/><!--StartFragment--><pre>@media (min-width:900px){<br/>  .box{<br/>     background-color: blue;&#10;    <b> display: none;</b><br/>  }<br/>}</pre><!--EndFragment--><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc8.png\" style=\"width: 100%;\"/><br/><br/></div><div>So this is what media query is. When you're building a website, you have to write lots of media queries. But it all depends on personal preference.</div><div><p>For example you want the text to be bigger when the minimum width is 900px you can simply define font size like such</p><!--StartFragment--><pre>@media (min-width:900px){<br/>  .box{<br/>     background-color: blue;<br/>     font-size:300%<br/>  }<br/>}</pre><!--EndFragment--><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc9.png\" style=\"width: 100%;\"/><br/><br/><p>You also do not need to write all the media queries on one particular file, you can create a separate file and reference it in HTML document. So I'm going to create a new file.</p><p><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc10.png\" style=\"width: 100%;\"/><br/></p><p>And whatever will be in style.css file is going to take affect if the condition is true, as I do that, nothing changes.</p><p><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc11.png\" style=\"width: 100%;\"/><br/></p><p>HTML CSS and JavaScript are so popular that the programs people make these days are accessible on TV, Tablets, iPhone, Androids, Desktop and Kiosk application etc. From a practical standpoint, you never know where your website, application is going to be loaded. So you always want to to stick with the particular width of that screen where your website is actually loaded to control the view. If you are making a specialized application for example TV etc then you want to add TV and print type and other platforms etc.</p><p><img src=\"//a.ilovecoding.org/img/media-query-what-makes-responsive-design-possible-sc12.png\" style=\"width: 100%;\"/><br/></p><p>I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the comments.</p></div></div>",
    "createdMsec": 1.445122037612E+12,
    "updatedIso": {
      "$date": "2017-05-08T06:32:23.692Z"
    },
    "updatedMsec": 1.494225143692E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/mediaQuery.zip",
    "videoSource": "//player.vimeo.com/video/123747324",
    "duration": "8:06",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-17T22:47:17.612Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Responsive Design"
    ]
  },
  {
    "_id": "5622d1a88795649145fce181",
    "slug": "fullscreen-video-in-background",
    "title": "Fullscreen Video in Background",
    "subTitle": "In this video you will learn how to set a Full Screen Background Video on your website. Previously we have created a similar effect on our site but with a static image",
    "thumbnail": "fullCoverBackgroundVideo.png",
    "demoUrl": "demo/fullCoverBackgroundVideo/index.html",
    "bodyContent": "<div><p><strong>Reference:&nbsp;</strong><a title=\"Full Cover Background Image\" href=\"https://ilovecodingorg/lessons/fullcover-background-image\">Full Cover Background Image</a></p><p>Welcome to another lesson of iLoveCoding. In this lesson,&nbsp;you will learn how to set a Full-Screen Background Video on your website. Previously we have created a similar effect on our site but with a static image. Look at the reference above for a recap.</p><p><b>Quick Recap:<br></b>We'll be reusing the code that we wrote in our previous <a href=\"https://ilovecoding.org/lessons/full-cover-background-image\" target=\"\">lesson</a>. Make sure you go through that lesson so you don't get confused.</p><p>We cannot put a video in CSS, so we have to put a video tag in HTML document. We are going to put our video tag under &lt;div class =\"container-main\"&gt;. I'll also set autoplay and loop to true like such</p><pre><code class=\"language-javascript\">&lt;video autoplay=\"true\" loop=\"true\"&gt;<br>&nbsp;&lt;source src=\"videosample.mp4\"&gt;<br>&lt;/video&gt;</code></pre><!--EndFragment--><p>Save it, refresh the screen and you will see that the video is playing<br><br><img src=\"//a.ilovecoding.org/img/fullscreen-video-in-background-sc1.png\" style=\"width: 100%;\"><br></p><p><b><span style=\"float: none;\">The next thing we're going to do is to cover the entire area, and that's going to happen via CSS. I'm going to put a style by writing such</span></b><br><!--StartFragment--></p><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">video {<br>&nbsp;min-width:  100%;<br>&nbsp;min-height: 100%;<br>&nbsp;background-size: cover;<br>}</code></pre><!--EndFragment--><p><b>Now if I scroll the page, you will notice that the video is covering the entire 100% of the screen as shown below</b></p><p></p><p><img src=\"//a.ilovecoding.org/img/fullscreen-video-in-background-sc2.png\" style=\"width: 100%;\"><br>The next thing we want to do is to put the text on the top of the video layer.&nbsp;I'm going to set the position to absolute and z-index to -100 like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">video {<br>&nbsp;min-width:  100%;<br>&nbsp;min-height: 100%;<br>&nbsp;background-size: cover;\n position: absolute;\n z-index: -100; <br>}</code></pre><!--EndFragment--><p><img src=\"//a.ilovecoding.org/img/fullscreen-video-in-background-sc3.png\" style=\"width: 100%;\"></p><p>Immediately the text got appeared in the middle as you can see below.</p><p><img src=\"//a.ilovecoding.org/img/fullscreen-video-in-background-sc4.png\" style=\"width: 100%;\"></p><p><b><span style=\"float: none;\">You can also add a YouTube video as well but it's not going to be as perfect as importing a video. For for this example, go to any YouTube video and select embed, copy and paste the iFrame code like such</span></b></p><img src=\"//a.ilovecoding.org/img/fullscreen-video-in-background-sc5.png\" style=\"width: 100%;\"><br>and change the video from iFrame like such:<!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\"><b>iFrame </b>{<br>&nbsp;min-width:  100%;<br>&nbsp;min-height: 100%;<br>&nbsp;background-size: cover;<br>&nbsp;position: absolute;<br>&nbsp;z-index: -100; <br>}</code></pre><!--EndFragment--><p><span style=\"float: none;\"> shows the video but it doesn't load&nbsp;</span></p>                <p></p><div><span style=\"float: none;\"><img src=\" \"><img src=\"//a.ilovecoding.org/img/fullscreen-video-in-background-sc6.png\" style=\"width: 100%;\"><br></span></div><div><span style=\"float: none;\"><br></span></div><div><span style=\"float: none;\">To autoplay the video, we need to add some attribute to the iFrame.&nbsp;I'm going to add &amp;autoplay=1\" and do the same for loop as well &amp;loop=1 like such</span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/fullscreen-video-in-background-sc7.png\" style=\"width: 100%;\"><br></span></div><div><span style=\"float: none;\"><br></span></div><div><span style=\"float: none;\">Save it, refresh the screen and you will see its playing.&nbsp;</span></div><div><span style=\"float: none;\"><br></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/fullscreen-video-in-background-sc8.png\" style=\"width: 100%;\"><br></span></div><div><span style=\"float: none;\"><br></span></div><div><span style=\"float: none;\">I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the comments.</span></div></div>",
    "createdMsec": 1.445122472826E+12,
    "updatedIso": {
      "$date": "2018-12-14T14:05:43.344Z"
    },
    "updatedMsec": 1.529529162902E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/fullCoverBackgroundVideo.zip",
    "videoSource": "//player.vimeo.com/video/123068318",
    "duration": "5:48",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-17T22:54:32.826Z"
    },
    "technology": [
      "Core Javascript",
      "DOM"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "56271e8612c48c710550380c",
    "slug": "custom-filters-in-angular-js",
    "title": "Custom Filters in Angular JS",
    "subTitle": "Append functionality to Angular JS and write your own Custom Filters",
    "thumbnail": "learnAngular-14-custom-filters.png",
    "demoUrl": "demo/learnAngular-14-custom-filters/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.44540429429E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:55:48.918Z"
    },
    "updatedMsec": 1.533750948925E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-14-custom-filters.zip",
    "videoSource": "//player.vimeo.com/video/128278609",
    "duration": "11:39",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:11:34.29Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "56271e4012c48c710550380a",
    "slug": "service-factory-in-angular-js",
    "title": "Service & Factory in Angular JS",
    "subTitle": "Learn what is Service and Factory in Angular JS, and how to use it. Its one of the important pillars to structure an Angular JS application.",
    "thumbnail": "learnAngular-12-service.png",
    "demoUrl": "demo/Learnangular-12-service-1/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445404224117E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:52:14.33Z"
    },
    "updatedMsec": 1.53375073433E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/Learnangular-12-service-1.zip",
    "videoSource": "//player.vimeo.com/video/127808195",
    "duration": "9:25",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:10:24.117Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "56270ab4b8d7393405e40508",
    "slug": "variable-scope-in-javascript",
    "title": "Variable Scope in JavaScript",
    "subTitle": "Variables in JavaScript exist in a particular context. This context can also be called the scope of the variable. Lets see exactly what variable scoping is, its benefits and how to use them",
    "thumbnail": "variableScope.png",
    "demoUrl": "demo/variableScope/index.html",
    "bodyContent": "<p>Today we are going to learn about variable scoping or scopes in variables Let's get started with a basic HTML. Open chrome with Developer Tools opened and let’s get started.</p><pre><code class=\"languagemarkup\">&lt;!doctype html&gt;&#10;&lt;html lang=&#34;en&#34;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&#34;UTF-8&#34;&gt;&#10;  &lt;title&gt;Variables&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;script type=&#34;text/javascript&#34;&gt;&#10;&#9;var a = &#34;ABC&#34;;&#10;&#9;console.log(a);&#10;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;</code></pre><p>So scope in javascript means that in what particular context the variable is valid. For demonstration, let me write a code. After I save it and refresh the screen, I have ABC printed out in the console.</p><p><img src=\"//a.ilovecoding.org/img/variable-scope-in-javascript-sc1.png\" style=\"width: 100%;\"/><br/></p><p>Now I will write a function call it <code>func1( )</code> and declare another variable called <code>var a =</code> and give it a value <code>&#34;DEF&#34;;</code> and I’m going to console.log() again and reference <b>a</b> inside of it.</p><pre><code class=\"language-javascript\">function func1(){&#10;    &#9;var a = &#34;DEF&#34;;&#10;    &#9;console.log(a);&#10;}</code></pre><p>Also I’m going to run the function because the function is not going to run until I call it like such</p><pre><code class=\"language-javascript\">function func1(){&#10;    &#9;var a = &#34;DEF&#34;;&#10;    &#9;console.log(a);&#10;}&#10;Func1();</code></pre><p>Save it Refresh the screen and we have ABC and then DEF printed.</p><p><img src=\"//a.ilovecoding.org/img/variable-scope-in-javascript-sc2.png\" style=\"width: 100%;\"/><br/></p><p>Let me do one more thing and write the <code>console.log( )</code></p><pre><code class=\"language-javascript\">function func1(){&#10;    &#9;var a = &#34;DEF&#34;;&#10;    &#9;console.log(a);&#10;}&#10;Func1();&#10;console.log(a);</code></pre><p>Refresh the screen and ABC gets printed twice</p><p><img src=\"//a.ilovecoding.org/img/variable-scope-in-javascript-sc3.png\" style=\"width: 100%;\"/><br/></p><p>This time I won’t be using the <b>var </b>keyword and see what happens</p><pre><code class=\"language-javascript\">function func1(){&#10;    &#9;a = &#34;DEF&#34;;&#10;    &#9;console.log(a);</code></pre><p>Save it refresh the screen ABC gets printed and DEF gets printed twice</p><p><img src=\"//a.ilovecoding.org/img/variable-scope-in-javascript-sc4.png\" style=\"width: 100%;\"/><br/></p><p><span class=\"code-highlight\"><code>a = &#34;DEF&#34;;</code> i</span>s not a variable declaration or initialization, this is actually variable reassignment or variable assignment. Every time a new variable is declared it has to be like such</p><pre><code class=\"language-javascript\">var a = &#34;DEF&#34;;</code></pre><p>So just to give you more understanding let me create another function inside <code>func1( )</code></p><pre><code class=\"language-javascript\">var a = &#34;ABC&#34;;&#10;&#9;console.log(a);&#10; &#10;&#9;function func1(){&#10;    &#9;var a = &#34;DEF&#34;;&#10;    &#9;console.log(a);&#10; &#10;    &#9;function func2(){&#10;        &#9;var a = &#34;XYZ&#34;;&#10;        &#9;console.log(a);&#10;    &#9;}&#10;    &#9;func2();&#10;&#9;}&#10;&#9;func1();&#10; &#10;&#9;console.log(a);</code></pre><p>Now the first <code>console.log(</code><code><span class=\"code-highlight\">a</span>);</code> will run and print the value of ABC. <br/>The second <code>console.log(</code><code><span class=\"code-highlight\">a</span>);</code> will run in func1( ) <br/>The third <code>console.log(</code><code><span class=\"code-highlight\">a</span>);</code> will run in func2( ) <br/>The fourth <code>console.log(</code><code><span class=\"code-highlight\">a);</span></code> will run.<br/>Save it refresh the screen, ABC is printed for line no 13<br/></p><p><span class=\"code-highlight\">(The first <code>console.log(a));</code> </span>DEF is printed for line no 17</p><p><span class=\"code-highlight\">(The second <code>console.log(a);</code> </span>And for <code>func2( )</code> XYZ is printed for line no 21</p><p><span class=\"code-highlight\">(The third <code>console.log(a);</code> </span>ABC gets printed for line no 27 because it’s outside <code>func1( ) func2( )</code>  so that’s why it prints the one outside its scope.</p><p><img src=\"//a.ilovecoding.org/img/variable-scope-in-javascript-sc5.png\" style=\"width: 100%;\"/><br/></p><p>I will see you in the next tutorial</p>",
    "createdMsec": 1.445399220237E+12,
    "updatedIso": {
      "$date": "2017-05-09T12:03:58.934Z"
    },
    "updatedMsec": 1.494331438934E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/variableScope.zip",
    "videoSource": "//player.vimeo.com/video/103087080",
    "duration": "4:48",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:47:00.237Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Variable Scope"
    ]
  },
  {
    "_id": "562d22f8995935f23b5c56e9",
    "slug": "making-forms-with-bootstrap",
    "title": "Making Forms with Bootstrap",
    "subTitle": "In this video we are going to create forms with Bootstrap",
    "thumbnail": "bootstrap-6-form.png",
    "demoUrl": "demo/bootstrap-6-form/index.html",
    "bodyContent": "",
    "createdMsec": 1.445798648837E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:10:50.899Z"
    },
    "updatedMsec": 1.533751850899E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-6-form.zip",
    "videoSource": "//player.vimeo.com/video/124794815",
    "duration": "9:01",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:44:08.836Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": []
  },
  {
    "_id": "562d21ab995935f23b5c56e6",
    "slug": "creating-navigation-bars-with-bootstrap",
    "title": "Creating Navigation Bars with Bootstrap",
    "subTitle": "In this video you will learn how to layout or how to use classes given by Bootstrap to design the Navigation Bar",
    "thumbnail": "bootstrap-3-navbar.png",
    "demoUrl": "demo/bootstrap-3-navbar/index.html",
    "bodyContent": "",
    "createdMsec": 1.44579831565E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:08:11.839Z"
    },
    "updatedMsec": 1.533751691839E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-3-navbar.zip",
    "videoSource": "//player.vimeo.com/video/124398478",
    "duration": "13:21",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:38:35.65Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "CSS"
    ]
  },
  {
    "_id": "562d2499995935f23b5c56ec",
    "slug": "making-a-full-website-skeleton-with-bootstrap",
    "title": "Project: Making a Full Website Skeleton with Bootstrap",
    "subTitle": "In this video we are going to create a beautiful HTML website like a skeleton",
    "thumbnail": "bootstrap-9-scaffold.png",
    "demoUrl": "demo/bootstrap-9-scaffold/index.html",
    "bodyContent": "",
    "createdMsec": 1.445799065579E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:11:14.11Z"
    },
    "updatedMsec": 1.53375187411E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-9-scaffold.zip",
    "videoSource": "//player.vimeo.com/video/125246895",
    "duration": "13:54",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:51:05.579Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End",
      "Hands-on Project"
    ]
  },
  {
    "_id": "5627134d12c48c71055037fc",
    "slug": "jquery",
    "subTitle": "jQuery is a MUST know JavaScript library for every web developer. In this course you will create multiple web features from scratch, such as a photo-slider, accordian, tab feature and much more. You will have an intimate understanding of how the browser works and how to make interactive websites.",
    "videoSource": "//player.vimeo.com/video/116450101",
    "thumbnail": "jQuery14-0-Intro.png",
    "sourceUrl": "",
    "demoUrl": "",
    "bodyContent": "<p>jQuery is the most popular JavaScript library today that helps Web Designers and FrontEnd Developers make sleek user interfaces and web features on the internet 70%+ Top websites use jQuery on them. Website such as <a title=\"Microsoft Website\" href=\"http://microsoft.com\">Microsoft.com</a>, <a title=\"Amazon Website\" href=\"http://amazon.com\">Amazon.com</a>, <a title=\"Yahoo website\" href=\"http://Yahoo.com\">Yahoo.com</a> etc.</p><h1>Welcome to Learn jQuery in 14 Days</h1><p>In this lesson we are going to learn what is jQuery. So lets get started</p><h2>What is jQuery?</h2><p>jQuery is a JavaScript library that is tremendously helpful to use when doing website design. You may ask what is a JavaScript library? A JavaScript library is a collection of several pre-coded features that a web designer would commonly use.</p><p><b>For example:<br/></b>A web designer would commonly want to select an element from an HTML page and add classes to it or add styles to it, yes you can do that same behavior with pure JavaScript but a web designer or a web developer would have to write three or four lines of code to accomplish that task like adding a class to an element. But by using jQuery you can do the same task by writing one line of code. </p><p>It's not about writing less code but jQuery's APIs is another word for features or functions that jQuery interface has. You are not just going to write less code but your code is going to be more elegant, more user friendly and more structured. This is the reason why jQuery is so popular and widely accepted. </p><p>If you head over to jQuery <a href=\"http://jquery.com/\" target=\"\">website</a> you will see their tag line is &#34;Write less, do more&#34;.</p><p>If you were to write pure JavaScript to accomplish simple task, you might have to handle the H cases because different browsers react differently and have different versions of JavaScript running on themselves. So you might have to write additional lines of code to make sure that your piece of code or your particular functionality is similarly compatible with Internet explorer 6, 7, 8, Firefox, Safari, Opera and Chrome etc. </p><p>But if you use jQuery, these people who have contributed to the jQuery library, have already coded those scenarios in the background that if there are other compatibility issues, there are patches available so you just simply write one line of code that you know will work across multiple browsers no matter what browser it is.</p><h3>jQuery popularity:</h3><p><span>If you to the website called <a href=\"http://builtwith.com/\" target=\"\">BuiltWith</a> you can find out what websites are built with jQuery. If I type jQuery and hit enter and go to jQuery usage statistics </span><br/></p><p><img src=\"//a.ilovecoding.org/thumb//thumb/jquery_6-02-01_0352.png\" style=\"width: 100%;\"/><span><br/></span></p><div><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">You will see that according to Quantcast top 10k websites use jQuery.<br/></span><br/></div><div><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\"><img src=\"//a.ilovecoding.org/thumb//thumb/jquery_2016-02-01_0356.png\" style=\"width: 100%;\"/><br/></span></div><p><font face=\"inherit\"><span><span id=\"selectionBoundary_1454282463745_31176708126440644\" class=\"rangySelectionBoundary\">&#65279;</span>If I go to Microsoft.com and right click view page source, you will find that they're also using jQuery, same in the case of Amazon.com they're also using jQuery. In the image below you see the photo slider? This slider feature maybe built via jQuery. jQuery is used to </span></font><span>accomplish</span><font face=\"inherit\"><span> these kind of user friendly </span></font><span>tasks.</span><font face=\"inherit\"><span> <br/><span id=\"selectionBoundary_1454282463744_37302709417417645\" class=\"rangySelectionBoundary\">&#65279;</span></span></font><br/><img src=\"//a.ilovecoding.org/thumb//thumb/jquery_2016-02-01_0404.png\" style=\"width: 100%;\"/><br/></p><p><font face=\"inherit\"><span>Another example could be if you hover over the departments section on Amazon, you notice the rest of the screen becomes black or dark grey. This feature is also </span></font>accomplish able by jQuery.</p><p><img src=\"//a.ilovecoding.org/thumb//thumb/jquery_2016-02-01_0408.png\" style=\"width: 100%;\"/><span><br/></span></p><p>Let's look into some other examples as well. If you go to this <a href=\"http://old.hellobar.com/\" target=\"\">website</a> it puts the top bar on the top of the page. This feature is not very difficult to create purely via jQuery.<br/></p><p><img src=\"//a.ilovecoding.org/thumb//thumb/jquery_2016-02-01_0413.png\" style=\"width: 100%;\"/><br/></p><p><b>jQuery Accordion</b><br/></p><p>You see blow the jQuery accordion, If you click on handle 1 it shows up, if you click on handle 2 the first handle disappears and loads the handle 2 and so for the for the rest. We can also build that feature easily via jQuery<br/></p><p><img src=\"//a.ilovecoding.org/thumb//thumb/jquery_2016-02-01_0419.png\" style=\"width: 100%;\"/><br/></p><p><span>You can also accomplish animation via jQuery. Lets look at another example. In the image below if you go to twtiter &gt; sign up page and type some random stuff in the email address tab, </span><span>it immediately checks and tells &#34;doesn't look like a valid email&#34; this particular behavior of popping up the new message based on the particular input can be accomplished via jQuery.</span><br/></p><p><img src=\"//a.ilovecoding.org/thumb//thumb/jquery_2016-02-01_0424.png\" style=\"width: 100%;\"/><br/></p><p><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">Another thing you notice based on the information that we provided it gives us some suggestion of the username, this is also can be done with jQuery. The website communities with the server side and figures out in their database like that particular user does not exist so they give suggestion. These features are easily accomplish able by jQuery. </span><br/><br/><font face=\"inherit\"><span>Once you understand the </span></font>fundamentals<font face=\"inherit\"><span> of jQuery, you can go out and create anything that you want for your website. The </span></font>beauty<font face=\"inherit\"><span> about iLoveCoding is that you don't just learn the fundamentals of jQuery but also we are going to do mini projects in which you are going to see how jQuery library can be used in practice and you can create cool practical features for your website.</span></font></p><p><font face=\"inherit\"><span>I hope you enjoyed this intro video, If you have any question please leave your comments below, I'll talk to you in the next lesson. Goodbye :)</span></font></p>",
    "title": "Learn jQuery in 14 days",
    "courseTotalDuration": "223:12",
    "access": 0,
    "level": 0,
    "active": true,
    "enabled": true,
    "createdIso": {
      "$date": "2015-10-25T04:23:41.346Z"
    },
    "createdMsec": 1.445401421346E+12,
    "updatedIso": {
      "$date": "2018-06-18T23:11:07.498Z"
    },
    "updatedMsec": 1.529363467498E+12,
    "technology": [
      "jQuery"
    ],
    "topic": [
      "jQuery",
      "Front-End"
    ],
    "lesson": [
      "562d29b19068f91a3cdf1c5c",
      "562d2a3c9068f91a3cdf1c5d",
      "562d2a909068f91a3cdf1c5e",
      "562d2b8a9068f91a3cdf1c5f",
      "562d2bea9068f91a3cdf1c60",
      "562d2c189068f91a3cdf1c61",
      "562d2c5e9068f91a3cdf1c62",
      "562d31809068f91a3cdf1c63",
      "562d31b39068f91a3cdf1c64",
      "562d321d9068f91a3cdf1c65",
      "562d324d9068f91a3cdf1c66",
      "562d32799068f91a3cdf1c67",
      "562d32b29068f91a3cdf1c68",
      "562d32dd9068f91a3cdf1c69",
      "562d33639068f91a3cdf1c6a",
      "562d372b9068f91a3cdf1c6b",
      "562d375a9068f91a3cdf1c6c",
      "562d37a99068f91a3cdf1c6d"
    ]
  },
  {
    "_id": "5622d1158795649145fce17f",
    "slug": "self-invoking-anonymous-function-what-is-it-why-and-how-to-use-it",
    "title": "Self Invoking Anonymous Function: What is it? & Why and How to Use It",
    "subTitle": "Learn what Self Invoking Anonymous Functions are, and why and how to use them",
    "thumbnail": "selfInvokingFunction.png",
    "demoUrl": "",
    "bodyContent": "<p><b>Transcript:</b></p><p>Hello and welcome to another lesson of iLoveCoding In this lesson, we are going to learn what SelfInvoking Anonymous functions are and how and when and where to use them.</p><p>BTW self-invoking anonymous functions are used on all major websites. It's actually used by jQuery itself. So let's see what it looks like.</p><p>So I'm going to write a function and call it doing like such </p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\">Function doing( ) {</code><br/>console.log('i am doing');<br/>}</pre><p>Save it, refresh the screen and nothing happens because the function is not executing yet as you can see</p><p><img src=\"//a.ilovecoding.org/img/self-invokingsc1.png\" style=\"width: 100%;\"/>​</p><p>I'm going to call that function by writing doing (); like such </p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\">Function doing( ) {</code><br/>console.log('i am doing');<br/>}<br/><b>doing ();</b><br/></pre><p><img src=\"//a.ilovecoding.org/img/self-invokingsc2.png\" style=\"width: 100%;\"/>​</p><p>Now what if you want your application to have a function that runs itself when you want a particular function to run on the load. You can add brackets ( and invoke it like such )( );</p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\"><b>(</b>Function doing( ) {</code><br/>console.log('i am doing');<br/>}<b>)();</b><br/></pre><p>Save it, refresh the screen and &#34;i am doing&#34; gets printed on the screen in our console</p><p><img src=\"//a.ilovecoding.org/img/self-invokingsc3.png\" style=\"width: 100%;\"/>​</p><p>This is a format of a Self-Invoking Annoymous function </p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\"><b>(</b>Function( ) {</code><br/>console.log('i am doing');<br/>}<b>)();</b></pre><p>Now this particular technique is used by all major websites and web applications. Even the most popular JavaScript library jQuery also uses self-invoking anonymous function </p><p><img src=\"//a.ilovecoding.org/img/self-invokingsc4.png\" style=\"width: 100%;\"/>​</p><p>I am going to show you another example. Go to Facebook.com and open chrome developer tools go to console and hit CTRL +  P you will be able to search for anything in the sources tab.</p><p>I am going to write <b>.js</b> and open any file </p><p><img src=\"//a.ilovecoding.org/img/self-invokingsc5.png\" style=\"width: 100%;\"/>​</p><p>This is the self-invoking function </p><p><img src=\"//a.ilovecoding.org/img/self-invokingsc6.png\" style=\"width: 100%;\"/>​</p><p>And if I go all the way down, that's where it's ending as you can see below</p><p><img src=\"//a.ilovecoding.org/img/self-invokingsc7.png\" style=\"width: 100%;\"/>​</p><p>There might be multiple functions as well. There's another format through which you can do the same thing. Instead of putting the brackets, you can actually use the exclamation point like such </p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\"><b>!</b>Function doing( ) {</code><br/>console.log('i am doing');<br/>}<b>)();</b></pre><p>This technique was originally used by Facebook and Twitter but seems like they have reverted back to the older format. I'm going to save it, refresh the page and the results are the same.</p><p><img src=\"//a.ilovecoding.org/img/self-invokingsc8.png\" style=\"width: 100%;\"/>​</p><p>Now you know what is self-invoking anonymous function. Now the question is why to use it? One reason is that if you want to run some code, and you sure want it to run when the application loads so you want to do it. </p><p>And another reason you might want to do is limiting the scope of your variables For example you have normal functions and a variable like such </p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\"><b>var a = 'somevalue'</b></code><br/>function doing( ) { <br/>console.log('i am the function');<br/>}</pre><p>Save it, refresh the screen and if I type <b>a</b> in the console and hit enter, it's going to print out the &#34;some value&#34; as you can see below</p><p><img src=\"//a.ilovecoding.org/img/self-invokingsc9.png\" style=\"width: 100%;\"/>​</p><p>Since <b>a</b> is attached to the global object and is accessible via the console, If I type <b>window.a</b> it's going to print the same thing </p><p><img src=\"//a.ilovecoding.org/img/self-invokingsc10.png\" style=\"width: 100%;\"/>​</p><p>But if I pass var a = 'somevalue' in a self-invoking anonymous function like such, then it's not going to be accessible via the console. </p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\"><b>!function ( ){<br/>   console.log(‘i am doing’);<br/><br/>   var a = ‘some value’; <br/><br/>   function doing( ){ <br/>     console.log(‘i am the function’);<br/>}<br/><br/>}();</b></code></pre><p>Now if I type <b>a;</b> and hit enter, it's going to give an undefined error as you can see below</p><p><img src=\"//a.ilovecoding.org/img/self-invokingsc11.png\" style=\"width: 100%;\"/>​</p><p>If if I write <b>window.a</b> and hit enter, it's still going to return undefined. It is vital for us to protect our variables that is actually in our application, so other plugins, third party apps, hackers etc actually cannot manipulate our code and make our website do bad stuff</p><p>Some apps or third party apps can also conflict with the applications and mess things up. That can just break your code. This is highly recommended that your code should be inside self-invoking anonymous function. So that's pretty much it.</p><p>I hope you enjoyed this lesson. If you have any question, leave your comments below. </p>",
    "createdMsec": 1.445122325771E+12,
    "updatedIso": {
      "$date": "2018-01-22T22:10:36.2Z"
    },
    "updatedMsec": 1.516659036201E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/selfInvokingFunction.zip",
    "videoSource": "//player.vimeo.com/video/123164500",
    "duration": "6:15",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-17T22:52:05.771Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Self-Invoking"
    ]
  },
  {
    "_id": "56270e4fb8d7393405e40514",
    "slug": "domain-name-system-dns",
    "title": "Domain Name System (DNS)",
    "subTitle": "Everything you need to know to understand the Domain Name System (DNS). You will learn how a website reaches you.",
    "thumbnail": "DNS.png",
    "demoUrl": "",
    "bodyContent": "<p></p><h1 class=\"ngbinding\" style=\"text-align: center;\">Domain Name System</h1><!--EndFragment--><p>In this lesson you will learn everything you need to know to understand the Domain Name System (DNS) You will learn how a website reaches you. You will also learn what is a web host, what is a domain host, what is a DNS and what you need to put your website on the internet.</p><p>When you go to a website, example.com, the internet has to figure out what example.com means. There are tons of servers and computers on the internet, it translate example.com into a computer from a millions of computer on the internet where your example.com website is hosted.</p><p>DNS are the biggest collection of all the IP address, all the domain names and the information of all the computers which are connected to the internet. It has all the information available.</p><p>So when you request example.com, it goes to the DNS record and figures out what IP address exactly the website example.com is pointing to. The IP address is hosted by your domain company like Blue host, Go Daddy, media temple etc.</p><p>DNS is basically a collection of all the IP address and Domain names on the internet.</p><p>If you go to Google.com and open chrome developer tools and hit network tab, you may notice there's a remote address which is an IP address; and is stored somewhere in their DNS record.</p><p><img src=\"//a.ilovecoding.org/img/domain-name-system-dns-sc1.png\" style=\"width: 100%;\"/><br/></p><p>Every computer has a unique IP address; So it knows exactly what computer to go to and pull up the website. The DNS information is hosted by a DNS server or a name server, which has a record of all this information.</p><p>This is what a DNS record looks like. iLoveCoding.org is hosted on the server which is highlighted below</p><p><img src=\"//a.ilovecoding.org/img/domain-name-system-dns-sc2.png\" style=\"width: 100%;\"/><br/></p><p><img src=\"//a.ilovecoding.org/img/domain-name-system-dns-sc3.png\" style=\"width: 100%;\"/><br/></p><p>You may notice some MX records as well which are the email records. For example, if you're using Gmail service then it's going to show that the MX record is hosted by google as you can see above in a screenshot of DNS.</p><p>When a browser knows the DNS and the IP address of a particular website, a browser will go to that particular web host which will have all the content of a website. </p><p>Domain and Web hosting are cheap from $10 to $14/year and $4 to $100/ month. Few companies offer both service Domain and Web hosting.</p><p>The record of DNS is a collection of a lot of servers, which are managed by many organizations such as IANA(Internet Assigned Numbers Authority) and ICANN(Internet Corporation for Assigned Names and Numbers). These records are heavily cached by ISPs throughout the world for speed.<br/></p><p>Whenever you make a change to your DNS record, it will take anywhere from 3 hours to 24 hours for your record to be updated throughout the internet.</p><p>DNS server doesn't just host your records for your domain, it actually host all kind of pointing information. where it tells the internet where to point to when the particular domain record is needed for example Domain, Sub Domain, Email Server etc.</p><p>I hope you enjoyed this lesson. If you have any question, please leave your comments below and I'll reply to your questions.</p>",
    "createdMsec": 1.445400143984E+12,
    "updatedIso": {
      "$date": "2017-05-04T07:15:58.707Z"
    },
    "updatedMsec": 1.493882158707E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/121671459",
    "duration": "8:17",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T04:02:23.984Z"
    },
    "technology": [
      "Web Hosting"
    ],
    "topic": [
      "DNS"
    ]
  },
  {
    "_id": "56270c6db8d7393405e4050e",
    "slug": "building-calculator-app-with-jquery",
    "title": "Build a Calculator App with jQuery",
    "subTitle": "We will build a fully functioning Basic Calculator with jQuery. Learn how to use all the basic concepts of JavaScript and building something practical and ready for launch.",
    "thumbnail": "calculator.png",
    "demoUrl": "demo/calculator/index.html",
    "bodyContent": "<div class=\"alert alert-warning\"><strong>To understand this lesson, You must know</strong>&nbsp;how to use <a title=\"Variable: What is variables in JavaScript\" href=\"https://ilovecodingorg/lessons/variable-what-is-variables-in-javascript\">Variable</a>,&nbsp;<a title=\"Functions\" href=\"https://ilovecoding.org/lessons/functions\">Function</a>, <a title=\"Arrays\" href=\"https://ilovecoding.org/lessons/arrays\">Arrays</a>, <a title=\"Document Object Model\" href=\"https://ilovecoding.org/lessons/dom-document-object-model-everything-you-need-to-know\">Document-Object-Model</a>, and <a title=\"First Web Page\" href=\"https://ilovecoding.org/lessons/first-web-page\">Basic HTML</a>. <a title=\"Learn JavaScript in 14 Days\" href=\"https://ilovecoding.org/courses/js2\">Learn JavaScript Correctly</a>, and&nbsp;&nbsp;<a title=\"Learn JavaScript in 14 Days\" href=\"https://ilovecoding.org/courses/learn-jquery-in-14-days\">Learn jQuery in 14 days</a>&nbsp;would be a good pre-requisite course to take before&nbsp;you do this project.</div>",
    "createdMsec": 1.445399661237E+12,
    "updatedIso": {
      "$date": "2018-12-14T13:48:21.53Z"
    },
    "updatedMsec": 1.533748605357E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/calculator.zip",
    "videoSource": "//player.vimeo.com/video/100666297",
    "duration": "35:03",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:54:21.237Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "jQuery",
      "Front-End",
      "Project"
    ]
  },
  {
    "_id": "562d2bea9068f91a3cdf1c60",
    "slug": "do-something-with-jquery",
    "title": "Do Something with jQuery",
    "subTitle": "The second half of jQuery - Do Something. Once the HTML elements are selected, now you can change colors and layout. You can also add animations, attach events and much more to create interactive web features.",
    "thumbnail": "jQuery14-5-doSomething.png",
    "demoUrl": "demo/jQuery14-5-doSomething/index.html",
    "bodyContent": "<h1>Do Something with jQuery</h1><p>Welcome to another lesson In previous three videos we have learned that jQuery is find something, do something library. That means, find something in the DOM or HTML document and then do something with it. We looked at numerous ways on how you can query the DOM or find something in the DOM and select it. </p><p>In this lesson, we are going to start looking into how to do something, with what you have selected from the DOM.</p><p>Let's say in the console, I query the DOM and want to find any class in the HTML document with a class of header, I can simply write <code>$('.header')</code> and hit enter and add some CSS to change the background color to red like such <span style=\"float: none;\"><code>$('.header').css('backgroundcolor', 'red')</code> save it, refresh the screen and you see the background color of the selected element is now red</span></p><p><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc1.png\" style=\"width: 100%;\"/></p><p>I'm going to select the body element and add class to it and passing a parameter in quotes lets say 'newClass' like such <code>$('body').addClass('newClass')</code> and if I hit enter and go to the element you see the newClass is now added to the body element</p><p><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc2.png\" style=\"width: 100%;\"/><br/></p><p><span style=\"float: none;\">If you want the <b>newClass2 </b>to be added, you can simply write <b>newClass2 </b>and it will be added as well. </span></p><p>The reason jQuery is so popular is because of it's simple APIs and the way you use the APIs is so simple tha's why the adoption rate of this library is so high. The way it works in the background is so beautiful, that's why its performance is great, it's easy to learn and that's why it's so popular.</p><p>I have created a boilerplate project and it has the HTML document and two style sheets style1.css and style2.css. In my style1.css I have some simply CSS written as you can see below </p><p><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc3.png\" style=\"width: 100%;\"/><br/></p><p>The only difference between style1.css and style2.css is that the color of background is red. In the HTML document if I change it to style2.css and refresh the screen you will see the background color is now red</p><p><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc4.png\" style=\"width: 100%;\"/><br/></p><p><b>.attr( )<br/></b>Now we will swap our styles by using the .attr method of JavaScript. So let's say you want to query the DOM and find the link element and then find it's attribute, which attribute we want to find? The href attribute so we can simply write in the console</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('link').attr('href')</code></pre><!--EndFragment--><p><span style=\"float: none;\">Hit enter and you get the value of href, which is style2.css<br/></span></p><div><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc5.png\" style=\"width: 100%;\"/><br/><p>If you want to change that value, you can put a comma and pass another parameter inside the quotes like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('link').attr('href', 'style1.css');</code></pre><span style=\"float: none;\">What happenign above is that it queries the DOM and finds the link element, goes to the attr the attribute of the link element, finds its href attribute and changes the value to style1.css</span></div><div><span style=\"float: none;\">Save it, refresh the screen and you see the style1.css style took effect when the page loaded</span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc6.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><b>.html( ) </b></span></div><div>This time I'll query the DOM and find all the <b>ul </b>element and what's inside I can simple write <code>$('ul')</code> hit enter, it will return the <b>ul</b> elements and if you want to find the HTML I can write </div><div><br/></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul').html()</code></pre><div>if I hit enter, you will see all the elements which are inside the <b>ul </b>tag</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc7.png\" style=\"width: 100%;\"/><br/></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\">If you write <code>.html( )</code> without writing anything inside the quotes, then it will get and return what is inside that element. </span></div><div><span style=\"float: none;\">If you want to replace it, you can simple write any value inside the quotes and it will replace it. As shown below, I have replaced the list items with another list item of <b>ONE</b></span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc8.png\" style=\"width: 100%;\"/><br/><br/><!--StartFragment--><span style=\"float: none;\"><code>.html( )</code> is getting something<br/></span><span style=\"float: none;\"><code>.html('any value')</code> is setting something</span><!--EndFragment--><br/><br/><b>.text( )</b> <br/>If you want to select the text of the div element with a class of header you can simply write<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('.header').text()</code></pre><!--EndFragment--><p><span style=\"float: none;\">Hit enter and it will return text of the header, you can also get the html of the header as well but then you will have to change it to the html like such</span></p><div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('.header').html()</code></pre><span style=\"float: none;\"><!--EndFragment--><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc9.png\" style=\"width: 100%;\"/><br/></span><br/><b>Difference between the text and the html method</b></div><div><span style=\"float: none;\">As shown in the screenshot below, html returns the full syntax while the text method only returns the text of the particular <b>ul </b>elements</span><br/><br/><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc10.png\" style=\"width: 100%;\"/><br/><div><div><br/><div>If you want to replace the text, you can simply write the value inside the quotes after <code>.text</code> like such <code>$('.header').text('Tis is a new text replacement')</code> hit enter and you see the text is now changed</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc11.png\" style=\"width: 100%;\"/><br/><b>.val( ) </b></div><div><b><span style=\"float: none;\">If you want the input to be selected, you can simply write <code>$('input')</code> hit enter and you see it returns the 3 of them as shown below </span></b></div><div><b><span style=\"float: none;\"><br/></span></b></div><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc12.png\" style=\"width: 100%;\"/><br/><div><b><span style=\"float: none;\"></span><br/><b>If you only want to select the first input, you can simplt write <code>$('input').first( )</code> hit enter and you will only get the first input </b></b></div><div><b><b><br/></b></b></div><div><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc13.png\" style=\"width: 100%;\"/><b><b><span class=\"Apple-converted-space\"><br/></span></b><!--EndFragment--><br/><b><b>Now if you want to get the value of the first input you can simply write <code>$('input').first( ).val( )</code> hit enter and you see there's no value returned, because we didn't set any value to it. But if you want to set the value to it you can do that like such <b><b><b><code>$('input').first( ).val('This is the input')</code> hit enter and you see it changed the value</b></b></b></b></b></b></div><div><b><b><b><b><b><b><br/></b></b></b></b></b></b></div><div><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc14.png\" style=\"width: 100%;\"/><b><b><b><br/></b></b></b></div><div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\">You can do the same with buttons as well. If you want to get the input which has a type of button. You can simply write <code>$('input[type=&#34;button&#34;]')</code> and give it a value like such <span style=\"float: none;\"><code>$('input[type=&#34;button&#34;]').val('button value changed')</code> hit enter and you see the button value is now changed.</span></span></div><div><span style=\"float: none;\"><span style=\"float: none;\"><br/></span></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/do-something-with-jquery-sc15.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\">The reason we've been using the console is that it's easier for demonstration purpose. We learned in our previous videos that when you load the jQuery in the project, you can also access it through the console. <br/><br/></span></div><div><span style=\"float: none;\">Of course in the practical world, you will be using the same lines of code in the text editor. </span></div><div><span style=\"float: none;\">There are numerious APIs out there, you don't have to worry about all of the APIs. You just need to know the basic ones. </span></div><div><span style=\"float: none;\">I hope you enjoyed this lesson, if you have any question please leave your comments below. I'll talk to you in the next lesson. Goodbye :) </span></div></div></div></div></div>",
    "createdMsec": 1.445800938228E+12,
    "updatedIso": {
      "$date": "2017-05-04T07:40:43.909Z"
    },
    "updatedMsec": 1.493883643909E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-5-doSomething.zip",
    "videoSource": "//player.vimeo.com/video/116486717",
    "duration": "11:39",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:22:18.228Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "Do Something with jQuery"
    ]
  },
  {
    "_id": "562d29b19068f91a3cdf1c5c",
    "slug": "getting-started-with-jquery",
    "title": "Getting Started with jQuery",
    "subTitle": "You will learn how to setup jQuery on your website, and I will show you how to get started writing your first jQuery line of code and actually produce something.",
    "thumbnail": "jQuery14-1-gettingStarted.png",
    "demoUrl": "demo/gettingStarted/index.html",
    "bodyContent": "<h3>What is jQuery</h3><p>Welcome to <a href=\"https://ilovecodingorg/courses/learnjquery-in-14-days\" target=\"\">learning jQuery in 14 days</a>. Today we are going to get started on using jQuery. We are going to learn how to install jQuery in your project, in your website and then we are going to see how jQuery can be used in your page. We are going to create a small feature to see how it's used.To get started we are going to start off with this simple HTML</p><pre><code class=\"language-javascript\">&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&#34;en&#34;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&#34;UTF-8&#34;&gt;&#10;  &lt;title&gt;Getting Started with JQuery&lt;/title&gt;&#10; &lt;/head&gt;&#10;&lt;body&gt;</code></pre><p>Open the chrome developer tool and you see nothing's in there it's empty</p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery1.png\" style=\"width: 100%;\"/><br/></p><p>Now I am going to import the jQuery library in our project. The way to do that is we go to jQuery.com and we are going to download the library from their website. Open it and click on the download button</p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery2.png\" style=\"width: 100%;\"/><br/></p><p>We have two versions the jQuery 1.x and jQuery 2.x (x could be version 1.9, 1.10, 1.11 etc) it could be one of those or it could be the second edition. </p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery3.png\" style=\"width: 100%;\"/><br/></p><p>So we are going to go with the latest one of course. You notice there are two versions available. The compressed, production jQuery and the uncompressed, development jQuery.</p><p>For the purpose of demonstration I am going to download both files and import it in sublime text. Here you see the jQuery-2.1.1.min.js is the compressed edition.</p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery4.png\" style=\"width: 100%;\"/><br/></p><p>While the jQuery-2.1.1.js without the min is the development version.</p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery5.png\" style=\"width: 100%;\"/><br/></p><p>Hence you see the difference, It's the same code but it is without the spaces, and a lot of the variables and the naming conventions are converted into generic names like a's and b's. Although the code is going to function exactly the same way, it's just that it is much more optimized and it's going to load faster. For this tutorial we will be using jQuery-2.1.1.js.We are going to import jQuery in our HTML. To accomplish that, write a script tag and add src and add the file name jquery-2.1.1.js like such <br/>&lt;script src=&#34;jquery-2.1.1.js&#34;&gt;&lt;/script&gt;</p><pre><code class=\"language-javascript\">&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&#34;en&#34;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&#34;UTF-8&#34;&gt;&#10;  &lt;title&gt;Getting Started with JQuery&lt;/title&gt;&#10;  &lt;script src=&#34;jQuery-2.1.1.js&#34;&gt;&lt;/script&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;</code></pre><p>Save it and go to browser and refresh the page there are no errors so it seems like the jQuery loaded</p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery6.png\" style=\"width: 100%;\"/><br/></p><p> So just to test that this thing worked I am going to write a small script. I am going to write<br/>&lt;script type=&#34;text/javascript&#34;&gt;&lt;/script&gt; and in that script tag, I am going to write <strong>document.ready</strong> and pass a function to it and in that function I am going to write $('body').addClass('awesome-body'); as shown below</p><pre><code class=\"language-javascript\">&lt;script type=&#34;text/javascript&#34;&gt;&#10;    $(document).ready(function(){&#10;          $('body').addClass('awesome-body');   &#10;    });&#10;  &#10;&lt;/script&gt;</code></pre><p>Save it refresh the screen and you see our body has a class of &#34;<strong>awesome-body</strong>&#34; So we know that jQuery is working</p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery7.png\" style=\"width: 100%;\"/><br/></p><h3>Explanation</h3><p>So what happened is that we imported our jQuery library which is in our project. The SRC which means source imported library in our project. Once it did then we created another script tag and inside we wrote JavaScript code as shown above. The <b>$</b> sign is a short form for jQuery so what's happening here is jQuery(document).ready(function($) it says jQuery, take the entire HTML document and when it is ready (ready means when it's fully loaded) run this function $('body').addClass('awesome-body'); jQuery get the body element and add class to it and what's the name of the class? it's &#34;awesome-body&#34; So in essence we can re-write the code and instead of saying jQuery we can write the <b>$</b> sign and say awesome-body2.</p><pre><code class=\"language-javascript\">$(document).ready(function($){&#10;          $('body').addClass('awesome-body2');&#10;      $('div p').css('color', 'red');&#10;    &#10;    });</code></pre><p>Save it refresh the screen and you notice we have two classes added to our body &#34;awesome-body&#34; and &#34;awesome-body2&#34; It's a lot faster if I write the <b>$</b> sign so therefore, I am going to stick with second convention to use a <b>$</b> sign</p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery8.png\" style=\"width: 100%;\"/><br/></p><p>There are other JavaScript libraries out there such as <a href=\"http://mootools.net/\" target=\"\">mootools</a>, <a href=\"http://prototypejs.org/\" target=\"\">prototype </a>and <a href=\"http://yuilibrary.com/\" target=\"\">YUI </a>these libraries are just similar to jQuery which also use a convention of using <b>$</b> sign as a replacement or short hand for the name of their library. So the prototype library also uses the<b> $ </b>sign to represent prototype. So let's say if your project is using jQuery and also prototype library it might be confusing for the code to say &#34;am I referring to the $ in to the jQuery or are we referring to the $ sign in the prototype library?. So in that case whenever you write the outer function, I can write jQuery and pass a parameter of $</p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery9.png\" style=\"width: 100%;\"/><br/></p><p>The entire function which is running below, when it's referring to <b>$</b> it's always referring to the jQuery</p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery10.png\" style=\"width: 100%;\"/><br/></p><p>And that's the convention we are going to be using through out our entire course. Whenever you are using other libraries other than jQuery there's no conflicts with other libraries. </p><p>Now I want to talk to you about the fundamental way we are going to see jQuery. So jQuery is a lot of times called the find something, do something library. What does it mean? So if you see a statement $('body').addClass('awesome-body2'); it represents how jQuery works throughout it's conventions and it's APIs. </p><p>So the first part here $('body') it is finding something, it is finding the body elements inside our HTML document. </p><p>In the second part addClass it does something, what does it do? It adds a class to the body element so if you think of jQuery as find something do something library it's going to be much more easier to grasp the entire library and the features that we are going to be creating is going to come more natural to you. So just to give you another example let's say our body has a div tag and it has an <b>id</b> of main <code>&lt;div id=&#34;main&#34;&gt;</code> and inside it has a <b>p</b> tag and it has some paragraph in it.</p><pre><code class=\"language-javascript\">&lt;div id=&#34;main&#34;&gt;&#10;    &lt;p&gt;This is some gibberish text&lt;/p&gt;&#10;  &lt;/div&gt;</code></pre><p>Now we can also do the same thing by writing find the same div and inside the div there's a <b>p</b> element, find that and then add some CSS to it so the function name is CSS and it takes two parameters, one is which attribute they want to add and let's say we want to change the color to red we can simply write $('div p').css('color', 'red');</p><pre><code class=\"language-javascript\">&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&#34;en&#34;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&#34;UTF-8&#34;&gt;&#10;  &lt;title&gt;Getting Started with JQuery&lt;/title&gt;&#10;  &lt;script src=&#34;jquery-2.1.1.js&#34;&gt;&lt;/script&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&#10;  &lt;div id=&#34;main&#34;&gt;&#10;    &lt;p&gt;This is some gibberish text&lt;/p&gt;&#10;  &lt;/div&gt;&#10;  &#10;  &lt;script type=&#34;text/javascript&#34;&gt;&#10;    jQuery(document).ready(function($){&#10;    &#10;      $('body').addClass('awesome-body2');&#10;      $('div p').css('color', 'red');&#10;    &#10;    });&#10;  &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;</code></pre><p>Save it refresh the screen and you see it printed &#34;This is some gibberish text&#34;</p><p><img src=\"//a.ilovecoding.org/img/getting-started-with-jquery11.png\" style=\"width: 100%;\"/><br/></p><p>So that just concludes how jQuery is imported in our project just by importing the library from the script tag and we can download it from jQuery.com and also how to get started with jQuery. So writing a script tag in which we say jQuery when the document is ready then we are going to start writing our code which we will do like find something like a body element or div <b>p</b> element and then do something with it such as adding a class or style. Of course jQuery has tremendously hard up functions or methods which can help you animate things, find things, add content, remove content and stuff like that and we are going to look at in our subsequent lessons. Thank you. I'm going to see you in the next lesson. Goodbye :)</p>",
    "createdMsec": 1.445800369354E+12,
    "updatedIso": {
      "$date": "2017-03-27T02:18:53.065Z"
    },
    "updatedMsec": 1.490581133065E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/gettingStarted.zip",
    "videoSource": "//player.vimeo.com/video/116450102",
    "duration": "10:21",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:12:49.353Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": []
  },
  {
    "_id": "56271c3012c48c7105503800",
    "slug": "building-blocks-and-pillars-of-angular-js",
    "title": "Building Blocks and Pillars of Angular JS",
    "subTitle": "Outlining the 6 basic pillars of Angular JS, and some of the new concepts we are going to learn thoughout this course",
    "thumbnail": "learnAngular-2-pillars.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.445403696876E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:46:14.525Z"
    },
    "updatedMsec": 1.533750374525E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/126784597",
    "duration": "2:49",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:01:36.876Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "562d2a909068f91a3cdf1c5e",
    "slug": "find-something-query-the-dom-with-jquery-part-2",
    "title": "Find Something / Query the DOM with jQuery - part 2",
    "subTitle": "Additional ways to find elements within your website / Document Object Model(DOM) so once they are selected, we can take some action.",
    "thumbnail": "jQuery14-2-selectors-2.png",
    "demoUrl": "demo/jQuery14-3-selectors-2/index.html",
    "bodyContent": "<h1>What are Selectors in jQuery Part 2</h1><p>In the last <a href=\"https://ilovecodingorg/lessons/findsomething-query-the-dom-with-jquery-part-1?playlist=learn-jquery-in-14-days\" target=\"\">video</a> we talked about how to use jQuery to select something or find something in the DOM. As shown below in the image, the area underlines in white is the find something part of jQuery while the area underlined in red is the do something part of jQuery.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc1.png\" style=\"width: 100%;\"/><br/></p><p>In today's video we are going to go deeper and learn thirteen new types of selectors in jQuery. If you head over to the jQuery <a href=\"jquery.com\" target=\"\">website</a> and click API Documentation and scroll all the way to the selectors area, you will see there are different kinds of selectors in jQuery. A normal web developer does not remember all the selectors but the basic ones are the ones that must be remembered. We discussed these selectors in the previous video</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc2.png\" style=\"width: 100%;\"/><br/></p><p>If you head over to jQuery <a href=\"http://api.jquery.com/category/selectors/\" target=\"\">website</a> you will see there are so many selectors, For instance if you use :animated Selector, It will select all elements that are in the progress of an animation at the time the selector is run. So lets say there's an animation going on, and :animated Selector triggers, the animated divs or the elements are going to be selected by that particular selector.</p><p>We are going to look at these 13 selectors as shown below</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc3.png\" style=\"width: 100%;\"/><br/></p><p>I have some basic HTML document opened, It has an header tag with a class of mysection, I have also imported CDN from cloud fare as shown below</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc4.png\" style=\"width: 100%;\"/></p><p><b>1. Parent &gt; Child<br/></b><b>2. Ancestor descendant  </b> </p><p>Let's look in to the first two kinds. I'm going to query the DOM and do something with it like add CSS to it </p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('parent &gt; child').css('text-decoration','underlined');</code></pre><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ancestor descendant').css('color','blue');</code></pre><!--EndFragment--><p><span style=\"float: none;\">Another thing I'm going to do is to go to my section and add some paragraph and in the paragraph add a span tag like such </span></p><div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">&lt;section class=&#34;mysection&#34;&#10;  &lt;p&gt;Some normal text. &lt;span&gt;I am the child of p&lt;/span&gt;&lt;/p&gt;&#10;&lt;/section&gt;</code></pre><span style=\"float: none;\">The span tag is the child of <b>p</b>. Now if I put the p and span in the code below<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('p &gt; span').css('text-decoration','underlined');</code></pre><!--EndFragment--><p><span style=\"float: none;\">Now if I save it, refresh the screen the span tag which is the child of <b>p </b>will be underlined as shown below<br/><br/><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc5.png\" style=\"width: 100%;\"/><br/></span></p><div><div><b>Ancestor descendant  </b><span style=\"float: none;\"> <!--EndFragment--><br/>Now let's say you are the son of your dad, but in other words you are also a descendant of your dad. So if I put the </span><b>P </b>and the span tag like such </div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('p span').css('color','blue');</code></pre><!--EndFragment--><span style=\"float: none;\">Now if I save it, refresh the screen the text is not only going to be underlined but also blue as well in color as shown below <br/></span><br/><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc6.png\" style=\"width: 100%;\"/><br/><div><div><br/></div><div><p>What if you have have another span tag inside the span tag? </p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">&lt;section class=&#34;mysection&#34;<br/>  &lt;p&gt;Some normal text. &#10;     &lt;span&gt;&#10;        I am the child of p&#10;&lt;span&gt;I am the child of span, but the grandchild of p.&lt;/span&gt;&#10;     &lt;/span&gt;&#10;  &lt;/p&gt;<br/>&lt;/section&gt;</code></pre><!--EndFragment--><span style=\"float: none;\">In the code above, <b>p </b>has a child span, and span has another child of span. And the second span is the grandchild or descendant of <b>p</b> <br/><br/></span></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc7.png\" style=\"width: 100%;\"/><br/><p>If I change it to span &gt; span like such </p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('span &gt; span').css('text-decoration','underlined');</code></pre><!--EndFragment--><div><span style=\"float: none;\">Save it, refresh the screen and you see the span styling is only going to take effect on another span because the span is the child of another span as shown below</span><br/><br/></div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc8.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">But in the second scenario</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('p span').css('color','blue');</code></pre><!--EndFragment--><div><span style=\"float: none;\">the styling is going to effect all the spans because both the spans are the descendant of <b>P</b> tag. </span></div><div><span style=\"float: none;\">Let's look in to some more Selectors</span></div><div><b>3- :first-child Selector <br/>4- :last-child Selector</b></div><div><b><br/><span style=\"float: none;\">For the demonstration purpose I'll have a <b>ul </b>tag with multiple <b>li</b>'s</span></b></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">&lt;ul&gt;&#10;  &lt;li&gt;one&lt;/li&gt;&#10;  &lt;li&gt;two&lt;/li&gt;&#10;  &lt;li&gt;three&lt;/li&gt;&#10;&lt;/ul</code></pre><div> Those <b>li</b>'s above are siblings. For example if you only want to style the first <b>li </b>you would write</div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul &gt; li:first-child').append('i am the first child');</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and you see it applied the append function to the first <b>li<br/><br/></b></span></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc9.png\" style=\"width: 100%;\"/><b><br/></b></div><span style=\"float: none;\">If you want the same for the last child, you could simply write <br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul &gt; li:last-child').append(' i am the last child');</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and you see it applied the append function on the last child as well<br/></span></p><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc10.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">If you want to select the second child, we are going to look at another two selectors</span></div><div><b>5- :nth-child( ) Selector <br/>6- :nth-last-child( ) Selector<br/><br/></b></div><div>I am going to add more <b>li</b>'s just for demonstration <br/><br/></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">&lt;ul&gt;<br/>  &lt;li&gt;one&lt;/li&gt;<br/>  &lt;li&gt;two&lt;/li&gt;<br/>  &lt;li&gt;three&lt;/li&gt;&#10;  &lt;li&gt;fourth&lt;/li&gt;&#10;  &lt;li&gt;fifth&lt;/li&gt;<br/>&lt;/ul</code></pre><!--EndFragment--><p><span style=\"float: none;\"> If you want to select the third child, something in the middle, not the first not the last one, I can simply write <br/></span></p><div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul &gt; li:nth-child(2)').append(' i am the second child');</code></pre><span style=\"float: none;\"><span style=\"float: none;\">Save it, refresh the screen and you see the nth child of ul tag has the append function.<br/><br/></span></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc11.png\" style=\"width: 100%;\"/><br/><!--EndFragment--><br/><span style=\"float: none;\">If you want to go backwards the second last or third last you could write<br/><br/></span></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul &gt; li:nth-last-child(2)').append(' i am the second last child');</code></pre><p><span style=\"float: none;\"><span style=\"float: none;\">Save it, refresh the screen and you see the second last child is now appended<br/><br/></span></span><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc12.png\" style=\"width: 100%;\"/></p><div><span style=\"float: none;\">The above mentioned concept is not only for list items but it can also be applied to <b>P</b> tag or any other kinds of tags. </span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><b>7- :contains( ) Selector contains content <br/>8- :has( ) Selector: has elements</b></span></div><div><span style=\"float: none;\"><b><br/></b></span></div><div>We are going to look at some more selectors. <b>Contains </b>is for content within an element and the <b>has </b>one is for selecting any element which has another element inside it. So I can write <code>li:contains(&#34;three&#34;)</code> If you find any <b>li </b>which has as text of three, then do something with it which is the second part of the code below</div><div><br/></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('li:contains(&#34;three&#34;)').css('text-transform', 'uppercase');</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and you see the third child which contains the text three has a text of uppercase now<br/></span></p><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc13.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">If I want to find an element inside an element I can use the has selector. In the image below you see I have 3 <b>p </b>tags in a section tag <br/><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc14.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\"> <br/><span style=\"float: none;\">I'm going to use the has selector like such<br/><br/></span></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('section:has(&#34;p&#34;)').css('color', 'brown');</code></pre><p><span style=\"float: none;\"><span style=\"float: none;\">Save it, refresh the screen and you see the paragraph color is now changed to brown</span></span></p><div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc15.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\"><b>Note</b></span></span></div><div><span style=\"float: none;\"><span style=\"float: none;\">Selectors with a<b> <code>:</code></b> at the start are called filter selectors</span></span></div><div><br/></div><div><span style=\"float: none;\"><b>9- :hidden<br/>10- :visible</b></span></div><div><span style=\"float: none;\">Let's look in to some more selectors. I'm going to add some style to the footer area, so this way it's not going to be visible</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">&lt;footer style=&#34;display:none&#34;&gt;&#10;  Copyright info Awesome Inc.&#10;&lt;/footer&gt;</code></pre><div><span style=\"float: none;\"></span></div><div><span style=\"float: none;\"><span style=\"float: none;\">If I refresh the screen you see our footer is gone<br/></span></span> <img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc16.png\" style=\"width: 100%;\"/></div><div><span style=\"float: none;\"><br/></span><div><div>I'm going to write<br/><br/></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('*:hidden').show( );</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and you see it showed the footer area<br/><br/></span></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc17.png\" style=\"width: 100%;\"/><br/><div></div><div><div><div><span style=\"float: none;\">I can go write click and go to the inspect element, you see the style display is removed and now the footer is visible.</span></div><div><br/><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc18.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">We can do the reverse as well. I can say find all the <b>p </b>tags which are visible and make them hidden like such</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('p:visible').hide( );</code></pre>Save it, refresh the screen and you see all the <b>p</b> tags are now hidden<br/><br/></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc19.png\" style=\"width: 100%;\"/><br/><div><div><br/><span style=\"float: none;\">If you view in the source code, you will see the p tags have the style display set to none</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc20.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\"><b>11- :focus filter Selector</b></span><br/><br/><span style=\"float: none;\">The focus filter selector applies more to form elements. I'm going to write some HTML for form </span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">&lt;form action=&#34;&#34;&gt;&#10;  &lt;input type=&#34;text&#34;&gt;&#10;  &lt;input type=&#34;button&#34; value=&#34;click me&#34;&gt;&#10;&lt;/form&gt;</code></pre><span style=\"float: none;\">Save it, refresh the screen and you see it has a value of click me<br/><br/></span></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc21.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">I can simply write jQuery, find all the input fields and if they're focused then change the background color to pink </span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('input:focus').css('background-color', 'pink');</code></pre><span style=\"float: none;\">Save it, refresh the screen and nothing will happen, because the above function only works when the DOM loads and since we don't have anything focused in the form field, the above code is not going to work. Don't worry, in the future lesson, we will dive in to those aspects as well.</span></div><div>But for the demonstration I'm going to put the force focus on the input type like such </div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('input[type=&#34;text&#34;]').focus();</code></pre><span style=\"float: none;\">Save it, refresh the screen and you see when the page loaded, it immediately </span>changed the color to pink</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc22.png\" style=\"width: 100%;\"/><br/><b><span style=\"float: none;\"><b>12- :button</b></span></b></div><div><b>I'm going to write jQuery, select all elements which are the type of button and change their color to red </b></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(':button').css('color', 'red')</code></pre><b>Save it, refresh the screen </b></div><div><br/><div><b></b></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc23.png\" style=\"width: 100%;\"/><b><br/></b><br/><b>The button filter applies to two kinds of buttons as shown below</b></div><div><b> </b><!--EndFragment--><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc24.png\" style=\"width: 100%;\"/><br/><br/><b>13- :Selected</b></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(':selected').css('color', 'green')</code></pre><b><!--EndFragment--></b></div><b>The above code only works for the element of options, the form type options. I'm going some options as shown below</b></div><div><b><br/></b></div><div><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc25.png\" style=\"width: 100%;\"/><b><br/></b></div><div><br/><b>If I refresh the screen and nothing will happen because you can't really style the option of a select form type which is controlled by the browser. But we can use the text function like such </b></div><br/><!--StartFragment--><div><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(':selected').text(' am selected')</code></pre><b></b></div><b><span style=\"float: none;\">Save it, refresh the screen and you see  such </span></b></div><div><!--EndFragment--><br/><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-2-sc26.png\" style=\"width: 100%;\"/><b><br/><br/></b><b>I hope you enjoyed this lesson, if you have any question please leave your comments below, I'll talk to you in the next lesson. Goodbye :)</b></div>",
    "createdMsec": 1.445800592435E+12,
    "updatedIso": {
      "$date": "2017-05-08T12:35:29.663Z"
    },
    "updatedMsec": 1.494246929663E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-3-selectors-2.zip",
    "videoSource": "//player.vimeo.com/video/115425002",
    "duration": "22:25",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:16:32.435Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "jQuery"
    ]
  },
  {
    "_id": "56271c6b12c48c7105503801",
    "slug": "data-binding-common-directives-in-angular-js",
    "title": "Data Binding & Common Directives in Angular JS",
    "subTitle": "Dive into code with Angular JS. Learn Data Binding and the power of the most common built-in directives in Angular JS",
    "thumbnail": "learnAngular-3-databinding.png",
    "demoUrl": "demo/learnAngular-3-databinding/index.html",
    "bodyContent": "<p></p><br>",
    "createdMsec": 1.44540375597E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:44:02.04Z"
    },
    "updatedMsec": 1.53375024204E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-3-databinding.zip",
    "videoSource": "//player.vimeo.com/video/126900202",
    "duration": "9:00",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:02:35.97Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End",
      "Data-Binding"
    ]
  },
  {
    "_id": "5622cf5c8795649145fce17b",
    "slug": "create-beautiful-parallax-scrolling-effect-with-pure-css",
    "title": "Create Beautiful Parallax Scrolling Effect with Pure CSS",
    "subTitle": "Learn to build a Beautiful Parallax Effect with Pure CSS",
    "thumbnail": "parallaxEffectCss.png",
    "demoUrl": "demo/parallaxEffectCss/index.html",
    "bodyContent": "<p></p><h1 class=\"ngbinding\" style=\"text-align: center;\">Create Beautiful Parallax Scrolling Effect with Pure CSS</h1><!--EndFragment--><p>In this lesson, we will learn how to create a beautiful parallax scrolling effect with pure CSS It will look like as If you scroll down, it will appear as if different layers are scrolling at a different rate.</p><p>In our HTML document we have a particular layer called <code>parallax-wrap</code>, inside we have three layers and all of them have a class of parallaxing named layer one, layer two and layer three. The first layer has an image, the second layer has nothing but the text and the third layer contains the image as well which we'll be using in our project.</p><p><img src=\"//a.ilovecoding.org/img/create-beautiful-parallax-scrolling-effect-with-pure-css-sc1.png\" style=\"width: 100%;\"/><br/></p><p>We have some basic styles in our style.css file as well.</p><p><img src=\"//a.ilovecoding.org/img/create-beautiful-parallax-scrolling-effect-with-pure-css-sc2.png\" style=\"width: 100%;\"/><br/></p><p style=\"text-align: left;\">vw and vh stand for viewport width and viewport height respectively.</p><p style=\"text-align: left;\">The difference between using <code>width: 100vw</code> instead of <code>width: 100%</code> is that while <code>100%</code> will make the element fit all the space available, the viewport width has a specific measure. This is just a personal preference, you don't have to use it in your parallax effect.</p><p style=\"text-align: left;\"><b>STEP 1<br/></b>Now, we'll start writing our CSS in <code>.parallax-wrap</code> as shown below<b><br/></b></p><p style=\"text-align: left;\"></p><pre><code class=\"”language-javascript”\">.parallax-wrap {&#10;  perspective: 100px; &lt;------- you can set it to 1000px as well&#10;  height: 100vh;&#10;  overflow-x: hidden;&#10;  overflow-y: auto;&#10;}&#10;</code></pre><p><img src=\"//a.ilovecoding.org/img/create-beautiful-parallax-scrolling-effect-with-pure-css-sc3.png\" style=\"width: 100%;\"/><br/></p><p></p><p><b><b style=\"text-align: left;\"><font color=\"#242729\">STEP 2<br/></font></b></b>The step number 2 is that we are going to set all the layers on top of each other. We can do that by writing <code>position: absolute;</code> and set the position to <b>0</b> like such</p><!--StartFragment--><pre><code class=\"”language-javascript”\" style=\"color: inherit;background-color: transparent;\">.parallaxing {<br/>  position: absolute;<br/>  top: 0;<br/>  right: 0;<br/>  bottom: 0;<br/>  left: 0;&#10;}</code></pre><!--EndFragment--><p><img src=\"//a.ilovecoding.org/img/create-beautiful-parallax-scrolling-effect-with-pure-css-sc4.png\" style=\"width: 100%;\"/><br/></p><p><b><b style=\"text-align: left;\"><font color=\"#242729\">STEP 3<br/></font></b></b>Now we're going to set <code>z-index</code> to 10 so the text is on the front, you can play around and adjust according to your preference.<br/><b>Tip</b>: Make sure you set different <span style=\"float: none;\">z-</span>indexes of different layers so they could be on top of each other. It's all personal preference.<br/></p><!--StartFragment--><pre><code class=\"”language-javascript”\" style=\"color: inherit;background-color: transparent;\">.parallaxing.two{&#10;     z-index: 10;&#10;}</code></pre><!--EndFragment--><p><span style=\"float: none;\">The next thing we're going to do is to move the third layer to the very bottom.</span></p><p><!--StartFragment--></p><pre><code class=\"”language-javascript”\" style=\"color: inherit;background-color: transparent;\">.parallaxing.three{<br/>     margin-top: 95vh<br/>}</code></pre><!--EndFragment--><p><img src=\"//a.ilovecoding.org/img/create-beautiful-parallax-scrolling-effect-with-pure-css-sc5.png\" style=\"width: 100%;\"/></p><p>This alone will not have the parallax effect, because we need to translate that by <code>writing transform: translateZ(-100px);</code><br/></p><p></p><!--StartFragment--><pre><code class=\"”language-javascript”\" style=\"color: inherit;background-color: transparent;\">.parallaxing.two{<br/>     z-index: 10;&#10;     transform: translateZ(-100px); <br/>}</code></pre><!--EndFragment--><p><span style=\"float: none;\">Another thing we can do is to make the text bigger by writing <span style=\"float: none;\">scale(2)</span></span></p><p><!--StartFragment--></p><pre><code class=\"”language-javascript”\" style=\"color: inherit;background-color: transparent;\">.parallaxing.two{<br/>     z-index: 10;<br/>     transform: translateZ(-100px); scale(2)<br/>}</code></pre><!--EndFragment--><p><img src=\"//a.ilovecoding.org/img/create-beautiful-parallax-scrolling-effect-with-pure-css-sc6.png\" style=\"width: 100%;\"/></p><p>Now if you try to scroll your page, it will take effect. We can do that for the first layer as well</p><p></p><p><!--StartFragment--></p><pre><code class=\"”language-javascript”\" style=\"color: inherit;background-color: transparent;\">.parallaxing.two{<br/>     z-index: 10;<br/>     transform: translateZ(-200px); scale(3)<br/>}</code></pre><!--EndFragment--><p><img src=\"//a.ilovecoding.org/img/create-beautiful-parallax-scrolling-effect-with-pure-css-sc7.png\" style=\"width: 100%;\"/></p><p>I hope you enjoyed this lesson. If you have any question, please leave your comments below and I'll reply to your questions.</p>",
    "createdMsec": 1.44512188432E+12,
    "updatedIso": {
      "$date": "2017-05-08T07:56:40.609Z"
    },
    "updatedMsec": 1.49423020061E+12,
    "level": 2,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/parallaxEffectCss.zip",
    "videoSource": "//player.vimeo.com/video/123747323",
    "duration": "11:01",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-17T22:44:44.32Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "HTML/CSS"
    ]
  },
  {
    "_id": "562d2132995935f23b5c56e4",
    "slug": "understanding-grid-system-of-bootstrap",
    "title": "Understanding Grid System of Bootstrap",
    "subTitle": "In this video we are going to master the grid system of twitter Bootstrap CSS framework",
    "thumbnail": "bootstrap-2-grid.png",
    "demoUrl": "demo/bootstrap-2-Grid/understanding.html",
    "bodyContent": "",
    "createdMsec": 1.445798194162E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:02:15.694Z"
    },
    "updatedMsec": 1.533751335694E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-2-Grid.zip",
    "videoSource": "//player.vimeo.com/video/124398480",
    "duration": "20:08",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:36:34.158Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Responsive Design"
    ]
  },
  {
    "_id": "562d2516995935f23b5c56ee",
    "slug": "crash-course-on-less-css",
    "title": "Crash Course on LESS CSS",
    "subTitle": "In this crash course you will learn how to use less CSS",
    "thumbnail": "bootstrap-11-less-css.png",
    "demoUrl": "demo/lesscss/index.html",
    "bodyContent": "",
    "createdMsec": 1.445799190806E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:07:59.786Z"
    },
    "updatedMsec": 1.533751679786E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-11-less-css.zip",
    "videoSource": "//player.vimeo.com/video/125682266",
    "duration": "13:13",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:53:10.806Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "HTML CSS"
    ]
  },
  {
    "_id": "56271d0e12c48c7105503805",
    "slug": "ng-change-ng-click-ng-dbl-click-ng-submit-in-angular-js",
    "title": "ng-change, ng-click, ng-dbl-click, ng-submit in Angular JS",
    "subTitle": "Learn ng-change, ng-click, ng-dbl-click and ng-submit directives in Angular JS",
    "thumbnail": "learnAngular-7-actiondirectives.png",
    "demoUrl": "demo/learnAngular-7-actiondirectives/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.44540391894E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:49:02.819Z"
    },
    "updatedMsec": 1.533750542819E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-7-actiondirectives.zip",
    "videoSource": "//player.vimeo.com/video/126900205",
    "duration": "6:15",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:05:18.94Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "56270c05b8d7393405e4050c",
    "slug": "simple-to-do-app-with-pure-javascript",
    "title": "Simple To-Do App with pure JavaScript",
    "subTitle": "The most basic To-Do app that will expose you to the thought process of putting something basic and functional together",
    "thumbnail": "todoApp.png",
    "demoUrl": "demo/todoApp/index.html",
    "bodyContent": "<div class=\"alert alertwarning\"><b>To understand this tutorial</b>, you must know how to use <a title=\"Variable: What is variables in JavaScript\" href=\"https://ilovecodingorg/lessons/variable-what-is-variables-in-javascript\">Variable</a>,&nbsp;<a title=\"Functions\" href=\"https://ilovecoding.org/lessons/functions\">Function</a>, <a title=\"Arrays\" href=\"https://ilovecoding.org/lessons/arrays\">Arrays</a>, Document-Object-Model, and <a title=\"First Web Page\" href=\"https://ilovecoding.org/lessons/first-web-page\">Basic HTML</a>. <a title=\"Learn JavaScript in 14 Days\" href=\"https://ilovecoding.org/courses/js2\">Learn JavaScript in 14 days</a> would be a good pre-requisite course to take before&nbsp;you start this tutorial.</div>",
    "createdMsec": 1.445399557953E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:14:11.858Z"
    },
    "updatedMsec": 1.533748451858E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/todoApp.zip",
    "videoSource": "//player.vimeo.com/video/100663407",
    "duration": "16:00",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:52:37.953Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Hands-on Project"
    ]
  },
  {
    "_id": "562d2a3c9068f91a3cdf1c5d",
    "slug": "find-something-query-the-dom-with-jquery-part-1",
    "title": "Find Something / Query the DOM with jQuery - part 1",
    "subTitle": "How to find elements within your website / Document Object Model (DOM) so once they are selected, we can take some action.",
    "thumbnail": "jQuery14-2-selectors.png",
    "demoUrl": "demo/selectors/index.html",
    "bodyContent": "<h3>What are selectors in jQuery</h3><p>In our last&nbsp;<a href=\"https://ilovecodingorg/lessons/gettingstarted-with-jquery?playlist=learn-jquery-in-14-days\" target=\"\">Getting Started with jQuery</a>&nbsp;video you learned that jQuery has two parts, we decided that we are going to look at jQuery as a find something, do something library. In today's video we are going to look at the find something part or also known as querying the DOM or selectors. So I am going to go to the jQuery website and click on the API documentation, If I scroll down on the left side we'll find the section called selectors.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc1.png\" style=\"width: 100%;\"><br></p><p>There are several kinds of selectors in jQuery but we are going to look at in to the basic ones as shown below&nbsp;</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc2.png\" style=\"width: 100%;\"><br></p><p>As you notice they look very much alike the way we used CSS or how we defined CSS to style our elements or classes or IDs.</p><h3>Getting Started</h3><p>To get started&nbsp;we are going to start off with this simple HTML</p><pre><code class=\"language-javascript\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;title&gt;Find Something AKA Quering the DOM&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;</code></pre><p>And we are going to import our jQuery library but this time we are not going to download it from the jQuery website, we are going to use something called a CDN, CDN stands for Content Delivery Network. CDN is a service on the internet which has multiple servers to speed it all over the world so they might have on near Chicago, in New York, Australia, Pakistan, China so lets say if a user sitting in Chicago, in my case if I am sitting in Chicago and I get to the internet its going to deliver the content from the server which is nearest to me in my case its going to be Chicago if they have a server. If they have a server in Michigan, they are going to deliver the content of the website from that particular server so its going to be faster for me to download that information VS if the information is came from the server in China.&nbsp;</p><p>If I just search jQuery CDN and there are this service out there that provide this jQuery code which is hosted on an external server so we don't have to download it on our server. Go to this <a href=\" https://cdnjs.com/libraries/jquery\" target=\"\">website </a>there's this service called<strong>&nbsp;cloudflare</strong>&nbsp;that provides this jQuery library on their CDN</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc3.png\" style=\"width: 100%;\"><br></p><p>So I don't really have to download it on our local computer they will host it and they're going to use up their bandwidth.</p><pre><code class=\"language-javascript\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;title&gt;Find Something AKA Quering the DOM&lt;/title&gt;\n  &lt;script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;</code></pre><p>Save it, Refresh the screen open&nbsp;chrome developer tool<strong>&nbsp;</strong>to make sure everything is working, refresh one more time and you can see it in the network tab it downloaded the jQuery file from the server.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc4.png\" style=\"width: 100%;\"><br></p><p>So let's get started. I am going to start off by creating a simple page I am going to start with a div tag and give it an id of main</p><p><code>&lt;div id=\"main\"&gt;</code></p><p>inside that, I am going to have a header tag</p><p><code>&lt;header&gt;&lt;/header&gt;</code></p><p>and a footer tag</p><p><code>&lt;footer&gt;&lt;/footer&gt;</code></p><p>and inside footer tag, we can have some copyright information \"Copyright info Awesome Inc.\"</p><pre><code class=\"language-javascript\">&lt;footer&gt;\n    Copyright info Awesome Inc.\n&lt;/footer&gt;</code></pre><p>And in the header tag we are going to have h1 tag and we are going to just say \"Hello World To our Awesome Page\"&nbsp;&lt;h1&gt;Hello World to our Awesome Page&lt;/h1&gt;&nbsp;now we are going to have another tag start with a section tag&nbsp;&lt;section&gt;&lt;/section&gt;&nbsp;and an aside tag for our sidebar and in aside tag we might have some link items maybe we'll have&nbsp;<strong>ul&nbsp;</strong>tag and inside we are going to have some list items.</p><pre><code class=\"language-javascript\">&lt;div&gt;\n    &lt;header class=\"mySection\"&gt;\n      &lt;h1&gt;Hello World to our Awesome Page&lt;/h1&gt;  \n    &lt;/header&gt;\n\n    &lt;section&gt;\n      \n    &lt;/section&gt;\n\n    &lt;aside&gt;\n      &lt;ul&gt;\n        &lt;li class=\"specialLi\"&gt;&lt;a href=\"http://google.com\"&gt;First link&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"http://yahoo.com\"&gt;Second link&lt;/a&gt;&lt;/li&gt;\n      &lt;/ul&gt;      \n    &lt;/aside&gt;\n\n    &lt;footer&gt;\n      Copyright info Awesome Inc.\n    &lt;/footer&gt;\n&lt;/div&gt;</code></pre><p>Now in the section element, I am going to have a paragraph tag<br>&lt;p&gt;This is some small description about my webpage&lt;/p&gt;&nbsp;so this is just a simple web page that we created. We added content in it that we can play around with jQuery.</p><pre><code class=\"language-javascript\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;title&gt;Find Something AKA Quering the DOM&lt;/title&gt;\n  &lt;script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div&gt;\n    &lt;header&gt;\n      &lt;h1&gt;Hello World to our Awesome Page&lt;/h1&gt;  \n    &lt;/header&gt;\n\n    &lt;section&gt;\n      &lt;p&gt;This is some small description about my webpage&lt;/p&gt;\n    &lt;/section&gt;\n\n    &lt;aside&gt;\n      &lt;ul&gt;\n        &lt;li class=\"specialLi\"&gt;&lt;a href=\"http://google.com\"&gt;First link&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"http://yahoo.com\"&gt;Second link&lt;/a&gt;&lt;/li&gt;\n      &lt;/ul&gt;      \n    &lt;/aside&gt;\n\n    &lt;footer&gt;\n      Copyright info Awesome Inc.\n    &lt;/footer&gt;\n  &lt;/div&gt;</code></pre><p>Refresh the page and here we have our page</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc5.png\" style=\"width: 100%;\"><br></p><p>Now we can finally start by writing some JavaScript, I am going to start off by a script tag and inside I am going to say&nbsp;<strong><code>jQuery(document).ready(function)</code></strong>&nbsp;(when its ready, its going to run that function) and pass a parameter of <b>$</b> so all the code inside that whenever you write the <b>$</b> sign its going to refer to jQuery, as we discussed in our last lesson <a href=\"https://ilovecoding.org/lessons/getting-started-with-jquery?playlist=learn-jquery-in-14-days\" target=\"\">Getting Started</a> that if you are using multiple libraries its going to permit any conflicts with other libraries. So let's say if you want to change the color of all the elements of this particular page we are going to use selectors that we saw on the jQuery website</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc6.png\" style=\"width: 100%;\"><br></p><p>We can put asterisk sign and append \"<strong>Hello I just appended myself</strong>\"It's going to append this information in every particular tag in our HTML document.</p><pre><code class=\"language-javascript\">&lt;script&gt;\n    jQuery(document).ready(function($){\n\n      $('*').append('&gt;&gt;&gt; Hello I just appended myself');\n\n    });\n&lt;/script&gt;</code></pre><p>We are going to save it and refresh the screen and you see it had&nbsp;\"<strong>Hello I just appended myself</strong>\" printed</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc7.png\" style=\"width: 100%;\"><br></p><p>So I am going to go to an elements tab so if we see our head tag in&nbsp;chrome developer tool. You see in head tag after the information was done, the meta tag was done, the title was done, the script was done, it appended this information inside the head tag.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc8.png\" style=\"width: 100%;\"><br></p><p>If you notice in our title tag, it would probably do the same; It appended that information in here as well.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc9.png\" style=\"width: 100%;\"><br></p><p>It did the same in script tag as well. In the header h1 tag it also has that appended information and the header tag also has this appended information.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc10.png\" style=\"width: 100%;\"><br></p><p>So it appended that information on all the text it could find. So that's not really helpful lets look at our second CSS selector which is the class.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc11.png\" style=\"width: 100%;\"><br></p><p>So, in that case, we are not using any classes in our document so let's say I can add a class in section tag and call it&nbsp;mySection</p><pre><code class=\"language-javascript\">&lt;section class=\"mySection\"&gt;\n      &lt;p&gt;This is some small description about my webpage&lt;/p&gt;\n    &lt;/section&gt;</code></pre><p>And in the&nbsp;<strong>li&nbsp;</strong>tag I can add another class&nbsp;specialLi</p><pre><code class=\"language-javascript\">&lt;ul&gt;\n        &lt;li class=\"specialLi\"&gt;&lt;a href=\"http://google.com\"&gt;First link&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"http://yahoo.com\"&gt;Second link&lt;/a&gt;&lt;/li&gt;\n      &lt;/ul&gt;</code></pre><p>I am going to create my new CSS file and in our head tag we are going to just link this style.css file in our document&nbsp;&lt;link rel=\"stylesheet\" href=\"style.css\"&gt;</p><pre><code class=\"language-javascript\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;title&gt;Find Something AKA Quering the DOM&lt;/title&gt;\n  &lt;script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.js\"&gt;&lt;/script&gt;\n  &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;</code></pre><p>Change the background color&nbsp;background-color: #cccccc</p><pre><code class=\"language-javascript\">body{\n  background-color: #cccccc;\n}</code></pre><p>Save it refresh the screen you see the entire page is now gray that means our CSS is fully loaded and is working.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc12.png\" style=\"width: 100%;\"><br></p><p>Now I am going to change the font weight of my section, its going to be bold and its going to have a border of 2px and will have a color of blue.&nbsp;<br>font-weight: bold; border: 2px solid blue</p><pre><code class=\"language-javascript\">body{\n  background-color: #cccccc;\n}\n\n.mySection{\n  font-weight: bold;\n  border: 2px solid blue;\n}</code></pre><p>If I refresh the page you see the section is styled blue.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc13.png\" style=\"width: 100%;\"><br></p><p>Now I want to change the entire font I am going to do&nbsp;#main{ font-family: Georgia;}</p><pre><code class=\"language-javascript\">body{\n  background-color: #cccccc;\n}\n\n.mySection{\n  font-weight: bold;\n  border: 2px solid blue;\n}\n\n#main{\n  font-family: Georgia;\n}</code></pre><p>Refresh the page and you see the entire page is in Georgia font</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc14.png\" style=\"width: 100%;\"><br></p><p>So going back to mysection in our document, lets say if we don't want to append \"Hello I just appended myself\" through out all our elements, we just want to do it in our mysection class, I can add mysection as shown below, refresh the screen and you see only that text is appended on that particular section</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc15.png\" style=\"width: 100%;\"><br></p><p>So we just understood how to use asterisk sign and the class. Lets look at the element and as you know all the tags in our document are also called elements so you say I only want this information in the footer in the footer tag append the information \"Hello I just appended myself\"&nbsp;$('footer').append('&gt;&gt;&gt; Hello I just appended myself');</p><p>save it and refresh the page you notice the information got appended at the bottom</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc16.png\" style=\"width: 100%;\"><br></p><p>Now lets look at another element of an ID.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc17.png\" style=\"width: 100%;\"><br></p><p>I am going to add&nbsp;<strong><code>id=\"main\"</code></strong>&nbsp;in let's say aside tag and IDs should not be duplicated. IDs should always be unique; Classes can be re-used multiple places so lets say you want to add mysection class in the header section, you are welcome to do that but in the cases of IDs, ID should always be used in one particular location so if I refresh the screen you see header got styled as well as in our section element.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc18.png\" style=\"width: 100%;\"><br></p><p>So back to the ID area so we are looking at main ID&nbsp;<br>$('#main').append('&gt;&gt;&gt; Hello I just appended myself');&nbsp;the append should happen at the end of aside tag at the end of ul as shown in the screenshot and in the second arrow the text will appear there</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc19.png\" style=\"width: 100%;\"><br></p><p>I am going to refresh the page and you see here you have it the text is appended underneath the URL.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc20.png\" style=\"width: 100%;\"><br></p><p>One more thing you can do is lets say if you want to do this in multiple areas you can say I want to have it next to main, I want to have it next to footer, I want to have it next to lets say mysection so its going to have it in 4 places not 3 so we are going to see this append at 4 places and just for simplicity instead of \"Hello I just appended myself\" I am going to say \"Hello Aziz\"&nbsp;#main, footer, .mySection').append('&gt;&gt;&gt; Hello Aziz')</p><pre><code class=\"language-javascript\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;title&gt;Find Something AKA Quering the DOM&lt;/title&gt;\n  &lt;script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.js\"&gt;&lt;/script&gt;\n  &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div&gt;\n    &lt;header class=\"mySection\"&gt;\n      &lt;h1&gt;Hello World to our Awesome Page&lt;/h1&gt;  \n    &lt;/header&gt;\n\n    &lt;section class=\"mySection\"&gt;\n      &lt;p&gt;This is some small description about my webpage&lt;/p&gt;\n    &lt;/section&gt;\n\n    &lt;aside id=\"main\"&gt;\n      &lt;ul&gt;\n        &lt;li class=\"specialLi\"&gt;&lt;a href=\"http://google.com\"&gt;First link&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"http://yahoo.com\"&gt;Second link&lt;/a&gt;&lt;/li&gt;\n      &lt;/ul&gt;      \n    &lt;/aside&gt;\n\n    &lt;footer&gt;\n      Copyright info Awesome Inc.\n    &lt;/footer&gt;\n\n  &lt;/div&gt;\n\n\n  &lt;script&gt;\n\n    jQuery(document).ready(function($){\n\n      $('#main, footer, .mySection').append('&gt;&gt;&gt; Hello Aziz');\n\n    });\n\n  &lt;/script&gt;</code></pre><p>Save it refresh the page and you see \"Hello Aziz\" got appended at 4 places.</p><p><img src=\"//a.ilovecoding.org/img/find-something-query-the-dom-with-jquery-part-1-sc21.png\" style=\"width: 100%;\"><br></p><p>You see now you've got the basics of the CSS selections or selectors in jQuery and that is the first half of jQuery, which is selecting whatever you have select. If you understand CSS and CSS selectors this should be a pretty easy tutorial for you if not then I will say do a lot of practice because this is the fundamentals and with more practice, you will have this understanding more naturally. So these are the basics and I am going to see you in the next lesson. We are going to look at some more selectors of jQuery. If you have any question, please leave your comments below.&nbsp;</p>",
    "createdMsec": 1.445800508764E+12,
    "updatedIso": {
      "$date": "2018-11-29T02:25:12.866Z"
    },
    "updatedMsec": 1.543458312866E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/selectors.zip",
    "videoSource": "//player.vimeo.com/video/116479522",
    "duration": "12:52",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:15:08.764Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "jQuery"
    ]
  },
  {
    "_id": "5622d15b8795649145fce180",
    "slug": "difference-between-a-method-and-a-function-in-javascript",
    "title": "Difference between a Method and a Function in JavaScript",
    "subTitle": "Learn the difference between a function and a method in JavaScript",
    "thumbnail": "functionVsMethod%20.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.445122395503E+12,
    "updatedIso": {
      "$date": "2015-11-30T02:11:00.629Z"
    },
    "updatedMsec": 1.44884946063E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/functionVsMethod.zip",
    "videoSource": "//player.vimeo.com/video/123068315",
    "duration": "7:11",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-17T22:53:15.502Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": []
  },
  {
    "_id": "56270a67b8d7393405e40507",
    "slug": "variable-hoisting-in-javascript",
    "title": "Variable Hoisting in JavaScript",
    "subTitle": "Hoisting means to rise to the top; Variables in JavaScript automatically rise to the top of the code. That is good news for you as a JavaScript Engineer. Learn how Variable Hoisting is your friend",
    "thumbnail": "variableHoisting.png",
    "demoUrl": "demo/variableHoisting/index.html",
    "bodyContent": "<div class=\"alert alertwarning\"><strong>You must know</strong> about <a title=\"Variables\" href=\"https://ilovecodingorg/lessons/variables\">Variables</a> to understand this tutorial</div><h1>Variable Hoisting in JavaScript<br/></h1><p>In this lesson, we will learn what is Variable Hoisting in JavaScript. Hoist simply means to raise, raise up, lift etc. For example we have a variable called<b> a</b> with a value of &#34;Value A&#34; like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var a = &#34;Value A&#34;;&#10;Console.log(a);</code></pre><!--EndFragment--><div><span style=\"float: none;\">Save it, refresh the screen and you see Value A got printed.</span><br/><br/></div><p><img src=\"//a.ilovecoding.org/img/variable-hoisting-in-javascript-sc1.png\" style=\"width: 100%;\"/></p><p>But if we put it underneath it like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">Console.log(a);&#10;var a = &#34;Value A&#34;;&#10;</code></pre><!--EndFragment--><p><span style=\"float: none;\">Our perspective is that JavaScript runs sequentially just like other languages. Save it, refresh the screen and it printed &#34;undefined&#34;<br/></span> <img src=\"//a.ilovecoding.org/img/variable-hoisting-in-javascript-sc2.png\" style=\"width: 100%;\"/></p><div><p><span style=\"float: none;\">If we remove the second part or comment it out so it doesn't run in the program like such</span></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">// Console.log(a);  &lt;----- this is commented out<br/>var a = &#34;Value A&#34;;</code></pre><!--EndFragment--><span style=\"float: none;\">It gives an error, and this time it says &#34;a is not defined&#34; instead of saying &#34;undefined&#34; which means &#34;A&#34; does not exist in the application.<br/><br/></span></div><div><img src=\"//a.ilovecoding.org/img/variable-hoisting-in-javascript-sc3.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">If anywhere in the entire application var  a is mentioned, it is going to hoist the declaration of the particular variable to the top. So if we write like such<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">Console.log(a); <br/>var a = &#34;Value A&#34;;&#10;Console.log(a);</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and you will notice that it first wrote undefined and then printed &#34;Value A&#34;</span> </p><p><img src=\"//a.ilovecoding.org/img/variable-hoisting-in-javascript-sc4.png\" style=\"width: 100%;\"/></p><div><p>Let's say we have a function like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">function func1(){&#10;&#10;}&#10;func1 </code></pre><!--EndFragment--><span style=\"float: none;\">And inside, we have a local variable like such<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">function func1(){<br/>   var ab = &#34;local variable&#34; &#10;   console.log(ab);<br/>}<br/>func1</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and you can see we have local variable also printed.</span></p><div><div><img src=\"//a.ilovecoding.org/img/variable-hoisting-in-javascript-sc5.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">Hoisting simply means is that whenever any variable whether be a string, a number or it could be anything, they all get hoisted to the top. The exception with function is that functions has to be defined or declared in this particular fashion <code>function func1(){ }</code>. So there are two ways to define a function. </span></div><div><b>1st Way<br/></b><div><code>var func2 = function( ) { };</code> &lt;----- it does not get hoisted </div><div><b>2nd Way</b><br/><code>function func2( ) { }</code> &lt;---- It does get hoisted. <br/><br/></div><div>I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson. Good bye :)</div></div></div>",
    "createdMsec": 1.445399143837E+12,
    "updatedIso": {
      "$date": "2017-05-09T11:55:53.042Z"
    },
    "updatedMsec": 1.494330953042E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/variableHoisting.zip",
    "videoSource": "//player.vimeo.com/video/103083595",
    "duration": "4:56",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:45:43.837Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Variable Hoisting"
    ]
  },
  {
    "_id": "5622cfa98795649145fce17c",
    "slug": "load-page-elements-when-scrolled-to-that-area",
    "title": "Load Page Elements when Scrolled to that Area",
    "subTitle": "Beautiful Website Effect that animates elements only when the page is scrolled to that element. Easy to implement and interactive for website visitors",
    "thumbnail": "showOnScroll.png",
    "demoUrl": "demo/showOnScroll/index.html",
    "bodyContent": "<p><strong>Resources</strong></p><ul><li><a title=\"Animatecss\" href=\"http://daneden.github.io/animate.css/\">Animate.css Library</a></li><li><a title=\"WOW.js Library\" href=\"http://mynameismatthieu.com/WOW/\">WOW.js Library</a> see <a title=\"How to use WOW.js\" href=\"http://mynameismatthieu.com/WOW/docs.html\">how to use page</a></li></ul><h2>How to Animate things with CSS</h2><p>In this lesson, we’ll learn a Beautiful Website Effect that&nbsp;animates elements only when the page is scrolled to that element. Easy to&nbsp;implement and interactive for website visitors. You probably have seen so many&nbsp;websites that when you actually visit the website and scroll to any particular&nbsp;area, the animation happens. We will create the same effect with a library&nbsp;called wow.js and animate.css. So let's get started.</p><p><b>HTML Document Structure:</b><br>This is how our HTML structure looks like but it really doesn't matter. You can implement this effect on any HTML document.</p><p><img src=\"//a.ilovecoding.org/img/load-page-elements-when-scrolled-to-that-area.png\" style=\"width: 100%;\"><br></p><p>CSS file</p><p><img src=\"//a.ilovecoding.org/img/load-page-elements-when-scrolled-to-that-area1.png\" style=\"width: 100%;\"><br></p><p>First, we need to import the <a href=\"https://daneden.github.io/animate.css/\" target=\"\">Animate.css</a> file. The second step is to import the <a href=\"http://mynameismatthieu.com/WOW/\" target=\"\">wow.js</a> file. And the third step is to change the class to \"wow\" on whatever element you want to animate, and also set any kind of animation effect that you want to put. You can select your favorite from the list <a href=\"https://daneden.github.io/animate.css/\" target=\"\">here</a>.</p><p><img src=\"//a.ilovecoding.org/img/load-page-elements-when-scrolled-to-that-area2.png\" style=\"width: 100%;\"><br></p><p><span style=\"float: none;\">Step 1: Download&nbsp;</span><a href=\"https://daneden.github.io/animate.css/\" target=\"\">Animate.css</a><span style=\"float: none;\">&nbsp;</span><span style=\"float: none;\">file</span></p><p><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/load-page-elements-when-scrolled-to-that-area3.png\" style=\"width: 100%;\"><br></span></p><p><span style=\"float: none;\">And import it in your project.</span></p><p><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/load-page-elements-when-scrolled-to-that-area4.png\" style=\"width: 100%;\"><br></span></p><p><span style=\"float: none;\"><b>Step 2</b>: Download <a href=\"https://github.com/matthieua/WOW/tree/master/dist\" target=\"\">Wow.js</a> file and download the file. You can either get the raw version or the min version. Copy all the code and paste it in a new file and name it wow.min.js and import the file into your HTML document like such</span></p><p><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/load-page-elements-when-scrolled-to-that-area5.png\" style=\"width: 100%;\"><br></span><br>Copy and paste the code, under the script as shown below<br><!--StartFragment--></p><pre style=\"text-align: left;\">&lt;script&gt;<br>&nbsp;&nbsp;new WOW().init();\n&lt;/script&gt;</pre><p><img src=\"//a.ilovecoding.org/img/load-page-elements-when-scrolled-to-that-area6.png\" style=\"width: 100%;\"></p><p>Step 3: Make an element revealable</p><p>Add the CSS class .<b>wow </b>to an HTML element: it will be invisible until the user scrolls to reveal it.</p><p></p><pre style=\"text-align: left;\">&lt;div class=\"wow\"&gt;<br>  Your content goes here <br>&lt;/div&gt;</pre><h3>Step 4: Choose the animation style</h3><p>Pick an animation style in&nbsp;Animate.css, then add the CSS class to the HTML element</p><pre style=\"text-align: left;\">&lt;div class=\"wow bounceIn\"&gt;<br>&nbsp; Your content goes here<br>&lt;/div&gt;</pre><p><img src=\"//a.ilovecoding.org/img/load-page-elements-when-scrolled-to-that-area7.png\" style=\"width: 100%;\"></p><p>Save it, refresh the screen and the effect will take place. You can further play around with it. I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson.<br></p>",
    "createdMsec": 1.445121961047E+12,
    "updatedIso": {
      "$date": "2018-12-14T14:00:39.654Z"
    },
    "updatedMsec": 1.533749637036E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/showOnScroll.zip",
    "videoSource": "//player.vimeo.com/video/123747320",
    "duration": "5:28",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-17T22:46:01.047Z"
    },
    "technology": [
      "Core Javascript",
      "DOM"
    ],
    "topic": []
  },
  {
    "_id": "56270c39b8d7393405e4050d",
    "slug": "rock-paper-scissor-app-with-pure-javascript",
    "title": "Rock Paper Scissor App with pure JavaScript",
    "subTitle": "Simple Rock Paper Scissor Game. No fancy graphics, plain JavaScript code. You will enjoy building the game",
    "thumbnail": "rockPaperScissor.png",
    "demoUrl": "demo/rockPaperScissor/index.html",
    "bodyContent": "<div class=\"alert alertwarning\"><b>To understand this tutorial</b>, you must know how to use <a title=\"Variable: What is variables in JavaScript\" href=\"https://ilovecodingorg/lessons/variable-what-is-variables-in-javascript\">Variable</a>, <a title=\"Functions\" href=\"https://ilovecoding.org/lessons/functions\">Function</a>, <a title=\"Arrays\" href=\"https://ilovecoding.org/lessons/arrays\">Arrays</a>, Document-Object-Model, and <a title=\"First Web Page\" href=\"https://ilovecoding.org/lessons/first-web-page\">Basic HTML</a>. <a title=\"Learn JavaScript in 14 Days\" href=\"https://ilovecoding.org/courses/js2\">Learn JavaScript in 14 days</a> would be a good pre-requisite course to take before you start this tutorial.</div>",
    "createdMsec": 1.445399609994E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:13:38.395Z"
    },
    "updatedMsec": 1.533748418395E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/rockPaperScissor.zip",
    "videoSource": "//player.vimeo.com/video/100663406",
    "duration": "30:53",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:53:29.993Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Hands-on Project"
    ]
  },
  {
    "_id": "562d24c8995935f23b5c56ed",
    "slug": "making-custom-themes-for-bootstrap-without-less",
    "title": "Making Custom Themes for Bootstrap without LESS",
    "subTitle": "In this video we are going to themify our website while using twitter bootstrap",
    "thumbnail": "bootstrap-10-theme.png",
    "demoUrl": "demo/bootstrap-10-theme/index.html",
    "bodyContent": "",
    "createdMsec": 1.445799112534E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:11:19.317Z"
    },
    "updatedMsec": 1.533751879317E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-10-theme.zip",
    "videoSource": "//player.vimeo.com/video/125246897",
    "duration": "9:29",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:51:52.534Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "562d2178995935f23b5c56e5",
    "slug": "understanding-grid-system-of-bootstrap-part-2",
    "title": "Understanding Grid System of Bootstrap - Part 2",
    "subTitle": "In this video we are going to learn three more additional aspects of twitter bootstrap grid system",
    "thumbnail": "bootstrap-2-grid-2.jpg",
    "demoUrl": "demo/bootstrap-grid-2/index.html",
    "bodyContent": "",
    "createdMsec": 1.445798264326E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:08:09.814Z"
    },
    "updatedMsec": 1.533751689814E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-grid-2.zip",
    "videoSource": "//player.vimeo.com/video/125423690",
    "duration": "8:50",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:37:44.326Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Responsive Design"
    ]
  },
  {
    "_id": "562d227d995935f23b5c56e7",
    "slug": "making-buttons-alert-styles-with-bootstrap",
    "title": "Making Buttons & Alert Styles with Bootstrap",
    "subTitle": "In this video we are going to look at different classes  in Bootstrap that helps us design beautiful elements like Button components or Alert components",
    "thumbnail": "bootstrap-4-buttonAlert.png",
    "demoUrl": "demo/bootstrap-4-buttonAlert/index.html",
    "bodyContent": "",
    "createdMsec": 1.445798525521E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:10:12.373Z"
    },
    "updatedMsec": 1.533751812373E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-4-buttonAlert.zip",
    "videoSource": "//player.vimeo.com/video/124398479",
    "duration": "5:15",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:42:05.521Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Making buttons with Bootstrap"
    ]
  },
  {
    "_id": "56270b8ab8d7393405e4050a",
    "slug": "infinite-scrolling",
    "title": "Infinite Scrolling",
    "subTitle": "Building Infinite Scroll similar to how Facebook, Pinterest and Twitter has it",
    "thumbnail": "infiniteScrolling.png",
    "demoUrl": "demo/infiniteScrolling/index.html",
    "bodyContent": "<div class=\"alert alertwarning\"><strong>To understand this tutorial, <span>You must know</span></strong> how to use <a title=\"Variable: What is variables in JavaScript\" href=\"https://ilovecodingorg/lessons/variable-what-is-variables-in-javascript\">Variable</a>, <a title=\"Functions\" href=\"https://ilovecoding.org/lessons/functions\">Function</a>, <a title=\"Arrays\" href=\"https://ilovecoding.org/lessons/arrays\">Arrays</a>, Document-Object-Model, and <a title=\"First Web Page\" href=\"https://ilovecoding.org/lessons/first-web-page\">Basic HTML</a>. <a title=\"Learn JavaScript in 14 Days\" href=\"https://ilovecoding.org/courses/js2\">Learn JavaScript in 14 days</a> would be a good free course to take before you take this tutorial</div>",
    "createdMsec": 1.445399434072E+12,
    "updatedIso": {
      "$date": "2016-01-13T14:09:22.799Z"
    },
    "updatedMsec": 1.452694162799E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/infiniteScrolling.zip",
    "videoSource": "//player.vimeo.com/video/103205953",
    "duration": "15:48",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:50:34.072Z"
    },
    "technology": [
      "DOM"
    ],
    "topic": []
  },
  {
    "_id": "56270e86b8d7393405e40515",
    "slug": "what-is-ajax-how-and-why-to-use-it-asynchronous-javascript-and-xml",
    "title": "What is AJAX & How and Why to use it (Asynchronous JavaScript and XML)",
    "subTitle": "Learn what is AJAX, what is it used for, why is it used and how to use it. AJAX makes the web fast and efficient. Lets discover its power",
    "thumbnail": "ajax.png",
    "demoUrl": "",
    "bodyContent": "<h1>What is Ajax (Asynchronous JavaScript XML)? </h1><p>In this lesson, we’ll learn what Ajax is and some examples where it is used on the internet AJAX is simply a technique for creating fast and dynamic web pages. Ajax is a client side technique, by which a web developer makes calls to a server without refreshing the page. Since the technique is client side, it happens on the browser and the FrontEnd developers work on this technique.</p><p>If you go to any website for example iLoveCoding and you click on the lessons or playlist section, the whole page will refresh; the call is being made to the server and the page is being refreshed, this means it’s not really an Ajax call.</p><p><b>For example:</b><br/>If we click on the “Contact us” button a little window will pop up and if you fill it out and send the information, it will send the information without refreshing the whole page. As you can see below, it made two calls but the page didn’t refresh at all and it sent the message without refreshing the page.</p><p><img src=\"//a.ilovecoding.org/img/what-is-ajax-how-and-why-to-use-it.png\" style=\"width: 100%;\"/><br/></p><p>You can learn more about Ajax on how to use it in <a href=\"https://ilovecoding.org/courses/learn-jquery-in-14-days\" target=\"\">Learn jQuery in 14 days course</a>.You will find the lessons on how to use Ajax technique. Ajax is used extensively throughout the internet. The entire Gmail platform is build via the Ajax technique. Twitter uses the same technique as well. If you click on any person's followers or followings, the page won't refresh and you will still be able to view their followers or followings etc.<br/></p><p>Ajax stands for Asynchronous JavaScript and xml. Asynchronous means that the call happens not at one particular time. When the HTML page loads, all the code is processed one line after the other in a synchronous way. But Asynchronous call can happen anytime whenever a button is clicked or action is taken etc. XML is just a data format which looks as shown below. It has some data organized in a particular XML style fashion that holds the information as you can see below.<br/></p><p><img src=\"//a.ilovecoding.org/img/what-is-ajax-how-and-why-to-use-it1.png\" style=\"width: 100%;\"/><br/></p><p>But JSON is a more popular format. </p><p><img src=\"//a.ilovecoding.org/img/what-is-ajax-how-and-why-to-use-it2.png\" style=\"width: 100%;\"/><br/></p><p>This is a warp, I hope you enjoyed this lesson. To learn how to use Ajax, head over to the jQuery <a href=\"https://ilovecoding.org/courses/learn-jquery-in-14-days\" target=\"\">course </a>and there are a few lessons on how to use Ajax at the end. If you have any question, leave your comments below. I'll talk to you in the next lesson. Good bye :)</p>",
    "createdMsec": 1.445400198619E+12,
    "updatedIso": {
      "$date": "2017-03-27T01:37:18.401Z"
    },
    "updatedMsec": 1.490578638405E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/121768622",
    "duration": "5:59",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T04:03:18.619Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": []
  },
  {
    "_id": "56270d0db8d7393405e40510",
    "slug": "build-your-own-snake-game-with-javascript-part-3-of-3",
    "title": "Build Your Own Snake Game with JavaScript (Part 3 of 3)",
    "subTitle": "Build Your Own Snake Game with JavaScript Part 3",
    "thumbnail": "snakegame3.png",
    "demoUrl": "demo/snakeGame3/index.html",
    "bodyContent": "<div><p><strong>Part 1</strong>: <a title=\"Build Your Own Snake Game with JavaScript (Part 1 of 3)\" href=\"https://ilovecodingorg/lessons/56270d99b8d7393405e40512\"></a><a href=\"https://ilovecoding.org/lessons/buildyour-own-snake-game-with-javascript-part-1-of-3\" target=\"\"></a><a href=\"https://ilovecoding.org/lessons/build-your-own-snake-game-with-javascript-part-1-of-3\" target=\"\">Build Your Own Snake Game with JavaScript (Part 1 of 3)</a><br/><strong>Part 2</strong><span>: </span><a href=\"https://ilovecoding.org/lessons/56270d65b8d7393405e40511\" style=\"background-color: rgb(255, 255, 255);\"></a><a href=\"https://ilovecoding.org/lessons/56270d65b8d7393405e40511\" target=\"\"></a><a href=\"https://ilovecoding.org/lessons/build-your-own-snake-game-with-javascript-part-2-of-3\" target=\"\"></a><a href=\"https://ilovecoding.org/lessons/build-your-own-snake-game-with-javascript-part-2-of-3\" target=\"\">Build Your Own Snake Game with JavaScript (Part 2 of 3)</a><br/><strong>Part 3</strong><span>: Build Your Own Snake Game with JavaScript (Part 3 of 3) (currently watching)</span></p></div>",
    "createdMsec": 1.445399821047E+12,
    "updatedIso": {
      "$date": "2018-06-19T20:27:29.354Z"
    },
    "updatedMsec": 1.529440049354E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/snakeGame3.zip",
    "videoSource": "//player.vimeo.com/video/119954795",
    "duration": "16:56",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:57:01.047Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": []
  },
  {
    "_id": "56270b27b8d7393405e40509",
    "slug": "variable-what-is-variables-in-javascript",
    "title": "Variable: What is variables in JavaScript",
    "subTitle": "Variables in JavaScript are similar to variables in algebra. They are name representation of any value. Lets see exactly what variables are, its benefits and how to use them",
    "thumbnail": "variableWhatIsIt.png",
    "demoUrl": "demo/variableWhatIsIt/index.html",
    "bodyContent": "<p>Hi! In this tutorial we will talk about variables, what they are in JavaScript, how to use them So let’s get started with the basic HTML </p><pre><code class=\"languagemarkup\">&lt;!doctype html&gt;&#10;&lt;html lang=&#34;en&#34;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&#34;UTF-8&#34;&gt;&#10;  &lt;title&gt;Variables&lt;/title&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;&lt;script type=&#34;text/javascript&#34;&gt;&#10;// We are going to write our code here&#10;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;</code></pre><p>Now for instance I would say</p><pre><code class=\"language-javascript\">var name = &#34;Aziz Ali&#34;;</code></pre><p>To create a variable, we start with the keyword <b>var</b>, followed by any name we want to give to the variable; In our case we gave it the name. Then we assign it any value by using the equal = sign and put the value (in our case Aziz Ali). We end the statement with a Semicolon <b>;</b> sign. Think of semicolon in JavaScript as a full stop. So the variable name represents a string, anytime any value, any alphabet numeric value is inside quotes, it is a string. So I’m putting the value Aziz Ali inside the variable name, you can also put any other type in javascript such as a number and end it with the semicolon</p><pre><code class=\"language-javascript\">var num = 123456;</code></pre><p>Now the key is I am not putting quotes But if I put like ‘’123456’’ it is no longer a number it’s actually a string because it’s inside quotes. Similarly you can put a function</p><pre><code class=\"language-javascript\">var func = function(){};</code></pre><p>You can also put an object</p><pre><code class=\"language-javascript\">var obj = {};</code></pre><p>It could also be an array, put some arrays value in it such as abc, xyz, a number (5) and end it with the semicolon</p><pre><code class=\"language-javascript\">var arr = [“abc”, “XYZ”, 5, “tyu”];</code></pre><p>It could have 3, 4, 5 or any number of values inside</p><pre><code class=\"language-javascript\">var name = &#34;Aziz Ali&#34;,&#10; &#9;num = 123456,&#10; &#9;func = function(){},&#10; &#9;obj = {},&#10; &#9;arr = [&#34;abc&#34;, &#34;XYZ&#34;, 5, &#34;tyu&#34;];</code></pre><p>Now anytime you want to use any of these variables inside your function or any place in your entire application you can use it just by referencing its name, so if you want to print out “Aziz Ali” you can say name for instance I would alert it for the sake of demonstration</p><pre><code class=\"language-javascript\">alert(name );</code></pre><p>Save it refresh the screen and the alert box shows up which puts up my name Aziz Ali.</p><p><img src=\"//a.ilovecoding.org/img/variable-what-is-variables-in-javascript-sc1.png\" style=\"width: 100%;\"/><br/></p><p>I can also put</p><pre><code class=\"language-javascript\">alert(name + num);</code></pre><p>Save it refresh the screen this time it says Aziz Ali123456</p><p><img src=\"//a.ilovecoding.org/img/variable-what-is-variables-in-javascript-sc2.png\" style=\"width: 100%;\"/><br/></p><p>now I want to put space there I can put quotes, space and concatenate like such</p><pre><code class=\"language-javascript\">alert(name + &#34; &#34; + num);</code></pre><p>Save it refresh the screen and you see Aziz Ali 123456</p><p><img src=\"//a.ilovecoding.org/img/variable-what-is-variables-in-javascript-sc3.png\" style=\"width: 100%;\"/><br/></p>  <pre><code class=\"language-javascript\">var  name = &#34;Aziz Ali&#34;;&#10;var  num = 123456;&#10;var  func = function(){};&#10;var  obj = {};&#10;var  arr = [&#34;abc&#34;, &#34;XYZ&#34;, 5, &#34;tyu&#34;];</code></pre><p>Now you might be noticing that there are multiple <b>v<b>ar</b></b>’s mentioned and if you want to put lots of declaration, you can simply put a comma on all of them but the last one, the last one should be semicolon. So you put commas on all of them and remove the var from all of them as well. Only the first one has a var.</p><pre><code class=\"language-javascript\">var name = &#34;Aziz Ali&#34;,&#10; &#9;num = 123456,&#10; &#9;func = function(){},&#10; &#9;obj = {},&#10; &#9;arr = [&#34;abc&#34;, &#34;XYZ&#34;, 5, &#34;tyu&#34;];</code></pre><p>Save it refresh the screen and the results should exactly be the same, there is no difference. Now I want to make you familiar with three terminologies; <br/>1. Variable declaration<br/>2. Variable initialization<br/>3. Variable assignment.<br/>So declaration simply means that if I have a variable such as <code>var name2;</code> and I give it no value so although I did not give it a value this is still a variable inside the application if I simply do</p><pre><code class=\"language-javascript\">alert(name2)&#10;Comment this out //alert(name + &#34; &#34; + num);</code></pre><p>Refresh the screen and it says undefined</p><p><img src=\"//a.ilovecoding.org/img/variable-what-is-variables-in-javascript-sc4.png\" style=\"width: 100%;\"/><br/></p><p>So it is in the application but there is no value in <b>name2 </b>hit ok remove this all together and comment it out</p><pre><code class=\"language-javascript\">//alert(name + &#34; &#34; + num);&#10;//var name2;</code></pre><p>So let’s see what happens now, refresh the screen nothing happens so in my console.log() it said Uncaught RefrenceError: name2 is not defined</p><p><img src=\"//a.ilovecoding.org/img/variable-what-is-variables-in-javascript-sc5.png\" style=\"width: 100%;\"/><br/></p><p>So undefined is different than not defined this is actually an error because name2 does not exist in our entire application. Now the point I want to make to you is that we can declare name2 without giving it a value and later at a point I can say name2 = and give it a value for instance I would say Another Name</p><pre><code class=\"language-javascript\">name2 = &#34;Another Name&#34;</code></pre><p>And we would alert it afterwards like such</p><pre><code class=\"language-javascript\">var name2;&#9;// declaration&#10;name2 = &#34;Another Name&#34;;   // initialization&#10;alert(name2);  &#10;name2 = &#34;Changed value&#34; // assignment</code></pre><p>So we declared the variable name just to provide name I will just called it declaration. Whenever a variable is giving a value for the first time it’s called initialization, but if the value is changed it’s called assignment. And just for demonstration I will alert it one more time after the value is changed</p><pre><code class=\"language-javascript\">var name2;&#9;// declaration&#10;name2 = &#34;Another Name&#34;   // initialization&#10;alert(name2);  &#10;name2 = &#34;Changed value&#34; // assignment&#10;alert(name2);</code></pre><p>Save it refresh the screen Another Value is printed</p><p><img src=\"//a.ilovecoding.org/img/variable-what-is-variables-in-javascript-sc6.png\" style=\"width: 100%;\"/><br/></p><p>Hit OK another value gets printed it says Changed value</p><p><img src=\"//a.ilovecoding.org/img/variable-what-is-variables-in-javascript-sc7.png\" style=\"width: 100%;\"/><br/></p><p>So this time the name2 got changed to Changed value and that is now the new value. I hope you enjoyed the lesson, if you have any question, please leave your comments. I will see you in the next lesson. </p>",
    "createdMsec": 1.445399335314E+12,
    "updatedIso": {
      "$date": "2017-05-09T12:54:40.229Z"
    },
    "updatedMsec": 1.49433448023E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/variableWhatIsIt.zip",
    "videoSource": "//player.vimeo.com/video/103089282",
    "duration": "6:28",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:48:55.314Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Variables"
    ]
  },
  {
    "_id": "56271ce512c48c7105503804",
    "slug": "ng-repeat-in-angular-js",
    "title": "ng-repeat in Angular JS",
    "subTitle": "Learn ng-repeat directive of Angular JS",
    "thumbnail": "learnAngular-6-ngrepeat.png",
    "demoUrl": "demo/learnAngular-6-ngrepeat/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445403877517E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:48:40.351Z"
    },
    "updatedMsec": 1.533750520351E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-6-ngrepeat.zip",
    "videoSource": "//player.vimeo.com/video/126777902",
    "duration": "8:08",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:04:37.517Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "56271ea912c48c710550380d",
    "slug": "custom-directives-in-angular-js",
    "title": "Custom Directives in Angular JS",
    "subTitle": "Append functionality to Angular JS and write your own Custom Directives",
    "thumbnail": "learnAngular-15-custom-directives.png",
    "demoUrl": "demo/learnAngular-15-custom-directives/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445404329318E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:53:51.919Z"
    },
    "updatedMsec": 1.533750831919E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-15-custom-directives.zip",
    "videoSource": "//player.vimeo.com/video/128283317",
    "duration": "6:21",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:12:09.318Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "56270a04b8d7393405e40505",
    "slug": "variable-global-variables-or-global-scope-in-javascript",
    "title": "Variable: Global Variables or Global Scope in JavaScript",
    "subTitle": "What are global variables, how to use them, and why they are evil",
    "thumbnail": "variableGlobal.png",
    "demoUrl": "demo/variableGlobal/index.html",
    "bodyContent": "<div class=\"alert alertwarning\"><strong>You must know</strong> about <a title=\"Variables\" href=\"https://ilovecodingorg/lessons/variables\">Variables </a>and <a title=\"Variable Scope in JavaScript\" href=\"https://ilovecoding.org/lessons/variable-scope-in-javascript\"></a><a href=\"https://ilovecoding.org/lessons/variable-scope-in-javascript\" target=\"\">variable Scope</a> to understand this tutorial</div><p>Variables can have multiple contexts in which they exist AKA variable scope. Variables can also live in the global context, which is in the full scope of the application.</p><p><b>Transcript</b>:</p><p>In this lesson, we are going to learn about a very important concept called Global Variables. A global variable is a variable with global scope, meaning that it is visible (hence accessible) throughout the program unless highlighted.</p><p>So I'm going to write <b>var x</b> and give it a value XYZ so I have initialized that variable. <code>var x = &#34;XYZ&#34;;</code> and I'm going to console.log for simplicity like such</p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\">var x = &#34;XYZ&#34;;</code><br/>console.log(x)</pre><p><span style=\"float: none;\"><span class=\"Apple-converted-space\"><font size=\"4\">Open the console if you are using Google Chrome,</font><font size=\"4\"> Refresh the screen, and you see XYZ prints out on line no 14</font></span></span></p><p><span style=\"float: none;\"><span class=\"Apple-converted-space\"><font size=\"4\"><img src=\"//a.ilovecoding.org/img/variable-global-sc1.png\" style=\"width: 100%;\"/><br/></font></span></span></p><p><span style=\"float: none;\"><span class=\"Apple-converted-space\"><font size=\"4\">As you can see, I am in an HTML document, I have a script tag in </font></span></span><font size=\"4\">which all of my JavaScript is. Simply two lines of code. I can reference it in the log as well. If I write <b>x</b> and hit enter, XYZ will show up as shown below</font></p><p><font size=\"4\"><img src=\"//a.ilovecoding.org/img/variable-global-sc2.png\" style=\"width: 100%;\"/><br/></font></p><p><span style=\"font-size: large;\">You can also write <b>window.x </b>and hit enter in the console and same value of <b>x </b>is going to be printed.</span></p><p></p><p><img src=\"//a.ilovecoding.org/img/variable-global-sc3.png\" style=\"width: 100%;\"/>​</p><p></p><p></p><p><span style=\"font-size: 18.700000762939453px;\">When the HTML document is run, it attaches all the global variables to the object window in </span><b>window.x </b><span style=\"font-size: 18.700000762939453px;\">and this is a very bad thing. </span></p><p>Before I tell you why it's a bad thing, I wanna tell you another thing. Let's say I have a function like such</p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\">function func1(){<br/>    x = “ABC”;<br/>}</code></pre><p>The statement<code>x = &#34;ABC&#34;;</code> is called a variable assignment. </p><p><img src=\"//a.ilovecoding.org/img/variable-global-sc4.png\" style=\"width: 100%;\"/>​</p><p>Let's assume we don't have the <b>var x </b>code and we only have the function like such </p><p><img src=\"//a.ilovecoding.org/img/variable-global-sc5.png\" style=\"width: 100%;\"/>​</p><p>If there's no var before <b>x</b> that x will not be inside of func1 it will automatically be outside the scope and it's going to be in global scope. So if I ctrl + z to undo the changes and bring the var = x code back and refresh the screen. You will notice XYZ gets printed. </p><p><img src=\"//a.ilovecoding.org/img/variable-global-sc6.png\" style=\"width: 100%;\"/>​</p><p>I am going to console.log to print x one more time and run a function </p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\">function func1(){<br/>    x = “ABC”;</code><br/>    <b>console.log(x);</b><br/>}<br/><b>func1();</b><br/></pre><p>If I refresh the screen, XYZ and ABC will be printed.</p><p><img src=\"//a.ilovecoding.org/img/variable-global-sc7.png\" style=\"width: 100%;\"/>​</p><p>You will learn that the <b>window.x</b> is ABC </p><p><img src=\"//a.ilovecoding.org/img/variable-global-sc8.png\" style=\"width: 100%;\"/>​</p><p>If I change it to <b>var x</b> like shown below, then this is a different scope. </p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\">function func1(){<br/>    <b>var x</b> = “ABC”;</code><br/>    console.log(x)<b>;</b><br/>}<br/>func1();</pre><p>This two <b>x</b> are different <b>x</b>. <code>var x = &#34;XYZ&#34;;</code> is a global scope and <code>var x = &#34;ABC&#34;;</code> is in the scope of the function. </p><p><img src=\"//a.ilovecoding.org/img/variable-global-sc9.png\" style=\"width: 100%;\"/>​</p><p>Now if I write window.x in the console and hit enter, it's going to show the XYZ</p><p><img src=\"//a.ilovecoding.org/img/variable-global-sc10.png\" style=\"width: 100%;\"/>​</p><p>And if I remove var, then it automatically becomes the global </p><pre style=\"font-size: 18.7px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\">function func1(){<br/>    x = “ABC”;</code><br/>    <b>console.log(x);</b><br/>}<br/><b>func1();</b></pre><p>Putting var is very important if you want to define a scope. Now we're going to get to know why global variables are bad. There's no way for an external application, maybe an external website or a plugin in the browser. </p><p>There's no way for any external script to overwrite or mess around with our code. So for instance, I have installed an app in my browser. If they are also using global variables (which would be a very bad idea) and they have a variable called <b>x</b>, their value of <b>x</b> is going to mess with my value of <b>x</b>. </p><p>So our application can potentially break or can be hacked by any malicious person because our variables are accessible to those external people.</p><p>So one way to avoid is that to put all the script in a self-invoking anonymous function like such</p><pre style=\"font-size: 18.7px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\"><b>(function(){</b>&#10;&#10;&#9;var x = “XYZ”;&#10;&#9;console.log(x)&#10;&#9;&#10;&#9;function func1(){&#10;&#9;      x = “ABC”;&#10;&#9;      console.log(x);&#10;&#9;}&#10;&#9;func1();&#10;<b>{)();</b></code></pre><p><img src=\"//a.ilovecoding.org/img/variable-global-sc11.png\" style=\"width: 100%;\"/>​</p><p>Now if I write window.x in the console. It will say undefined. </p><p><img src=\"//a.ilovecoding.org/img/variable-global-sc12.png\" style=\"width: 100%;\"/>​</p><p>There's no way for the external party, external script or external hacker to access our variables or anything inside and mess around with it. </p><p>Now you know why the global variable is a bad practice and why you should avoid it.</p><p>I hope you enjoyed this lesson. I am going to talk to you in the comments.</p><p></p>",
    "createdMsec": 1.445399044788E+12,
    "updatedIso": {
      "$date": "2017-05-10T09:32:55.453Z"
    },
    "updatedMsec": 1.494408775453E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/variableGlobal.zip",
    "videoSource": "//player.vimeo.com/video/103086071",
    "duration": "6:43",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:44:04.786Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Global Variable"
    ]
  },
  {
    "_id": "562d27d9995935f23b5c56f2",
    "slug": "syncing-your-domain-web-host",
    "title": "Syncing your domain and web hosting",
    "subTitle": "Get to know the relation between your domain & web hosting",
    "thumbnail": "goingLive-part3.png",
    "demoUrl": "",
    "bodyContent": "<h2>Get to know the relation between your domain and web&nbsp;hosting</h2><p><span style=\"color: inherit;\">In this&nbsp;lesson, we are going to have your domain name and web host talk to each other </span>There are so many options available out there where you can get domain and web hosting from, but the ones I recommend are iwantmyname.com and&nbsp;bluehost.com&nbsp;</p><p>When you&nbsp;register a domain with a domain registrar, it has something called a nameserver, which has&nbsp;a piece of software that actually manages the DNS records for your domain. So when&nbsp;a consumer goes to your website or tries to email you at your <a href=\"mailto:name@domain.com\">name@domain.com</a> address, the DNS record has&nbsp;the information or the list of information on which computer your email account&nbsp;or the website is hosted on.</p><p>On the other&nbsp;side, web host has files of your website. Any computer which is connected to a&nbsp;network has a unique IP address  These are just numbers representing the address&nbsp;of that particular computer on the network.</p><p>In this&nbsp;lesson, we are going to add one line of record to the DNS record so it points the&nbsp;website to the right web host or to the IP address of the host.</p><p><b>NOTE:&nbsp;<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">If your domain registrar &amp; web hosting company are the same; you do not need this&nbsp;step.</span></b></p><p>I'm going to sign in on iwantmyname.com and as you can see the location of the particular stackjs.com website.&nbsp;</p><p><img src=\"//a.ilovecoding.org/img/syncing-your-domain-web-host-sc1.png\" style=\"width: 100%;\"><br></p><p>If I visit the website it won't do anything because it's not set-up yet, but we can change the DNS record by clicking \"manage DNS records\". Also if you don't want your nameservers to be managed by your company or let's say you want your nameservers to be managed by Bluehost or some other company, you can change them as well.&nbsp;</p><p>Where your website is hosted, that's where the DNS record is and that's how you change those records. Click on \"manage DNS records\" and you will see that it does not have anything there.</p><p><img src=\"//a.ilovecoding.org/img/syncing-your-domain-web-host-sc2.png\" style=\"width: 100%;\"><br></p><p>So in order to set the website to another host, we need to put an IP address. The IP address is going to be the IP address of the hosting company. Our hosting company is Bluehost so I'll sign in and go to cPanel and scroll all the way down where the information is mentioned. If the information is not mentioned on the website, you may want to contact the customer service of your hosting company in order to get the information.</p><p>As you can see below is the shared IP address, that's the IP address of the server where your website is going to be hosted.</p><p><img src=\"//a.ilovecoding.org/img/syncing-your-domain-web-host-sc3.png\" style=\"width: 100%;\"><br></p><p>Put the IP address inside the section, in the hostname, you can either put your website, your blog name or simply leave it empty as it says. Once done you can click add and hit save DNS settings.</p><p><img src=\"//a.ilovecoding.org/img/syncing-your-domain-web-host-sc4.png\" style=\"width: 100%;\"><br></p><p>The DNS takes from 24 to 48 hours to propagate throughout the internet. Bluehost server is in the US so in our case, it took effect immediately. Since the setup is not complete yet so it directs to the Bluehost server.</p><p><img src=\"//a.ilovecoding.org/img/syncing-your-domain-web-host-sc5.png\" style=\"width: 100%;\"><br></p><p>In order to add a&nbsp;domain, you need to add the domain name. If you're using the blue host plus account, it allows you the host unlimited amount of domains.&nbsp;</p><p><img src=\"//a.ilovecoding.org/img/syncing-your-domain-web-host-sc6.png\" style=\"width: 100%;\"><br></p><p>Every server has folders just like your computer has a lot of folders. In a web server, they have a directory called public_html where you upload your website files.&nbsp;You might be wondering why does it say azizali.com? The reason is that my primary domain name is azizali.com and it's hosted on Bluehost so don't worry about it.</p><p><img src=\"//a.ilovecoding.org/img/syncing-your-domain-web-host-sc7.png\" style=\"width: 100%;\"><br></p><p>Now if I refresh the page you can see the website is loading a default webpage.&nbsp;</p><p><img src=\"//a.ilovecoding.org/img/syncing-your-domain-web-host-sc8.png\" style=\"width: 100%;\"><br></p><p>There's another thing I want to tell you guys if I write www.stack.js.com and hit enter, it will show an error that the webpage is not available. Stackjs.com and www.stackjs.com are two completely different websites. Yes, we may ignore such little things in real but there's a difference between those. But since it's a standard we need to make sure that stackjs.com and www.stackjs.com both lead to the same website.&nbsp;</p><p>You can write www and the IP address in the section like such</p><p><img src=\"//a.ilovecoding.org/img/syncing-your-domain-web-host-sc9.png\" style=\"width: 100%;\"><br></p><p>It can take up to 24 to 48 hours to take effect. Another thing I want to tell you guys is that there are different kinds of records. We have the <b>A </b>record which is used for a domain name, subdomain name. But there are other records as well like<b>&nbsp;CName</b> which ware just aliases, for example, if you want blog.stackjs.com to point to www.stackjs.com you would use a<b> CNAME. MX</b> records are used for email. There are others as well but the first three are the primary ones.&nbsp;</p><p><img src=\"//a.ilovecoding.org/img/syncing-your-domain-web-host-sc10.png\" style=\"width: 100%;\"><br></p><p>I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in future lessons.</p>",
    "createdMsec": 1.445799897339E+12,
    "updatedIso": {
      "$date": "2018-11-29T02:16:13.55Z"
    },
    "updatedMsec": 1.54345777355E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/122577317",
    "duration": "11:02",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:04:57.339Z"
    },
    "technology": [
      "Web Hosting"
    ],
    "topic": [
      "Web Hosting"
    ]
  },
  {
    "_id": "562d275b995935f23b5c56f0",
    "slug": "choosing-domain-registrar-web-hosting",
    "title": "Choosing Domain Registrar and Web Hosting Provider",
    "subTitle": "In this video you will learn where to get your domain and hosting from. I will share with you 6 companies I recommend and personally use.",
    "thumbnail": "goingLive-part2.png",
    "demoUrl": "",
    "bodyContent": "<h2>Choosing a domain registrar and web hosting provider</h2><p>In this lesson, we will learn where to get your domain and hosting from For domain, I have these recommendations:</p><ol><li><a href=\"https://iwantmyname.com/\" target=\"\">iwantmyname</a> (Simple and a lot of choices)</li><li><a href=\"https://godaddy.com/\" target=\"\">GoDaddy</a>&nbsp;(They have phone support, good for beginners)</li><li><a href=\"https://domains.google/\">Google Domains</a> (Simple and good)</li><li><a href=\"https://aws.amazon.com\">Amazon Web Services</a> (Advance users)</li></ol><p>All the above companies are highly reputable but I prefer <a href=\"https://iwantmyname.com/\">iwantmyname</a> because it has a simple interface.</p><p>For web hosting, I have these recommendations. I personally like <a href=\"https://SiteGround.com\">SiteGround</a> (these days)</p><ol><li><a href=\"https://siteground.com\">SiteGround</a><br></li><li><a href=\"http://www.hostgator.com/\" target=\"\">HostGator</a></li><li><a href=\"https://godaddy.com/\" target=\"\">GoDaddy</a></li><li><a href=\"bluehost.com\" target=\"\">BlueHost</a></li></ol><h3>Things to consider before buying web hosting:</h3><p>You might want to consider the number of domains you can have with one web hosting service. You might have 10 websites or 20 websites or so. So you need to look for different options available. As you can see below, HostGator provides unlimited domains but the hatchling plan only comes with a single domain. The second thing you should consider is the amount of space and the bandwidth they're providing you  Or the amount of traffic they're allowing you.<br><br><img src=\"//a.ilovecoding.org/img/choosing-domain-registrar-and-web-hosting-provider-sc1.png\" style=\"width: 100%;\"></p><p>On BlueHost, you can only get 1 domain with a starter plan but with other packages it's unlimited as well. The website space is 100GB for a starter plan but unlimited for other accounts. But the email accounts you can create with a starter plan are only 100. If your company has over 100 employees and you need more email accounts you might want to update the plan otherwise stick to the basic one.</p><p><img src=\"//a.ilovecoding.org/img/choosing-domain-registrar-and-web-hosting-provider-sc2.png\" style=\"width: 100%;\"></p><p>With GoDaddy, you get 1 domain for $4.99/month and unlimited with other plans as you can see below.<br><br><img src=\"//a.ilovecoding.org/img/choosing-domain-registrar-and-web-hosting-provider-sc3.png\" style=\"width: 100%;\"></p><p>Compare the above plans and companies and make a choice depending on your needs. But do keep in mind that when you buy web hosting, they often come with a free domain name. So you do not need to buy it separately. These companies will give you a free domain for the period of one year.&nbsp;</p><p>I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson.</p>",
    "createdMsec": 1.445799771035E+12,
    "updatedIso": {
      "$date": "2019-02-06T22:24:39.197Z"
    },
    "updatedMsec": 1.543456844513E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/122527370",
    "duration": "5:32",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:02:51.035Z"
    },
    "technology": [
      "Web Hosting"
    ],
    "topic": [
      "Domain Registrar and Web Hosting Provider"
    ]
  },
  {
    "_id": "562d279a995935f23b5c56f1",
    "slug": "upload-your-website-using-ftp",
    "title": "Upload Your Website Using FTP",
    "subTitle": "Learn how to upload your website to your Web Host, and your website will be live for the whole world to see",
    "thumbnail": "goingLive-part4.png",
    "demoUrl": "",
    "bodyContent": "<p>In this lesson, you will learn how to upload your website using FTP to a web host or a domain To upload the files, you're going to need a tool called&nbsp;<a href=\"https://filezillaproject.org/\" target=\"_blank\">FileZilla</a>. Get the windows version or the Mac version.&nbsp;File Zilla is an FTP (<span style=\"font-size: 14.4px; font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;;\">File Transfer Protocol</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">) client.</span></p><p>For the sake of this lesson, we'll be using the same project that we created in our <a href=\"https://ilovecoding.org/courses/htmlcss2\">Learn HTML &amp; CSS lesson</a>.</p><p>Click on the button and create a new site profile. Once done you can update all the information.&nbsp;</p><p><img style=\"width: 100%;\" src=\"//a.ilovecoding.org/img/upload-your-website-using-ftp-sc1.png\"></p><p>In the host, you can either put the IP address of the server or the primary domain name. The port is going to be 21 but every host is different so you need to check with your host. Set the encryption to \"Only use pain FTP (insecure) since this was recommended by BlueHost in our case but it might be different in your case. Enter the user password.</p><p><img style=\"width: 100%;\" src=\"//a.ilovecoding.org/img/upload-your-website-using-ftp-sc2.png\"></p><p>In your FileZilla public_html folder you can drag and drop your website.</p><p><img style=\"width: 100%;\" src=\"//a.ilovecoding.org/img/upload-your-website-using-ftp-sc3.png\"></p><p>Now if we go to the website you can see it's working fine</p><p><img style=\"width: 100%;\" src=\"//a.ilovecoding.org/img/upload-your-website-using-ftp-sc4.png\"></p><p>So this is how you upload your website to a host. If you have any question please leave your comments below. I'll talk to you in the next lesson.</p>",
    "createdMsec": 1.44579983455E+12,
    "updatedIso": {
      "$date": "2018-11-29T02:08:45.112Z"
    },
    "updatedMsec": 1.543457325112E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/122527371",
    "duration": "4:45",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:03:54.55Z"
    },
    "technology": [
      "Web Hosting"
    ],
    "topic": [
      "FTP"
    ]
  },
  {
    "_id": "5622d2188795649145fce183",
    "slug": "full-cover-background-image",
    "title": "Full Cover Background Image",
    "subTitle": "In this video you will learn how to set a Full Screen Background Image on your website. Similar designs are used in landing pages.",
    "thumbnail": "fullCoverBackgroundImage.png",
    "demoUrl": "demo/fullCoverBackgroundImage/index.html",
    "bodyContent": "<p>Welcome to another lesson of iLoveCoding in this lesson you will learn&nbsp;how to set up a Full-Screen Background Image on your website. This isn't just an ordinary background image, the special thing about this background is that if you resize the window, the background image will adjust itself according to the size.</p><p><img src=\"//a.ilovecoding.org/img/full-cover-background-image-sc1.png\" style=\"width: 100%;\"><br></p><p>We are also going to learn how to center the content so no matter what the height and the width of your page is, the content is always going to be centered for that particular area as shown below.</p><p><img src=\"//a.ilovecoding.org/img/full-cover-background-image-sc2.png\" style=\"width: 100%;\"><br></p><p><b>Another scenario</b><br>Another thing I want to show you guys is that I have another page which has a background and lots of random stuff in it. But if I scroll up and down or resize the page, the cover image will resize but it will remain static like such.</p><p><img src=\"//a.ilovecoding.org/img/full-cover-background-image-sc3.png\" style=\"width: 100%;\"><br></p><p>I have some basic HTML document which has some styles in it.&nbsp;</p><p><img src=\"//a.ilovecoding.org/img/full-cover-background-image-sc4.png\" style=\"width: 100%;\"><br></p><p>It has three classes \"container-main\" \"row-wrap\" \"row\" and with the h1 tag \"text-center\". Apart from that, there's some random text, nothing fancy or complicated. I also have some default styles written as you can see below.<br></p><p><img src=\"//a.ilovecoding.org/img/full-cover-background-image-sc5.png\" style=\"width: 100%;\"><br></p><p>We are going to start off by styling the container area by writing like such</p><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">.container-main{<br>&nbsp;&nbsp;background-image:  url(../img/beach1.jpg);<br>&nbsp;&nbsp;background-size:cover;<br>}</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the page and you will see that the topic area has a cover image as shown below</span></p><div><img src=\"//a.ilovecoding.org/img/full-cover-background-image-sc6.png\" style=\"width: 100%;\"><br><div><br>This looks good but we are not happy yet as it's not covering the entire area of our screen. The next thing we're going to do is to set the HTML to 100% like such</div><div><br><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">html{<br>&nbsp;&nbsp;height:100%;<br>}</code></pre><!--EndFragment--><span style=\"float: none;\">Another thing I'll do is to go to the HTML document and style \"row-wrap\" which is also covering the entire area, but now we want to set it up so that it covers the entire area by writing like such</span></div><div><br><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">.row-wrap{<br>&nbsp;&nbsp;display: table;<br>&nbsp;&nbsp;height: 100%;<br>}</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and you will see the background is now covering the entire area.</span></div><div><img src=\"//a.ilovecoding.org/img/full-cover-background-image-sc7.png\" style=\"width: 100%;\"><br><br>To center the text, I'm going to set the width to 600 pixels and margin to auto</div><div><br><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">.row-wrap{<br>&nbsp;&nbsp;display: table;<br>&nbsp;&nbsp;height: 100%;\n  width: 600px;\n  margin: 0 auto;\n}</code></pre><!--EndFragment--><span style=\"float: none;\">To make the text in the middle, I'll write like such</span></div><br><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">.row{<br>&nbsp;display: table-cell;<br>&nbsp;vertical-align: middle;\n height: 100%; <br>}</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and now you can see the text is in the middle.<br><br></span></div><div><img src=\"//a.ilovecoding.org/img/full-cover-background-image-sc8.png\" style=\"width: 100%;\"><br><div><p><br>No matter what the height is of the page, the content is going to be vertically in the center like such</p><p><img src=\"//a.ilovecoding.org/img/full-cover-background-image-sc9.png\" style=\"width: 100%;\"><br></p><p>I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the comments.</p></div></div>",
    "createdMsec": 1.445122584608E+12,
    "updatedIso": {
      "$date": "2018-12-14T14:14:23.378Z"
    },
    "updatedMsec": 1.493965276785E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/fullCoverBackgroundImage.zip",
    "videoSource": "//player.vimeo.com/video/121991710",
    "duration": "10:00",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-17T22:56:24.608Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "56270d65b8d7393405e40511",
    "slug": "build-your-own-snake-game-with-javascript-part-2-of-3",
    "title": "Build Your Own Snake Game with JavaScript (Part 2 of 3)",
    "subTitle": "Build Your Own Snake Game with JavaScript Part 2",
    "thumbnail": "snakegame2.png",
    "demoUrl": "demo/snakeGame2/index.html",
    "bodyContent": "<div><p><strong>Part 1</strong>: <a title=\"Build Your Own Snake Game with JavaScript (Part 1 of 3)\" href=\"https://ilovecodingorg/lessons/56270d99b8d7393405e40512\"></a><a href=\"https://ilovecoding.org/lessons/buildyour-own-snake-game-with-javascript-part-1-of-3\" target=\"\">Build Your Own Snake Game with JavaScript (Part 1 of 3)</a><br/><strong>Part 2</strong>: Build Your Own Snake Game with JavaScript (Part 2 of 3) (currently watching)<br/><strong>Part 3</strong>: <a href=\"https://ilovecoding.org/lessons/56270d0db8d7393405e40510\"></a><a href=\"https://ilovecoding.org/lessons/build-your-own-snake-game-with-javascript-part-3-of-3\" target=\"\">Build Your Own Snake Game with JavaScript (Part 3 of 3)</a></p></div>",
    "createdMsec": 1.445399909823E+12,
    "updatedIso": {
      "$date": "2018-06-19T20:27:20.555Z"
    },
    "updatedMsec": 1.529440040555E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/snakeGame2.zip",
    "videoSource": "//player.vimeo.com/video/119997997",
    "duration": "8:53",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:58:29.822Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": []
  },
  {
    "_id": "5622d1db8795649145fce182",
    "slug": "json-what-is-json-and-how-to-use-it",
    "title": "JSON - What is JSON and how to use it",
    "subTitle": "JSON (JavaScript Object Notation) is simply data organized in a specific fashion. That fashion mimics the syntax of Object Literals in JavaScript. Data organized in JSON format is used by lanugages other than JavaScript as well. Think of this Data formatting as a new standard of organizing data to send over the web.",
    "thumbnail": "json.png",
    "demoUrl": "demo/json/json.html",
    "bodyContent": "<h1>What is JSON and how to use it </h1><p>Welcome to another lesson on iLoveCodingorg. In this lesson, we are going to learn what JSON is; And when and why to use JSON.<br/><br/>As you know that JavaScript object is written in a particular format <code>var obj = { };</code> and you start writing content in the curly braces. You can have object within an object or an array within an object like such<br/></p><p><img src=\"//a.ilovecoding.org/img/jsonwhat-is-json-and-how-to-use-it-sc1.png\" style=\"width: 100%;\"/><br/></p><p>Douglas Crockford said that JavaScript objects have a special kind of format in which you can store information. He suggested that we should remove the first line of code, and data can be stored in that particular format as shown below</p><p><img src=\"//a.ilovecoding.org/img/json-what-is-json-and-how-to-use-it-sc2.png\" style=\"width: 100%;\"/><br/></p><p>Before the word JSON was introduced, data on the internet would be carried in XML format which is also just text, organized in a HTML markup style.</p><p><img src=\"//a.ilovecoding.org/img/json-what-is-json-and-how-to-use-it-sc3.png\" style=\"width: 100%;\"/><br/></p><p>Also the XML format has more characters, while JSON has less amount of characters. When it's transferred to the internet, the spaces are removed.</p><p><img src=\"//a.ilovecoding.org/img/json-what-is-json-and-how-to-use-it-sc4.png\" style=\"width: 100%;\"/><br/></p><p><b>How JSON data is used practically on the internet</b></p><p>Open the chrome developer tools and go to twitter, and click on &#34;view x amount of new tweets&#34; go to the network tab, click on the type of data and go to the response tab. You can see the data in JSON format as shown below</p><p><img src=\"//a.ilovecoding.org/img/json-what-is-json-and-how-to-use-it-sc5.png\" style=\"width: 100%;\"/><br/></p><p>If you want to learn more about JSON, there are a few videos on iLoveCoding.org. Watch the last three videos on AJAX in <a href=\"https://ilovecoding.org/courses/learn-jquery-in-14-days\" target=\"\">Learn JQuery in 14 days</a> course. At the end of the videos, you will be able to create a few applications via the Google APIs.</p><p>I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson. Good bye :)</p>",
    "createdMsec": 1.445122523404E+12,
    "updatedIso": {
      "$date": "2017-05-03T14:21:26.501Z"
    },
    "updatedMsec": 1.493821286502E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/json.zip",
    "videoSource": "//player.vimeo.com/video/122527369",
    "duration": "5:25",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-17T22:55:23.404Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "JSON"
    ]
  },
  {
    "_id": "5622cf118795649145fce17a",
    "slug": "best-practices-when-writing-media-queries-2",
    "title": "Best Practices when Writing Media Queries 2",
    "subTitle": "Learn the best practices and discover the 4 rule of thumbs when building responsive websites with media queries.",
    "thumbnail": "mediaQueryPractice.png",
    "demoUrl": "demo/mediaQueryPractice/index.html",
    "bodyContent": "<p><strong>Resources Mentioned in Lesson</strong></p><ul><li><a href=\"http://getbootstrapcom/customize/#mediaqueries-breakpoints\">Common Breakpoints</a></li><li><a href=\"http://getbootstrap.com\">Bootstrap </a>AKA Twitter Bootstrap (CSS Framework)</li><li><a href=\"http://foundation.zurb.com/\">ZURB Foundation</a> (CSS Framework)</li></ul><p><b>Transcript</b>:</p><p>Welcome to another lesson of iLoveCoding. In this lesson, we are going to practically make a webpage into a responsive web design. So if you narrow or wider the web page the content is going to adjust its width so it's much more presentable.</p><p>We are going to use media queries for that purpose. I have pre HTML written as you can see below</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc1.png\" style=\"width: 100%;\"/>​</p><p>I have also some pre written CSS for the style of the website. It doesn't have any media queries.</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc2.png\" style=\"width: 100%;\"/>​</p><p>Also, we are going to discuss some of the rule of thumbs when writing media queries to make responsive web design. <br/><b style=\"font-size: 18.700000762939453px;\">Rule of thumb #1</b></p><p>The first rule of thumb is that always write the media queries at the bottom of the page. You know that CSS will pick up any of the style which are actually at the bottom. It's going to take those styles as preference. <br/></p><p>I'm going to write some media query for demonstration. I’m going to set a condition so if that condition is true, certain effect will take place. For instance if the minimum size of a web page is 1px, the width is going to be 300px. if the min width is 400px, the width is going to be 500px </p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\">@media (min-width:1px){<br/>    .wrapper{<br/>       width: 300px;<br/>     }<br/>      }<br/><br/>@media (min-width:400px){<br/>    .wrapper{<br/>       width: 500px;<br/>     }<br/>      }<br/><br/>@media (min-width:600px){<br/>    .wrapper{<br/>       width: 700px;<br/>     }<br/>      }<br/><br/>@media (min-width:900px){<br/>    .wrapper{<br/>       width: 1000px;<br/>     }<br/>      }</code></pre><p><img src=\"//a.ilovecoding.org/img/media-queries-sc3.png\" style=\"width: 100%;\"/>​</p><p>If I a change the size of the webpage and make it a little over 600px, it's width is going to be 700px as you can see below </p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc4.png\" style=\"width: 100%;\"/>​</p><p>I'm gonna narrow a little more and now if I scroll down, the text is not covering the entire area, check the screenshot below</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc5.png\" style=\"width: 100%;\"/>​</p><p>I'm going to right click and inspect element and see that the element of main has a width of 70%</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc6.png\" style=\"width: 100%;\"/>​</p><p>I'm going to make it 100% so it's covering the entire area. To do that, I'm going to set a condition that if it's a small form factor then we want it to be 100% but I am not going to do for the last one. </p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\">@media (min-width:1px){<br/>    .wrapper{<br/>       width 300px;<br/>     }<br/>   <b> main{<br/>      width: 100%<br/>    }</b><br/>      }<br/><br/>@media (min-width:400px){<br/>    .wrapper{<br/>       width 500px;<br/>     }<br/>   <b> main{<br/>      width: 100%<br/>    }</b><br/>      }<br/><br/>@media (min-width:600px){<br/>    .wrapper{<br/>       width 700px;<br/>      }<br/>    <b>main{<br/>      width: 100%<br/>    }</b><br/>      }<br/><br/>@media (min-width:900px){<br/>    .wrapper{<br/>       width 1000px;<br/>     }<br/>      }</code></pre><p><img src=\"//a.ilovecoding.org/img/media-queries-sc7.png\" style=\"width: 100%;\"/>​</p><p>Now if I refresh the page, you can see the text is covering the entire width.</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc8.png\" style=\"width: 100%;\"/>​</p><p>But there's a problem. You see that the text is covering the entire width but the useful links tab is at the bottom as you can see below.</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc9.png\" style=\"width: 100%;\"/>​</p><p>I’m going to add 70% width for <b>main</b> as highlighted below.</p><pre style=\"font-size: 18.700000762939453px;\"><code class=\"language-javascript\" style=\"font-size: inherit;color: inherit;background-color: transparent;\">@media (min-width:1px){<br/>    .wrapper{<br/>       width 300px;<br/>     }<br/>    main{<br/>      width: 100%<br/>    }<br/>      }<br/><br/><br/>@media (min-width:400px){<br/>    .wrapper{<br/>       width 500px;<br/>     }<br/>    main{<br/>      width: 100%<br/>    }<br/>      }<br/><br/>@media (min-width:600px){<br/>    .wrapper{<br/>       width 700px;<br/>      }<br/>    main{<br/>      width: 100%<br/>    }<br/>      }<br/><br/>@media (min-width:900px){<br/>    .wrapper{<br/>       width 1000px;<br/>     }<br/>     <b>main{<br/>       width: 70%;<br/>    }</b><br/>      }</code></pre><p><img src=\"//a.ilovecoding.org/img/media-queries-sc10.png\" style=\"width: 100%;\"/>​</p><p>I'm gonna save it and refresh the screen and you can see that it's fixed now.</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc11.png\" style=\"width: 100%;\"/>​</p><p><b style=\"font-size: 18.700000762939453px;\">Rule of thumb #2</b><br/></p><p>The second rule of thumb of using Media Query is that use all the min-width OR max-width media queries for control. So if you want to have a good structure of media queries, you can either use different ranges and the media queries are not going to over lap</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc12.png\" style=\"width: 100%;\"/>​</p><p>Or you can use only min-width in a structure or only max-width in a structure. But with that, the third rule of thumb is also very important. </p><p><b>Rule of thumb #3</b></p><p>When using min-width, if you're using all min-width the narrower media quereis goes first and the widest media query will go last. It will be in that particular order.<br/></p><p>This goes back to our concept that whatever media query is or whatever CSS is written on the bottom will always take precedence. In our example the order is starting from the low px from 400px then 600px and the last one is 900px as you can see below</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc13.png\" style=\"width: 100%;\"/>​</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc13.png\" style=\"width: 100%;\"/>​</p><p>The order matters a lot. If I change the order and put the highest px at the top like such</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc14.png\" style=\"width: 100%;\"/>​</p><p><span style=\"font-size: 18.700000762939453px;\">the media query is not going to work as you can see below.</span><br/></p><p></p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc15.png\" style=\"width: 100%;\"/>​</p><p></p><p>If you are using all min-width then you want to use the lowest one on top and the highest on the bottom. </p><p><b style=\"font-size: 18.700000762939453px;\">Rule of thumb #4</b><br/></p><p>The rule number 4 is exactly the opposite. When using the max-width the widest width of media query go first and the narrowest go last</p><p>In the last I want to make a few recommendations when using your break point. Break points are width points that you are using on your media query. </p><p>The standard ones are used by a framework called bootstrap which is actually a CSS framework that implements media queries. </p><p>They use these 4 break points.</p><p><img src=\"//a.ilovecoding.org/img/media-queries-sc16.png\" style=\"width: 100%;\"/>​</p><p>That's what I would recommend to stick with when you're writing media queries. Bootstrap is the most popular CSS framework out there and it's used by thousands if not millions of websites. </p><p>So these break points are tested and proven to work for most devices. In fact, the website iLoveCoding.org is built with bootstrap and it's accessible to almost any device. </p><p>So that's pretty much it for this lesson. You learned how to practically structure media queries, some rule of thumbs when writing media queries and the logic why. Also you looked at some break points as well.</p><p>Please go ahead and practice with this particular lesson so you get a grasp of on how to actually use media queries, and lastly from a practical stand point, I highly recommend that you use a framework when building a professional website for your client and for a company that you work for. </p><p>Choose bootstrap that's one of my favorite. Zurb foundation is also very popular although I have not heavily used it. </p><p>So these CSS frameworks actually have all these CSS rules and a lot of boilerplate already done for you so it really speeds up your development and you don't have to do a lot of troubleshooting and figuring out on your own because a lot of these best practices are already included in these CSS frameworks. </p><p>And the CSS frameworks are just combination of a lot of CSS styles pre coded, It's nothing complicated. I hope you enjoyed reading this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson :) </p>",
    "createdMsec": 1.445121809123E+12,
    "updatedIso": {
      "$date": "2017-05-22T08:13:17.296Z"
    },
    "updatedMsec": 1.495440797297E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/mediaQueryPractice.zip",
    "videoSource": "//player.vimeo.com/video/124930610",
    "duration": "9:37",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-17T22:43:29.122Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Responsive Design"
    ]
  },
  {
    "_id": "56270a3cb8d7393405e40506",
    "slug": "function-hoisting-in-javascript",
    "title": "Function Hoisting in JavaScript",
    "subTitle": "Hoisting means to rise to the top; Functions in JavaScript automatically rise to the top of the code. That is good news for you as a JavaScript Engineer. Learn how Function Hoisting is your friend",
    "thumbnail": "functionHoisting.png",
    "demoUrl": "",
    "bodyContent": "<div class=\"alert alertwarning\"><strong>To understand this tutorial, you must know</strong> about <a title=\"Functions\" href=\"https://ilovecodingorg/lessons/functions\">Function</a></div><h1>Function Hoisting in JavaScript</h1><p>In this lesson, we'll learn what is Function Hoisting in JavaScript. Functions are declared in two ways.<br/><b>1st method</b></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var a = function(){&#10;  console.log(&#34;Print A&#34;)&#10;};&#10;</code></pre><!--EndFragment--><p><b>2nd method</b></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">function b(){&#10;  console.log(&#34;Print B&#34;)<br/>}</code></pre><!--EndFragment--><p><span style=\"float: none;\">we'll write some function inside it like such</span></p><div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var a = function(){<br/>  console.log(&#34;Print A&#34;);<br/>};</code></pre><!--EndFragment--></div><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">function b(){<br/>  console.log(&#34;Print B&#34;);<br/>}</code></pre><!--EndFragment--><p><img src=\"//a.ilovecoding.org/img/function-hoisting-in-javascript-sc1.png\" style=\"width: 100%;\"/></p><p>But this alone does not do anything, we need to call a function. To accomplish that we can write like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">a();&#10;b();</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and you can see it printed it in the console.<br/></span></p><div><img src=\"//a.ilovecoding.org/img/function-hoisting-in-javascript-sc2.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">If you swap the order then the order in the console will also take effect. But if we remove the order and call the function at the top of the program as shown below, it won't work.<br/><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/function-hoisting-in-javascript-sc3.png\" style=\"width: 100%;\"/><br/></span></div><div><br/><span style=\"float: none;\">We are going to comment out the <b>A </b>function and let alone run the <b>B</b> function and lets see what happens now. Save it, refresh the screen and this time <b>B</b> printed.<br/><br/></span></div><div><img src=\"//a.ilovecoding.org/img/function-hoisting-in-javascript-sc4.png\" style=\"width: 100%;\"/><br/><div><br/><span style=\"float: none;\"><b>The concept of Hoisting</b></span></div><div>Hoisting means that whenever a particular function is declared in the application, if the function is declared in a particular syntax as shown below, it is going to hoist as if that was declared on the very top of the application, and then run any command or actions.  </div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">function b(){<br/>  console.log(&#34;Print B&#34;);<br/>}</code></pre><!--EndFragment--><span style=\"float: none;\">But if we are declaring the function in this particular syntax, it is not going to hoist it.<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var a = function(){<br/>  console.log(&#34;Print A&#34;);<br/>};</code></pre><!--EndFragment--><p><span style=\"float: none;\">This is the reason why we were getting the error. But if we call the <b>A</b> function after it was declared, it is not going to give us the error.<br/></span> <img src=\"//a.ilovecoding.org/img/function-hoisting-in-javascript-sc5.png\" style=\"width: 100%;\"/></p><div><span style=\"float: none;\">I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson.</span></div>",
    "createdMsec": 1.445399100863E+12,
    "updatedIso": {
      "$date": "2017-05-05T06:47:36.249Z"
    },
    "updatedMsec": 1.49396685625E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/103090108",
    "duration": "3:41",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:45:00.863Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Function Hoisting"
    ]
  },
  {
    "_id": "56271dcc12c48c7105503807",
    "slug": "built-in-filters-in-angular-js-part-1",
    "title": "Built-in Filters in Angular JS - Part 1",
    "subTitle": "Learn Angular Filters and how data can be filtered or manipulated with filters",
    "thumbnail": "learnAngular-9-filters-1.png",
    "demoUrl": "demo/learnAngular-9-filters-1/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445404108723E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:51:10.222Z"
    },
    "updatedMsec": 1.533750670222E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-9-filters-1.zip",
    "videoSource": "//player.vimeo.com/video/127808191",
    "duration": "7:42",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:08:28.723Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "56270cc8b8d7393405e4050f",
    "slug": "big-picture-for-jstack-development",
    "title": "Big Picture for jStack Development",
    "subTitle": "You are going to learn how websites work, what the heck is HTML, CSS and JavaScript and How a newbie like you can get started and navigate to the top",
    "thumbnail": "big-picture.png",
    "demoUrl": "",
    "bodyContent": "<p>The big picture How to break into the <strong>Web Development</strong><span> industry and navigate to the top</span><br/></p><p>If you know nothing about coding, or building websites but you are ambitious or simply curious about this, this is the video for you</p><h3>You are going to learn</h3><ol><li>How websites work</li><li>What the heck is HTML, CSS &amp; JavaScript</li><li>How should a newbie like you get started</li></ol><p>So how does really a website work? You go to Facebookcom, Twitter.com, Instagram, YouTube and you really don't know how it works! TODAY you're gonna know HOW!So when you go to your browser weather be on your phone or on your computer, you type in lets say Google.com the internet figures out where the website resides on the internet, goes to a physical server where the website resides and then that server sends you three kinds of files the HTML, CSS &amp; JavaScript file. When that is received by your computer which is your browser, it processes that three files and shows this beautiful website on your computer.</p><p>Now notice that the HTML, CSS &amp; JavaScript files are processed by your browser on your computer and that kind of processing is called the clientside processing. Now before these files are sent to you on your computer, there's also some processing that happens on the server-side and that kind of processing is called the server-side processing. </p><p>To build a beautiful website you MUST know three technologies HTML, CSS &amp; JavaScript that works on the Client-Side since you notice that these three technologies are essential to build a website. On a Client-Side you can use technology such as Ruby, PHP, JAVA (which is different than JavaScript), C++, Python and JavaScript. </p><p>There are many languages out there as well that you can to do Server-Side operations, Server-side operations include working with databases, creating Email systems, creating API's and other such operations that happen on the server where information is processed and saved on the disk.When it comes to Client-side operations, mostly the interactions that you do with the website such as form validations, how beautiful the website looks, the color, the feels, the pop ups that you see, all those interactions that user behavior interactions are built via HTML, CSS &amp; JavaScript. </p><p>Now did you noticed that JavaScript is the only language that can be used to program on the client-side and also on the server-side, And that is a very big advantage that JavaScript has. You can know just one technology and do all kinds of operations and become a full stack developer.What do I mean by a <strong>FULL STACK DEVELOPER?</strong></p><p><span>Somebody who can do this client-side programming as well as the server-side programming and that kind of a programmer is called a full stack developer.Well moving on! you noticed that why do we have to learn three languages, we must know three languages.</span></p><ol><li>HTML</li><li>CSS</li><li>JavaScript</li></ol><p>Why can't we just learn one? Good question! now HTML, CSS &amp; JavaScript are three distinct languages and they're used for total distinct purposes, now think about it. If you were to consider human being as a website, A skeleton would be made by HTML the simple architecture actually architecture is a very fancy word. It's really the basic building blocks on where the content is gonna show, where the header is gonna be, where the footer is gonna be, where the content is gonna be, where the navigation is gonna be, those kind of basic placements are gonna be coded via HTML. </p><p>HTML is really simple. It just has simple syntax that you type it and it works.CSS on the other hand is cascading style sheet yes that's a mouthful those are simple styles that you write to make that skeleton into a beautiful human being lets say or beautiful website with different colors, different layouts, some hover affects when you hover over the mouse on the image maybe becomes dull or maybe becomes bolder whatever those simple beautification features a website has are all coded via CSS.JavaScript on the other hand is a complete programming language which creates those user interaction behaviors that you can code lets say form validations, you can create sliders, you can create accordions, you can create pop and pop up windows and can do a lot of data processing with this language.</p><p>If you were to break it down HTML &amp; CSS will take care of the look and feel of the website and JavaScript is really the intelligent brain of the website. Without the intelligence the website is really a manikin. Now HTML &amp; CSS  are not programming languages YES they're languages but they're really syntax based you just type in that syntax and that particular action happens. It doesn't have a lot of logic involved unlike JavaScript which is a full fledged programming language which can do all kinds of operations that other programming languages can do.</p><p>Now you may have heard about this new term &#34;the Mobile web&#34; or &#34;Responsive web design&#34; that's basically the same thing when CSS3 was launched a few years ago there was a new concept introduced in which a website can be designed in such a way with HTML &amp; CSS that when the website is loaded the same website is loaded on different, smaller or bigger devices such as a phone, such as a tablet, a laptop or a bigger projector. If it's opened on different screen sizes it would change it's layout so it looks beautiful in all different formats and that particular technique is used via CSS and the technique is called &#34;Responsive web design&#34; or the entire the bigger echo system of that is called the bobble web, that means that you can design a website that is also gonna work in the mobile browser or also it can be embedded inside a mobile app and that is called the mobile web and that's totally accomplishable by HTML, CSS &amp; JavaScript.</p><p>Now if you're totally new and you wanna become a web developer I would recommend get started with learning the fundamentals of HTML &amp; CSS. There is a course on <span>iLoveCoding.org</span><strong> </strong><span>and the course is called </span><a href=\"https://ilovecoding.org/courses/htmlcss2\" target=\"\" style=\"background-color: rgb(255, 255, 255);\">Learn HTML &amp; CSS in 14 days </a><span>With this you will be equipped to make static Websites such as Landing Pages, Personal Portfolio Websites and Small business websites etc Once you are done, immediately jump into JavaScript. There is a course on </span><span>iLoveCoding.org</span><strong> </strong><span>called <a href=\"https://ilovecoding.org/courses/js2\" target=\"\">Learn JavaScript in 14 days</a></span></p><p>Here you're gonna learn all the fundamentals of JavaScript. This will help you get familiar with ALL the building blocks that make a website. HTML, CSS &amp; JavaScript. Yes you will need a lot of practice, but you will be in the zone, in the know and confidently navigating your path to success.If you found this video helpful, Subscribe to Get Updates for similar kind of useful content. I am gonna talk to you soon. Bye Bye</p>",
    "createdMsec": 1.445399752152E+12,
    "updatedIso": {
      "$date": "2016-06-25T08:28:28.043Z"
    },
    "updatedMsec": 1.466843308043E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/118479458",
    "duration": "7:01",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:55:52.152Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": []
  },
  {
    "_id": "562d2445995935f23b5c56eb",
    "slug": "getting-comfortable-with-bootstrap-components",
    "title": "Getting Comfortable with Bootstrap Components",
    "subTitle": "In this video we are going to understand fundamentals of twitter bootstrap framework",
    "thumbnail": "bootstrap-8-wrapUp.png",
    "demoUrl": "demo/bootstrap-8-wrapUp/index.html",
    "bodyContent": "",
    "createdMsec": 1.445798981245E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:11:08.807Z"
    },
    "updatedMsec": 1.533751868807E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-8-wrapUp.zip",
    "videoSource": "//player.vimeo.com/video/124802414",
    "duration": "8:53",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:49:41.245Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "56270d99b8d7393405e40512",
    "slug": "build-your-own-snake-game-with-javascript-part-1-of-3",
    "title": "Build Your Own Snake Game with JavaScript (Part 1 of 3)",
    "subTitle": "Here You will build a snake game. In the process you will learn how to organize your code into small manageable chunks. You will learn about the HTML5 Canvas element and most importantly, how to break a problem down into logical chunks and then solve it to build a practical app",
    "thumbnail": "snakegame1.png",
    "demoUrl": "demo/snakeGame1/index.html",
    "bodyContent": "<div><p><strong>Part 1</strong>: Build Your Own Snake Game with JavaScript (Part 1 of 3) (currently watching)<br/><strong>Part 2</strong>: <a href=\"https://ilovecodingorg/lessons/56270d65b8d7393405e40511\"></a><a href=\"https://ilovecoding.org/lessons/buildyour-own-snake-game-with-javascript-part-2-of-3\" target=\"\"></a><a href=\"https://ilovecoding.org/lessons/build-your-own-snake-game-with-javascript-part-2-of-3\" target=\"\"></a><a href=\"https://ilovecoding.org/lessons/build-your-own-snake-game-with-javascript-part-2-of-3\" target=\"\">Build Your Own Snake Game with JavaScript (Part 2 of 3)</a><br/><strong>Part 3</strong>: <a href=\"https://ilovecoding.org/lessons/56270d0db8d7393405e40510\"></a><a href=\"https://ilovecoding.org/lessons/build-your-own-snake-game-with-javascript-part-3-of-3\" target=\"\">Build Your Own Snake Game with JavaScript (Part 3 of 3)</a></p></div>",
    "createdMsec": 1.445399961191E+12,
    "updatedIso": {
      "$date": "2018-06-19T20:27:09.785Z"
    },
    "updatedMsec": 1.529440029786E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/snakeGame1.zip",
    "videoSource": "//player.vimeo.com/video/119982279",
    "duration": "21:03",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:59:21.191Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Project",
      "Front-End",
      "Javascript"
    ]
  },
  {
    "_id": "5622d0d48795649145fce17e",
    "slug": "create-a-simple-drop-down-menu-with-css",
    "title": "Create a Simple Drop Down Menu with CSS",
    "subTitle": "In this video you will learn how to create a drop down menu with pure CSS",
    "thumbnail": "cssDropDownMenu.png",
    "demoUrl": "demo/cssDropDownMenu/index.html",
    "bodyContent": "<p></p><h1>Create a Simple Drop Down Menu with CSS</h1><p>In this lesson, we’ll create a simple drop down menu with CSS Our end product will look like such</p><p><img src=\"//a.ilovecoding.org/img/createa-simple-drop-down-menu-with-css-sc1.png\" style=\"width: 100%;\"/><br/></p><p>When we hover over the buttons, the background color changes and a drop down menu shows up. To get started, we have our simple HTML file ready as you can see below. It has a <b>UL </b>item with a class of “menu” it has multiple list items and the resources list item has a child <b>UL </b>tag, which has the drop down items in it.<br/></p><p><img src=\"//a.ilovecoding.org/img/create-a-simple-drop-down-menu-with-css-sc2.png\" style=\"width: 100%;\"/><br/></p><p>Our CSS file is empty but let’s get started. By default the html file shows the list styles, but we’re going to change it. We’ll write </p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">ul.menu, ul.menu ul{&#10;  list-style:none;&#10;  padding: 0;&#10;  margin: 0:&#10;}</code></pre><p><img src=\"//a.ilovecoding.org/img/create-a-simple-drop-down-menu-with-css-sc3.png\" style=\"width: 100%;\"/><br/><br/>By default I’m going to hide the list items which we want to show to the users only when the particular text is being hovered over. So we can say</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">ul.menu &gt; li &gt; ul{&#10;  display:none;<br/>}</code></pre><p><img src=\"//a.ilovecoding.org/img/create-a-simple-drop-down-menu-with-css-sc4.png\" style=\"width: 100%;\"/><br/><br/>But if you want to show it when the particular li is hover over, you can write</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">ul.menu &gt; li:hover &gt; ul{<br/>  display: block;<br/>}</code></pre><!--EndFragment--><p>Now if you hover over the resources, you can see it shows the hidden content. </p><p><img src=\"//a.ilovecoding.org/img/create-a-simple-drop-down-menu-with-css-sc5.png\" style=\"width: 100%;\"/><br/><br/>We’re done with the major part of the lesson, now all we need to do is to style the drop down menu. I’m going to float it on the left like by writing</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">ul.menu &gt; li{<br/>  float: left;<br/>}</code></pre><p></p><p>Any of the anchor elements will have a padding of 10 pixels, background of blue, text of white and remove any underlines.</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">ul.menu.a{<br/>  padding: 10px;&#10;  background-color: cornflowerblue;&#10;  color: #fff;&#10;  text-decoration: none;<br/>}</code></pre><p>If you hover over it, you can see the items are overlapping.</p><p><img src=\"//a.ilovecoding.org/img/create-a-simple-drop-down-menu-with-css-sc6.png\" style=\"width: 100%;\"/><br/><br/>To fix that, we can write <code>display: block;</code></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">ul.menu.a{ &#10;   padding: 10px; &#10;   background-color: cornflowerblue; &#10;   color: #fff; &#10;   text-decoration: none; &#10;   display: block; &#10;}</code></pre><!--EndFragment--><p>Save it, refresh the screen and you notice that it’s no longer overlapping but the width of the “mind maps” is bigger and it’s covering the contact section as well.</p><p><img src=\"//a.ilovecoding.org/img/create-a-simple-drop-down-menu-with-css-sc7.png\" style=\"width: 100%;\"/><br/></p><p>So we’ll break free the ul item from the dependencies of its parent element. To accomplish that, we’ll make its position absolute</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">Ul.menu &gt; li &gt; ul { &#10;  display: none; &#10;  position: absolute; &#10;}</code></pre><!--EndFragment--><p>Save it, refresh the screen and will notice that It’s no longer pushing further to another section.</p><p><img src=\"//a.ilovecoding.org/img/create-a-simple-drop-down-menu-with-css-sc8.png\" style=\"width: 100%;\"/><br/></p><p>The rule of the position absolute is that it makes its position absolute to any of the parent’s items or anywhere the position is set to relative. This is just a precaution because in our case we only have a few list items but in the real world application you may have tons of items and if you don’t take the necessary precautions, your drop down menu is going to mess up.</p><p><img src=\"//a.ilovecoding.org/img/create-a-simple-drop-down-menu-with-css-sc9.png\" style=\"width: 100%;\"/><br/></p><p></p><p>Let’s say you want you hover over the items, the color needs to change. You can accomplish that by writing</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">ul.menu a:hover{&#10;  background-color: #3162ba;&#10;}</code></pre><!--EndFragment--><p>Save it, refresh the screen and the effect is taking place if you hover over it.</p><p><img src=\"//a.ilovecoding.org/img/create-a-simple-drop-down-menu-with-css-sc10.png\" style=\"width: 100%;\"/><br/></p><p></p><p>You can style the drop down menu as well. It all depends on personal preference. Let’s now change the drop down menu background colors</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">ul.menu li &gt; ul &gt; li &gt; a{&#10;  background-color: black;&#10;}</code></pre><p></p><p>Save it, refresh the screen and you see the effect is taking place.</p><p><img src=\"//a.ilovecoding.org/img/create-a-simple-drop-down-menu-with-css-sc11.png\" style=\"width: 100%;\"/><br/></p><p>I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson. Good bye :)<br/></p><p></p><p></p><p></p>",
    "createdMsec": 1.44512226033E+12,
    "updatedIso": {
      "$date": "2017-05-04T08:24:02.155Z"
    },
    "updatedMsec": 1.493886242156E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/cssDropDownMenu.zip",
    "videoSource": "//player.vimeo.com/video/123074572",
    "duration": "7:01",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-17T22:51:00.33Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Drop Down Menu"
    ]
  },
  {
    "_id": "56271da212c48c7105503806",
    "slug": "build-a-todo-app-with-angular-js",
    "title": "Build a Todo App with Angular JS",
    "subTitle": "Build a Todo App with Angular JS, and learn how a modern Angular JS app is put together.",
    "thumbnail": "learnAngular-8-build-todo-app.png",
    "demoUrl": "demo/learnAngular-8-build-todo-app/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445404066678E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:49:40.376Z"
    },
    "updatedMsec": 1.533750580376E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-8-build-todo-app.zip",
    "videoSource": "//player.vimeo.com/video/126777901",
    "duration": "16:30",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:07:46.678Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End",
      "Hands-on Project"
    ]
  },
  {
    "_id": "56271e6012c48c710550380b",
    "slug": "sharing-data-between-controllers-in-angular-js",
    "title": "Sharing Data Between Controllers in Angular JS",
    "subTitle": "Learn how to share data between controllers and maintain the state of your Angular JS application.",
    "thumbnail": "learnAngular-13-sharingDataControllers.png",
    "demoUrl": "demo/learnAngular-13-sharingDataControllers/index.html#/",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445404256011E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:52:45.281Z"
    },
    "updatedMsec": 1.533750765281E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-13-sharingDataControllers.zip",
    "videoSource": "//player.vimeo.com/video/127808196",
    "duration": "8:14",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:10:56.011Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "56270ebbb8d7393405e40516",
    "slug": "http-requests",
    "title": "HTTP Requests",
    "subTitle": "In this video you will understand HTTP Requests, the Core Essence and its Underlying Nature",
    "thumbnail": "httpRequests.png",
    "demoUrl": "",
    "bodyContent": "<p></p><h1>What are HTTP Requests</h1><p>In this lesson, we’ll learn about the HTTP requests So when you are on your computer or on your web browser, and type a URL for example Google.com.  It makes a request to a server which then responds with a particular webpage. The website you’re visiting is not inside your computer, it’s actually outside your computer. The kind of request happens when you type a URL or you’re clicking on any particular URL, it will make a request to the server to give that particular page.<br/><br/>The kind of request you’re making is called an HTTP Request. On the internet, there are different kinds of protocols. Such as FTP, which stands for File Transfer Protocol; HTTP stands for Hyper Text Transfer Protocol; SMTP stands for Simple Mail Transfer Protocol etc. HTML stands for Hyper Text Markup language, and through which the HTML Documents are transferred is called HTTP, which stands for Hyper Text Transfer Protocol.</p><p>When you make a request, a server will respond to your request.<br/></p><p><img src=\"//a.ilovecoding.org/img/httprequests-sc1.png\" style=\"width: 100%;\"/><br/></p><p>So let's get started by opening a new tab in a web browser. I used Chrome, if you do too then right click and hit inspect element and go to the network tab. The network tab in chrome developer tools is a feature, which shows us what is going out and coming in to the browser.</p><p><img src=\"//a.ilovecoding.org/img/http-requests-sc2.png\" style=\"width: 100%;\"/><br/></p><p>For example if we go to Google.com it's making a request to Google.com server and as you can see below, 17 requests happened just by going to Google.com.</p><p><img src=\"//a.ilovecoding.org/img/http-requests-sc3.png\" style=\"width: 100%;\"/><br/></p><p>If you scroll up a little and see the very first request which was made to the website was Google.com as shown below. If you click on it, you can see the request URL and the remote address, request method and the status code. The request method is also called a type, it's Get in our case because we are getting the information. The request also has a header.</p><p><img src=\"//a.ilovecoding.org/img/http-requests-sc4.png\" style=\"width: 100%;\"/><br/></p><p>When the HTML comes then all of the JavaScript images and other files gets downloaded. If I hover my mouse on the email address, you can see it created additional requests. </p><p><img src=\"//a.ilovecoding.org/img/http-requests-sc5.png\" style=\"width: 100%;\"/><br/></p><p>If you scroll down you will see that it downloaded my images, if I click on my email you can see the image is now visible. Google was way smart via the JavaScript code that when the mouse is being hovered over the email address, it is sensed that a user will likely click on the email address </p><p><img src=\"//a.ilovecoding.org/img/http-requests-sc6.png\" style=\"width: 100%;\"/><br/></p><p>You can accomplish that as well. A request has a head, it has a body, it has a method and a method could be a Get request or post request etc. When the request is sent, it is also going to have a head, a body and a status code. A status code would be either a success message or an error message.</p><p><img src=\"//a.ilovecoding.org/img/http-requests-sc7.png\" style=\"width: 100%;\"/><br/></p><p>Common request method are Get or post type. 200 is a success message as you can see below. The most common request type is GET where you get the information from a server. There's another common type called post. Let's say you'er submitting a form you're giving information to the sever. You're actually making a post request.<br/></p><p><img src=\"//a.ilovecoding.org/img/http-requests-sc8.png\" style=\"width: 100%;\"/><br/></p><p><img src=\"//a.ilovecoding.org/img/http-requests-sc9.png\" style=\"width: 100%;\"/><br/></p><p><b>Common Response Status Code</b><br/><b>200: </b>Request was successfully processed<br/><b>404: </b>Request not found, or the page requested was not found<br/><b>500: </b>Server Error: Request was unable to process</p><p>You can learn more about <a href=\"https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\" target=\"\">HTTP Status Codes</a>. Just to show you another example, I'll go to another link which does not exist as you can see below. When the page isn't available you get the 404 not found error.</p><p><img src=\"//a.ilovecoding.org/img/http-requests-sc10.png\" style=\"width: 100%;\"/><br/></p><p>When you're making dynamic website, HTTP requests are going to be fundamentally important for you as a Front-End and Back-End developer, as you're going to be dealing with a lot of these server responses that you will have to provide while building your application. More than 60% of Front-End Developers do not understand HTTP Requests. But congratulations you're in the top 40% of the people who now understand HTTP Requests.</p><p>I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson. Good bye :)</p><p></p><p></p>",
    "createdMsec": 1.445400251225E+12,
    "updatedIso": {
      "$date": "2017-05-03T14:10:29.617Z"
    },
    "updatedMsec": 1.493820629618E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/121990309",
    "duration": "8:47",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T04:04:11.225Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "HTTP Requests"
    ]
  },
  {
    "_id": "56270bcdb8d7393405e4050b",
    "slug": "stopwatch-app-with-pure-javascript",
    "title": "Build a stopwatch app with pure JavaScript",
    "subTitle": "You will learn how to make buttons to trigger and stop action. You will also learn a few new concepts such as setTimeout() and Date()",
    "thumbnail": "stopWatch.png",
    "demoUrl": "demo/stopWatch/index.html",
    "bodyContent": "",
    "createdMsec": 1.445399501999E+12,
    "updatedIso": {
      "$date": "2018-11-29T02:28:50.105Z"
    },
    "updatedMsec": 1.543458530106E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/stopWatch.zip",
    "videoSource": "//player.vimeo.com/video/100666344",
    "duration": "43:55",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T03:51:41.999Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Project",
      "Front-End"
    ]
  },
  {
    "_id": "56271c9312c48c7105503802",
    "slug": "controllers-separating-concern-in-angular-js",
    "title": "Controllers & Separating Concern in Angular JS",
    "subTitle": "Learn Controllers in Angular JS and how to separate data context within your application",
    "thumbnail": "learnAngular-4-controller.png",
    "demoUrl": "demo/learnAngular-4-controller/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445403795155E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:47:06.978Z"
    },
    "updatedMsec": 1.533750426978E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-4-controller.zip",
    "videoSource": "//player.vimeo.com/video/126792210",
    "duration": "8:24",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:03:15.154Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End",
      "MVC"
    ]
  },
  {
    "_id": "562d23a0995935f23b5c56ea",
    "slug": "learning-to-use-bootstrap-font-awesome-fonts",
    "title": "Learning to use Bootstrap & Font Awesome Fonts",
    "subTitle": "In this video we are going to create Icons with Bootstrap",
    "thumbnail": "bootstrap-7-icon.png",
    "demoUrl": "demo/bootstrap-7-icon/index.html",
    "bodyContent": "",
    "createdMsec": 1.445798816145E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:10:58.908Z"
    },
    "updatedMsec": 1.533751858908E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-7-icon.zip",
    "videoSource": "//player.vimeo.com/video/124794817",
    "duration": "7:28",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:46:56.144Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": []
  },
  {
    "_id": "56271ec612c48c710550380e",
    "slug": "structuring-your-angular-js-app",
    "title": "Structuring Your Angular JS App",
    "subTitle": "How to structure your Angular JS app, for a production ready project.",
    "thumbnail": "learnAngular-16-code-structure.png",
    "demoUrl": "demo/learnAngular-16-code-structure/index.html",
    "bodyContent": "",
    "createdMsec": 1.445404358488E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:56:28.115Z"
    },
    "updatedMsec": 1.533750988115E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-16-code-structure.zip",
    "videoSource": "//player.vimeo.com/video/128278608",
    "duration": "9:07",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:12:38.488Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End",
      "Organizing Code"
    ]
  },
  {
    "_id": "562d22b6995935f23b5c56e8",
    "slug": "learn-the-typography-classes-in-bootstrap",
    "title": "Learn the Typography Classes in Bootstrap",
    "subTitle": "In this video we are going to learn the Bootstrap Typography or Text based classes that Bootstrap has",
    "thumbnail": "bootstrap-5-text.png",
    "demoUrl": "demo/bootstrap-5-text/index.html",
    "bodyContent": "",
    "createdMsec": 1.445798582676E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:08:31.19Z"
    },
    "updatedMsec": 1.53375171119E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-5-text.zip",
    "videoSource": "//player.vimeo.com/video/124621087",
    "duration": "5:13",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:43:02.676Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Bootstrap"
    ]
  },
  {
    "_id": "56271e1712c48c7105503809",
    "slug": "routing-templates-building-single-page-application-with-angular-js",
    "title": "Routing, Templates & Building Single Page Application with Angular JS",
    "subTitle": "Learn Routing in Angular JS and how to open different views based on the application route, allowing you to build a Single-Page Application (SPA )",
    "thumbnail": "learnAngular-11-route-template.png",
    "demoUrl": "demo/learnAngular-11-route-template/index.html#/",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445404183518E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:51:42.323Z"
    },
    "updatedMsec": 1.533750702323E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-11-route-template.zip",
    "videoSource": "//player.vimeo.com/video/127808194",
    "duration": "11:32",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:09:43.518Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End",
      "Angular Routing"
    ]
  },
  {
    "_id": "562d258d995935f23b5c56ef",
    "slug": "customizing-bootstrap-to-fit-your-website-needs",
    "title": "Customizing Bootstrap to fit your Website Needs",
    "subTitle": "In this video you will learn how to customize twitter bootstrap while using less CSS",
    "thumbnail": "bootstrap-12-building.png",
    "demoUrl": "demo/bootstrap-12-building/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445799309656E+12,
    "updatedIso": {
      "$date": "2018-08-08T18:05:15.484Z"
    },
    "updatedMsec": 1.533751515484E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/bootstrap-12-building.zip",
    "videoSource": "//player.vimeo.com/video/125682267",
    "duration": "11:31",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T18:55:09.656Z"
    },
    "technology": [
      "HTML/CSS"
    ],
    "topic": []
  },
  {
    "_id": "56271cc112c48c7105503803",
    "slug": "scope-vs-this-and-controller-as-syntax",
    "title": "$scope vs. 'this' and 'controller as' syntax",
    "subTitle": "Learn about the $scope object and how it differs from using the 'this' and \"controller as\" format",
    "thumbnail": "learnAngular-5-scope.png",
    "demoUrl": "demo/learnAngular-5-scope/index.html",
    "bodyContent": "<p><br></p>",
    "createdMsec": 1.445403841595E+12,
    "updatedIso": {
      "$date": "2018-08-08T17:48:00.419Z"
    },
    "updatedMsec": 1.533750480419E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/learnAngular-5-scope.zip",
    "videoSource": "//player.vimeo.com/video/126777898",
    "duration": "5:07",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-21T05:04:01.595Z"
    },
    "technology": [
      "Angular JS"
    ],
    "topic": [
      "Front-End"
    ]
  },
  {
    "_id": "562d31809068f91a3cdf1c63",
    "slug": "project-create-tabs-functionality-with-jquery",
    "title": "Project: Create Tabs functionality with jQuery",
    "subTitle": "In this lesson you will create the Tabular pages functionality. When clicked on a tab, its page will show, while the others will hide",
    "thumbnail": "jQuery14-7-2-projectTabs.png",
    "demoUrl": "demo/jQuery14-7-2-projectTabs/index.html",
    "bodyContent": "<h2>Create Tabs Functionality with jQuery</h2><p>In this lesson we are going to learn how to create tabs functionality with jQuery You see in the image below, it has three tabs, if I click on tab 1, the tab 1 will show up, if I click on the 2nd, the tab 2 will show up and same for the 3rd tab</p><p><img src=\"//a.ilovecoding.org/img/projectcreate-tabs-functionality-with-jquery-sc1.png\" style=\"width: 100%;\"><br></p><p><strong>Our Document structure</strong><br>I have created a document which has the basic HTML structure. I have created a div with a class of tabx, the reason I have called it tabx and put all my content inside it so I can put all the content related to tabs in this particular div so if I want to style it or query the DOM it's going to be easy for me to find those elements inside that particular div.</p><p>In the tabx div, I have multiple uls in it. Another thing you notice that I have created extra attribute called data-tabx. HTML5 introduced this attribute called Data. It is used to store extra value or data about particular element in it. I have named it tabx but you can name it anything you like.<br></p><p>I have another div with a class of tabs and in that tabs I have multiple tabs in it.&nbsp;</p><p><img src=\"//a.ilovecoding.org/img/project-create-tabs-functionality-with-jquery-sc2.png\" style=\"width: 100%;\"><br></p><p><span style=\"float: none;\">To write the jQuery or some JavaScript create a separate sheet and name is script.js and linked it to the HTML document. I have also imported the jQuery from the jQuery website which we have learned our first few videos of this playlist.&nbsp;</span></p><p><span style=\"float: none;\">I'm going to write the jQuery and show the only tab 1 and hide the other tabs like such</span></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){\n  $('.tabx .tab1')\n  .show()\n  .siblings()\n  .hide();\n});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and you see only the tab 1 is showing</span></p><p><img src=\"//a.ilovecoding.org/img/project-create-tabs-functionality-with-jquery-sc3.png\" style=\"width: 100%;\"><br><br><span style=\"float: none;\">jQuery goes to the tabx class and finds tab 1 then it shows it and then it finds the siblings which are tab 2 and tab 3 and then hides them. Now I'm going to attach an event to the tab 1, tab 2 and tab 3 buttons.&nbsp;</span>I'm going to write like such</p><br><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('.tabx-menu a').on('click', function(){\n   console.log('click happened');</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and in the console if I hit tab 1 tab 2 or tab 3 you will see the click happened which means our jQuery is working fine</span></p><span style=\"float: none;\"><br></span><p><img src=\"//a.ilovecoding.org/img/project-create-tabs-functionality-with-jquery-sc4.png\" style=\"width: 100%;\"><br>Now when the click happens to any of the link items, in our case we have three links in our HTML document tab1, tab 2 and tab 3 it's going to capture the data-tabx attribute which is tab1 in our case and the one which is clicked is going to show that particular div with a class of tab 1, tab 2 or tab 3.</p><br><p>I'm going to save the value in a variable and write as shown below</p><br><p><img src=\"//a.ilovecoding.org/img/project-create-tabs-functionality-with-jquery-sc5.png\" style=\"width: 100%;\"><br></p><p><span style=\"float: none;\"><br>Instead of using<strong> .show </strong>and <strong>.hide </strong>we can also use the <strong>.slideDown</strong> and<strong> slideUp</strong> as well like such as shown below, if you save it and refresh the screen the tabs will slide up</span></p><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-tabs-functionality-with-jquery-sc6.png\" style=\"width: 100%;\"><br></span><p><span style=\"float: none;\">You can also write it this way as shown in the image. If you write it that way the jQuery is going to be faster because it will go the class of tabx and look for tab 1, tab 2 and tab 3 and it will stop the search and it won't effect other divs in the HTML document.&nbsp;</span></p><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-tabs-functionality-with-jquery-sc7.png\" style=\"width: 100%;\"><br></span><p>I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</p>",
    "createdMsec": 1.445802368035E+12,
    "updatedIso": {
      "$date": "2018-07-13T15:40:41.004Z"
    },
    "updatedMsec": 1.531496441004E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-7-2-projectTabs.zip",
    "videoSource": "//player.vimeo.com/video/115434891",
    "duration": "10:46",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:46:08.034Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "jQuery",
      "Front-End",
      "Project"
    ]
  },
  {
    "_id": "57c657d61cbef70f008a10ea",
    "slug": "git-understand-commit",
    "title": "Understanding a Git Commit",
    "subTitle": "Commit is the basic building block of Git. Understanding a Commit is fundamental to getting good with Git",
    "thumbnail": "git-understand-commit.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472616406283E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:31:59.35Z"
    },
    "updatedMsec": 1.473042719351E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180692929",
    "duration": "5:08",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T04:06:46.282Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "58b3dfe14d0bd100102f06b8",
    "slug": "http-building-blocks",
    "title": "Building Blocks of an HTTP Request",
    "subTitle": "Learn the Building Blocks of an HTTP Request",
    "thumbnail": "api2-building-blocks.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488183265855E+12,
    "updatedIso": {
      "$date": "2017-02-28T03:25:23.187Z"
    },
    "updatedMsec": 1.488252323188E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/203272747",
    "duration": "13:18",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-27T08:14:25.855Z"
    },
    "technology": [
      "API"
    ],
    "topic": [
      "API"
    ]
  },
  {
    "_id": "5a726ec9b736b600141cd227",
    "slug": "es6-import-export-modules",
    "title": "Learning ES6: `import` and `export` modules",
    "subTitle": "Learn a new feature of JavaScript introduced in ES6 for importing and exporting modules across files",
    "thumbnail": "react/react8-es6-3-import-export.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517448905636E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-app/tree/6-import-export",
    "videoSource": "//player.vimeo.com/video/251886049",
    "duration": "5:16",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:35:05.636Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T20:25:52.703Z"
    },
    "updatedMsec": 1.522873552703E+12
  },
  {
    "_id": "562d476a51e467f0010e5295",
    "slug": "emitting-events",
    "title": "Emitting Events",
    "subTitle": "Node.js is event-driven. This means that streams, and many other modules emit events. You can listen for an event to trigger and write code to take any action based on that trigger. This is similar to how browser emits the \"Click\", \"Load\", \"Hover\" events.",
    "thumbnail": "nodeWk-7-emittingEvents.png",
    "demoUrl": "",
    "bodyContent": "<h1>Emitting Events</h1><p>Continuing from our previous <a href=\"https://ilovecodingorg/lessons/streams?playlist=learnnode-js-in-a-week\" target=\"\">lesson </a>In this lesson we are going to talk about an important concept called events or Emitting Events. We are going to look at what events are and they are helpful in writing applications in Node.js.</p><p>Node.js is a runtime which is event based or event driven. It emits event when certain things happen. For example If you hover over any part on the website or click anywhere or when the page loads, events are triggered. If you click anywhere, the click event is going to trigger. So when the events get triggered, in the coding programming language, we can listen for those events to trigger and do something with it. For example, when a page loads, show a pop up or change the color of the background etc.</p><p>We'll be using the same code from our previous lesson, where we talked about the streams and had a text file with some gibberish stuff there and some code in sublime text. The <code>data</code> and <code>end</code> both are an event. The <code>data</code> event gets triggered when the <code>readStream</code> has <code>data</code> in the pipe line. And the <code>end</code> event gets triggered when the stream is ended. </p><p><img src=\"//a.ilovecoding.org/img/emitting-events1.png\" style=\"width: 100%;\"/><br/></p><p>The word <b><code>on</code> </b>is a very helpful word but in actuality it's called the <code>addListener</code> because we are actually listening for an event called data. So we can change the word on to <code>addListener</code> and then run the code by writing <code>node stream</code> hit enter and you see it printed 355 which is the time the counter read the lorem.txt file. </p><p><img src=\"//a.ilovecoding.org/img/emitting-events2.png\" style=\"width: 100%;\"/><br/></p><p>The method <b><code>on</code> </b>is an alias of addListener method. But on is faster to write. When you're listening to an event, you can also not listen to an event. Once you understand the technology, you can also remove the listener. </p><p>Currently you can see the function we have is an anonymous so I'm going to make it a named function and call it <code>dataCounter</code>. So we have two listeners, dataCounter and dataPrinter. dataCounter counts the data while dataPrinter will print the data.<br/>Also we have so much text in the loren.txt file which is going to clutter the console so we can only print the length. So we can write <code>console.log('data chunk length: ' + data.length);</code> to get the length.  </p><pre><code class=\"”language-javascript”\">var fs = require('fs');&#10;&#10;var read Stream = fs.createReadStream('lorem.txt');&#10; readStream.setEncoding('utf8');&#10;&#10;  readStream.addListener('data', dataCounter);&#10;  readStream.addListener('data', dataPrinter);&#10; &#10;  readStream.addListener('end', function(){ &#10;    console.log(counter); &#10;}); &#10;&#10;function dataCounter(datacoming){ &#10;counter = counter + 1; &#10;} &#10;&#10;function dataPrinter(data){ &#10;  console.log('data chunk length: ' + data.length);&#10;}</code></pre><p><img src=\"//a.ilovecoding.org/img/emitting-events3.png\" style=\"width: 100%;\"/><br/></p><p></p><p>Run the code by writing <code>node stream</code> hit enter and you see it printed 355 times the length of data chunk characters and when the <code>end</code> listener got triggered it printed the counter which was 355</p><p><img src=\"//a.ilovecoding.org/img/emitting-events4.png\" style=\"width: 100%;\"/><br/></p><p><font face=\"inherit\"><span>You can have </span></font>multiple<font face=\"inherit\"> <code>listeners</code> listening </font><font face=\"inherit\">for any particular event. You can also remove the <code>listener</code> as well. So let's say, when the <code>counter</code> is 5 so <code>if(counter === 5)</code> we can remove the listener. So I can say write <code>readStream.removeListener</code> and which data we want to remove? it could be either <code>dataCounter</code> or <code>dataPrinter</code>. Let's write <code>dataCounter</code> for demonstration.  </font></p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"”language-javascript”\" style=\"color: inherit;background-color: transparent;\">function dataCoutner(datacoming){ &#10;  counter = counter + 1; &#10;  if(counter === 5){ &#10;    readStream.removeListener('data', dataCounter);&#10; }&#10;}</code></pre><!--EndFragment--><p><img src=\"//a.ilovecoding.org/img/emitting-events5.png\" style=\"width: 100%;\"/></p><p>Run the code by writing <code>node stream</code> hit enter and you see the counter goes up to 5 because <code>dataCounter</code> stops running. </p><p><img src=\"//a.ilovecoding.org/img/emitting-events6.png\" style=\"width: 100%;\"/><br/></p><p>You can also remove all listeners, so instead of writing any particular listener you can write <code>readStream.removeAllListeners('data');</code></p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"”language-javascript”\" style=\"color: inherit;background-color: transparent;\">function dataCoutner(datacoming){ <br/>  counter = counter + 1; <br/>  if(counter === 5){ <br/>    readStream.removeAllListeners('data');<br/> }<br/>}</code></pre><!--EndFragment--><p><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">Now run the code by writing <code>node stream</code> hit enter and you see It printed 5 times only and then the program ended.</span></p><div><img src=\"//a.ilovecoding.org/img/emitting-events7.png\" style=\"width: 100%;\"/><br/><br/><p><font face=\"inherit\"><span></span></font>Node js is an event driven input and output or runtime, and a lot of their modules, features and patterns in which you're going to be input output data, reading data, processing data is going to depend on how you listen for events to trigger and then you run your callback function.</p><p>I hope you enjoyed this lesson. If you have any questions, leave your comments below. I'll talk to you in the next lesson. Good bye :) </p></div>",
    "createdMsec": 1.445807978592E+12,
    "updatedIso": {
      "$date": "2016-11-17T21:45:56.742Z"
    },
    "updatedMsec": 1.479419156746E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/nodeWk-7-emittingEvents.zip",
    "videoSource": "//player.vimeo.com/video/119116135",
    "duration": "9:29",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T21:19:38.592Z"
    },
    "technology": [
      "Node.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5930001675c92e0012bdbe39",
    "slug": "acces-token",
    "title": "Authorization & Authentication with Access Tokens",
    "subTitle": "Learn how Authorization & Authentication works practically in a web application",
    "thumbnail": "Api2-4-acces-token.png",
    "demoUrl": "0",
    "createdMsec": 1.496317974692E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/219831375",
    "duration": "6:40",
    "access": 0,
    "createdIso": {
      "$date": "2017-06-01T11:52:54.691Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ],
    "updatedIso": {
      "$date": "2017-06-01T11:59:41.104Z"
    },
    "updatedMsec": 1.496318381104E+12
  },
  {
    "_id": "5a726e25b736b600141cd225",
    "slug": "es6-object-destructuring",
    "title": "Learning ES6: Object Destructuring",
    "subTitle": "Learn a new feature of JavaScript introduced in ES6 called `Object Destructuring`",
    "thumbnail": "react/react8-es6-1-object-destructuring.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517448741882E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-app/tree/4-object-destructuring",
    "videoSource": "//player.vimeo.com/video/251885932",
    "duration": "2:48",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:32:21.882Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T20:25:22.565Z"
    },
    "updatedMsec": 1.522873522565E+12
  },
  {
    "_id": "562d474151e467f0010e5294",
    "slug": "streams",
    "title": "Streams",
    "subTitle": "Streams is a concept in Node.js that defines how data flows from one location to another. Once you understand this data flow mechanism, programming with Node.js will make even more sense.",
    "thumbnail": "nodeWk-6-streams.png",
    "demoUrl": "",
    "bodyContent": "<p>Welcome to another lesson of <a href=\"https://ilovecodingorg/courses/learnnode-js-in-a-week\" target=\"\">Learn Node JS in a week course</a>. In this lesson we are going to learn another concept in Node.js called streams.</p><p>In this lesson, we will learn </p><ul><li>What is stream</li><li>Why to use it </li><li>How to use it </li><li>Discuss two kinds of streams </li><ul><li>Readable</li><li>Writable</li></ul></ul><p><b>What is Streams</b><br/>A stream is a way to do input output of data. You can think of stream as a way to do input output of data, more or less like a faucet. You start a faucet, pause it by stopping it, resume it, a faucet gets drained so the data coming from it can end.</p><p><img src=\"//a.ilovecoding.org/img/streams1.png\" style=\"width: 100%;\"/><br/></p><p>So let's create our first stream. I have already opened the sublime text as you can see below</p><p><img src=\"//a.ilovecoding.org/img/streams2.png\" style=\"width: 100%;\"/><br/></p><p>We are going to use the file system streams but streams can be of different kind. we can make streams for passing input output data of HTTPServers, TCP, database and anything else. In our case we'll use the file system method. I'll import a module for a file system. I'll wrtite <b><code>var = readStream</code></b> the way to create for the file system is <b><code>fs.createReadStream</code></b> (<span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">For other modules it's going to be different</span>) and provide a file name which you want to read. </p><p>Another thing to add is when the stream is ready for data that is already in there, it's going to emit an event called data. In this section <code>readStream.on('data', function(datacoming){ console.log(datacoming); })</code> when the data event is triggered, we want to run the function and pass a call back variable and call it datacoming, you can call it anything but for the sake of demonstration, I'm going to call it datacoming.</p><p><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">By default, streams input and output data in a buffer format but we want to have it in <code>utf8</code> format. So we can write <b><code>readStream.setEncoding('utf8');</code></b></span><br/></p><p>You may notice what lorem.txt means, don't worry about it yet it's a text file with some gibberish text for demonstration.</p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var fs = require('fs');<br/><br/>var read Stream = fs.createReadStream('lorem.txt');<br/><br/> readStream.setEncoding('utf8');<br/> readStream.on('data', function(datacoming){ &#10;   console.log(datacoming); })</code></pre><p><img src=\"//a.ilovecoding.org/img/streams3.png\" style=\"width: 100%;\"/></p><p>Run the code by writing <b><code>node stream.js</code></b> hit enter and you will see that it printed all the text in the console. You can also see the gibberish text in the lorem.txt file</p><p><img src=\"//a.ilovecoding.org/img/streams4.png\" style=\"width: 100%;\"/><br/></p><p>The data gets triggered multiple times so if you want it to print only once, instead of writing <b><code>on</code></b> you can write <b><code>once</code> </b>like such<br/><br/><img src=\"//a.ilovecoding.org/img/streams5.png\" style=\"width: 100%;\"/><br/></p><p>I'm going to set a counter and set it to 0 <b><code>var counter = 0</code> </b>and every time the data event gets triggered, I'm going to increment it by 1<b> <code>counter = counter + 1;</code> </b>Another concept I'm going to share is that the stream will also end. So I can write <b><code>readStream</code> </b>and on end<b> </b>run a function. Run the code by writing <code>node stream.js</code> you see 355 times the data event got triggered while it was reading out lorem.txt file</p><p><img src=\"//a.ilovecoding.org/img/streams6.png\" style=\"width: 100%;\"/><br/></p><p>The benefit of using streams is that when we have a lot of data, which is not good to read at a once instant to prevent from our memory to from getting clogged up. We use the method of input output streams. So it captures information as it gets available to the system. This reduces the stress on the process and frees the memory.   <br/></p><p>Another benefit is that we have events that get triggered so we can take multiple actions when different things happen to the data stream.<br/></p><p>We might have an HTTPServer, when the request has a lot of data, it allows us to get data in chunks and the events help us to take certain actions when the data gets available or whatever happens to data. <br/></p><p>The second kind of stream is called the <b><code>write</code></b> stream, which is similar to create. I can create a variable and call it writeStream and fs.createWriteStream and in there I'll create a new file which I have named copyl.txt and to write data to it, I can write <code>writeStream.write('Hi Aziz');</code></p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var writeStream = fs.createWriteStream('copyl.txt'); &#10;writeStream.write('Hi Aziz');</code></pre><!--EndFragment--><p><span>Run code by writing node stream.js hit enter and the data has been written to our new file as you can see below. In our case 'Hi Aziz' got printed in the new file.</span><br/></p><p><img src=\"//a.ilovecoding.org/img/streams7.png\" style=\"width: 100%;\"/><br/></p><p>If you want to get all the readStreams information into the writeStream? There's another method to do that. The concept is called the pipe. The way it works is that we are going to attach the pipe to the stream, which is going to go to the writeStream. I'm going to write <b><code>readStream.pipe(writeStream)</code> </b>like such</p><p><img src=\"//a.ilovecoding.org/img/streams8.png\" style=\"width: 100%;\"/><br/></p><p><span>Write the code node stream.js and you see in the copyl.txt file, it copied all the information from lorem.txt to the copyl.txt file.  </span><br/></p><p><img src=\"//a.ilovecoding.org/img/streams9.png\" style=\"width: 100%;\"/><br/></p><p>You can also resume the stream as well by writing <b><code>readStream.pause()</code></b> and if the counter === 5 then pause the data. Run the code again and you see it did not go to the entire thing. It paused when the counter was 5. You can also resume as well. <br/></p><p><img src=\"//a.ilovecoding.org/img/streams10.png\" style=\"width: 100%;\"/><br/></p><p>I hope you enjoyed this lesson. If you have any questions, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</p>",
    "createdMsec": 1.445807937573E+12,
    "updatedIso": {
      "$date": "2016-11-15T21:42:38.014Z"
    },
    "updatedMsec": 1.479246158019E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/nodeWk-6-streams.zip",
    "videoSource": "//player.vimeo.com/video/118479463",
    "duration": "9:20",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T21:18:57.573Z"
    },
    "technology": [
      "Node.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5a726943b736b600141cd21e",
    "slug": "react-prerequisite",
    "title": "Tools to get started with React",
    "subTitle": "Install the necessary tools before you can get started with React",
    "thumbnail": "react/react1-prerequisite.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517447491491E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/251885369",
    "duration": "1:09",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:11:31.491Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:39:40.265Z"
    },
    "updatedMsec": 1.522863580265E+12
  },
  {
    "_id": "562d375a9068f91a3cdf1c6c",
    "slug": "ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1",
    "title": "Ajax: Create a Location Finder App using jQuery & Google Maps API - Part 1",
    "subTitle": "Using Google Maps API with AJAX to create a location finder app",
    "thumbnail": "jQuery-14-14-googleMapsAPI-part1.png",
    "demoUrl": "demo/jQuery14-14-ajaxGoogleMapAPI/index.html",
    "bodyContent": "<p>Once you are done with this lesson, <a href=\"/courses/jquery/lessons/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-2\">continue to part 2</a></p>\n<h2>Transcript of video lesson:</h2>\n<p>In today's lesson, we are going to look into how to use the Google Maps API's We are also going to build a small application, in which when you click the button \"What City Am I In?\" It's going to ask for your location.&nbsp;</p><p><!--StartFragment--><span style=\"float: none;\">The HTML5 enabled browsers have the ability to figure out your location&nbsp;</span><span style=\"float: none;\">and respond with the longitude and latitude&nbsp;</span><span style=\"float: none;\">coordinates of your location on earth. So if I allow it, it's going to figure out those coordinates, send a request to Google API and return back what city I'm in.</span><br></p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc1.png\" style=\"width: 100%;\"><br></p><p>You will also notice a slight delay, because the computer is making a call to the Google maps API server and there's a delay in the response. This is the simple app that we are going to build.</p><p><b>Our document structure</b><br>You can see below the basic HTML structure of our web page. I have some simple title, I have also imported the jQuery script. There's a script file and the CSS file.&nbsp;In the body you see some h1 tag and the anchor tag so when we write the jQuery the trigger happens when the anchor tag is clicked.</p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc2.png\" style=\"width: 100%;\"><br></p><p>CSS file&nbsp;<br><br><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc3.png\" style=\"width: 100%;\"><br></p><p>We want to load our application via web server.&nbsp;If you're on Windows and want a quick web server, you can download the <a href=\"https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwi47Je9xe7KAhWJ6yYKHXMsDJ4QFggdMAA&amp;url=https%3A%2F%2Fcode.google.com%2Fp%2Fmongoose%2F&amp;usg=AFQjCNFyP_hzEHsjQOVH56Tcs40E_knhhw&amp;sig2=acbi_d-cK83wx3oMla0X0w\" target=\"\">mongoose server</a>. You can simply double click the exe file and the server launches on the location where exe file was located.<br></p><p>If you're on a MAC, you want to go to the project folder, and write some command <code>python -m SImpleHTTPServer 8000</code><br></p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc4.png\" style=\"width: 100%;\"><br></p><p>Also put <code>localhost:8000/index.html</code> in the URL and your webpage will appear.&nbsp;So when the API calls are being made, a web server is required so the APIs calls can be made over the internet.</p><p>Let's write some jQuery and write the anchor tag, and on click run the function, I'm going to write <code>console.log</code> just to see if it's working.</p><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function($){<br><br>&nbsp;&nbsp; $('a').on('click', function(e){<br>&nbsp;&nbsp;&nbsp;console.log('I am clicked');<br> })<br>});</code></pre><p><span style=\"float: none;\">Save it, refresh the screen and you see the click has been logged in the console.</span>&nbsp;</p><div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc5.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">Next thing we are going to look at is the <a href=\"https://developers.google.com/maps/documentation/geocoding/intro\" target=\"\">Google maps</a>&nbsp;APIs. If you go the website and scroll all the way to the&nbsp;Geocoding API Request Format you will see the format.&nbsp;</span></div><div><br><!--StartFragment--><pre class=\"prettyprint notranslate\"><span class=\"pln\">https</span><span class=\"pun\">:</span><span class=\"com\">//maps.googleapis.com/maps/api/geocode/</span><i><span class=\"com\">output</span></i><span class=\"com\">?</span><i><span class=\"com\">parameters</span></i></pre></div><div>The output could be in json format or an xml format.&nbsp;Json format is much more lighter and faster and very easy to use with JavaScript, we are going to use the json format.</div><div><font face=\"inherit\">I'm going to copy and paste the above URL in the URL section and instead of putting output, I'm going to put Json and hit enter, you will see the json format which has no parameters in it as&nbsp;</font>shown<font face=\"inherit\">&nbsp;below</font></div><div><font face=\"inherit\"><br></font></div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc6.png\" style=\"width: 100%;\"><br></div><div><span style=\"float: none;\">Go to the Google maps and click on the settings and hit share and embed map.</span></div><div><span style=\"float: none;\"><br></span></div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc7.png\" style=\"width: 100%;\"><br><p>You will see the exact coordinates of the location that was picked up by the map's software. Now I'm going to copy the latitude and longitude and paste it into the URL and hit enter as shown below<br></p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc8.png\" style=\"width: 100%;\">&nbsp;Save it, refresh the screen and you see it returned the json, which has lots of information in it like what is the street address, what is the city, what is the county, what is the state, what is the country, what is the zip code etc. We will use the same URL when writing jQuery.</p><p>So recall from our previous <a href=\"https://ilovecoding.org/lessons/ajax-create-a-single-page-app-with-jquery?playlist=learn-jquery-in-14-days\" target=\"\">lesson </a>on how ajax calls are made via jQuery. So I'll start writing some jQuery.&nbsp;<code>$.ajax</code> has so many key value pairs in it. The first one is the URL, the second is the data, the third is the dataType and the fourth is the success action back which is a function and the fifth is the error&nbsp;response&nbsp;function.</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function($){<br><br>&nbsp;&nbsp; $('a').on('click', function(e){<br>&nbsp;&nbsp;&nbsp;console.log('I am clicked');<br> })\n\n $.ajax({\n    url : 'https://maps.googleapis.com/maps/api/geocode/json'\n\n    data : {\n     'latlng' : =41.6149395,-88.1372692  \n   }\n\n    dataType : 'json',\n\n    success: function(r){  \n       console.long('success', r); \n   } \n    error: function(e){ \n       console.long('error', e); \n   }\n\n})\n});</code></pre><!--EndFragment--><span style=\"float: none;\"></span><div><span style=\"float: none;\">I wrote <code>console.log</code> for demonstration above.</span></div><div><span style=\"float: none;\"><br></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc9.png\" style=\"width: 100%;\"><br></span></div><div><br></div><div>Also, I am going to put the ajax code inside a function and call it getCity because that's what we want to do, we want to get the city when the anchor tag is clicked on the web page.<br><br></div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc10.png\" style=\"width: 100%;\"><br></div><div><br></div><div>Save it, refresh the screen and now if I click on the anchor tag, the API call is made, as you can see it in the console below.&nbsp;There's an object which has a property of results which is an array, The array has seven properties inside. We can go through different objects to see what information matches our information. The second has a city which we are looking for.</div><div><br></div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc11.png\" style=\"width: 100%;\"><br></div><div><br>I'm going to write <code>result[1].formatted.address</code>&nbsp;and it should do the Job.</div><div><br></div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc12.png\" style=\"width: 100%;\"><br></div><br><span style=\"float: none;\">Save it, refresh the screen and now if I click on the anchor tag you see it got printed in the console</span></div><div><span style=\"float: none;\"><br></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc13.png\" style=\"width: 100%;\"><br></span></div><div><span style=\"float: none;\">But we don't want it to print in the console, we want it to show on the webpage under \"What City Am I In?\" tag.&nbsp;</span>So instead of saying console.log I can write jQuery, get the element with a class of content and in the text put the following information which is the city like such <code>$('r.results[1].formatted_address)</code></div><div><br></div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc14.png\" style=\"width: 100%;\"><br></div><div><p><br>Save it, refresh the screen and now if I click on the anchor text you see the city has been printed</p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1-sc15.png\" style=\"width: 100%;\"><br></p><p><span style=\"float: none;\">So technically our application is now complete.&nbsp;In the next lesson, we will look at how to use Geo location feature which is available in all modern browsers that have HTML5 supported. We will look into details of that in the next lesson.</span></p><p>I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</p></div></div>\n\n<a href=\"/courses/jquery/lessons/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-2\">Continue to part 2</a>",
    "createdMsec": 1.445803866936E+12,
    "updatedIso": {
      "$date": "2018-12-14T19:12:56.548Z"
    },
    "updatedMsec": 1.529346417392E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-14-ajaxGoogleMapAPI.zip",
    "videoSource": "//player.vimeo.com/video/115451904",
    "duration": "9:53",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T20:11:06.936Z"
    },
    "technology": [
      "jQuery",
      "Ajax"
    ],
    "topic": [
      "jQuery",
      "Front-End",
      "Project"
    ]
  },
  {
    "_id": "562d480251e467f0010e5299",
    "slug": "creating-a-simple-web-app-with-nodejs",
    "title": "Creating a Simple Web App with Node.js",
    "subTitle": "You will create a very simple Web App with Node.js. It will have some simple routing and in the end, we will learn how to break our code into manageable modules.",
    "thumbnail": "nodeWk-11-webapp.png",
    "demoUrl": "",
    "bodyContent": "<div><p>In this lesson we are going to create a simple Web Application with Node JS In the process you are going to learn how to modularize the code. So let's get started.&nbsp;</p><p>This is how the document structure looks like, I have opened the code editor and the terminal.</p><p><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc1.png\" style=\"width: 100%;\"><br></p><p>the first thing we'll do is to import the http module like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var http = require('http')</code></pre><!--EndFragment--><p><span style=\"float: none;\">and immediately create a server&nbsp;<code>http.createServer</code> and <code>onRequest</code> it's going to listen to the port 8000 like such</span></p><div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">http.createServer(onRequest).listen(8888);</code></pre><span style=\"float: none;\"><span style=\"float: none;\">We'll also create a function called onRequest, and it's going to take two callback functions. One is request and one is response. If you want to do something onRequest, you can simply write a success message by writing&nbsp;<code>response.writeHead(200);</code> and make it write something like anything you want <code>response.write('Hello Noders');</code> and end the response <code>response.end();</code> as shown below<br><br></span></span></div><!--StartFragment--><pre class=\"precode\"><code class=\"language-javascript\">var http = require('http')\n\nhttp.createServer(onRequest).listen(8888);\nconsole.log('Server has started');\n\nfunction onRequest(request, response){\n  response.writeHead(200);\n  response.write('Hello Noders');\n  response.end();\n}</code></pre><!--EndFragment--><p><span style=\"float: none;\">Write node webapp in the terminal and you notice the server has been started<br></span></p><div><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc2.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">The text shows up in the browser if you refresh it and regardless of what the URL was.&nbsp;</span><br><br><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc3.png\" style=\"width: 100%;\"><br><div><span style=\"float: none;\">If you write anything in the URL tab instead of contact, about etc it will still load Hello Noders because it's not taking anything into consideration about what is actually loaded on the page.</span></div><div><span style=\"float: none;\">The next thing we're going to do is listen for what kind of path the user has been requesting. To do that, we're going to use another module as shown below which will parse the URL parameter&nbsp;<code>var url = require('url')</code> and below say <code>var pathName</code> and we are going to parse the request url. Also we'll console.log for demonstration<br><br></span></div></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var http = require('http')\nvar url = require('url')<br><br>http.createServer(onRequest).listen(8888);<br>console.log('Server has started');<br><br>function onRequest(request, response){\n  var pathName = url.parse(request.url).pathname\n  console.log('pathname' + pathName);<br>&nbsp;&nbsp;response.writeHead(200);<br>&nbsp;&nbsp;response.write('Hello Noders');<br>&nbsp;&nbsp;response.end();<br>}</code></pre><!--EndFragment--><p><span style=\"float: none;\">Restart the application in the terminal, write node webapp and hit enter and you notice the Server has been started.</span></p><div><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc4.png\" style=\"width: 100%;\"><br><br><span style=\"float: none;\">It will print pathname in the terminal which means it's working fine. Another thing we are going to do is that based on the path which is requested, we want to show a different page.</span></div><div>Whenever you write code or functions, you want to make sure that each of the function has one task only. We'll create a function and call it showPage and the printing of the page is going to happen inside of that function and then call that function and response object.</div><div>Restart the app in the terminal and hit node webapp and you see the Server has started and it's working fine.<br><br></div><div><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc5.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">Another thing we're going to recognize, what the pathName is, and based on that show different content. We're going to create an object and called it contentMap and define some key value pairs.&nbsp;If the page is <code>'/'</code> show this content Welcome to the site and if the page is <code>'/contact'</code> then show the contact page<br><br></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var contentMap = {<br><br>&nbsp;'/': '&lt;h1&gt;Welcome to the site&lt;/h1&gt;'<br>&nbsp;'/contact' : '&lt;h1&gt; Contact Page&lt;/h1&gt;'<br>}</code></pre><!--EndFragment--><p><span style=\"float: none;\">Also change the pathName as well</span></p><div><div><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc6.png\" style=\"width: 100%;\"><br>We can also write if the pathName is <code>'/'</code> then show the home page. like such&nbsp;</div><br><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">if(pathName === '/'){<br>&nbsp;&nbsp;response.writeHead(200, {'Content-Type: 'text/html'})<br>&nbsp;&nbsp;response.write(contentMap['/']);<br>&nbsp;&nbsp;response.end();<br>&nbsp;}<br>}</code></pre><!--EndFragment--><span style=\"float: none;\">Restart the app and run it again<br>&nbsp;</span><!--EndFragment--><br><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc7.png\" style=\"width: 100%;\"><br><br><span style=\"float: none;\">Go to the app in your browser and you see it is working fine</span></div><div><span style=\"float: none;\"><br></span></div><div><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc8.png\" style=\"width: 100%;\"><br><br><span style=\"float: none;\">Realistically speaking, your app is going to have a lot of pages. and you will use the if-else statement a lot and it's totally counter intuitive. So if the page doesn't exist, it's going to show the 404 Page not found error.<br><br></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">if(pathName === '/'){<br>&nbsp;&nbsp;response.writeHead(200, {'Content-Type: 'text/html'})<br>&nbsp;&nbsp;response.write(contentMap['/']);<br>&nbsp;&nbsp;response.end();<br>&nbsp;}else {\n  response.writeHead(404, {'Content-Type: 'text/html'})<br>&nbsp;&nbsp;response.write('404 Page not found');<br>&nbsp;&nbsp;response.end();<br>}</code></pre><!--EndFragment--><p><span style=\"float: none;\">Like such<br></span><br><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc9.png\" style=\"width: 100%;\"></p><div><span style=\"float: none;\">If you go to the about page, it will show up if you go to the contact page, it will show up. But if you go to some random page that isn't in your app, the page is going to display the error.<br><br></span></div><div><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc10.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">The next thing we are going to look at is how to modularize the application into different pieces. Every piece of functionality should have it's module or a different file. So we will create two files and call it show.js and content.js respectively. But you can call it whatever you want.&nbsp;</span></div><div><span style=\"float: none;\">We will copy the contentMap object and paste it in the content.js file<br><br></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc11.png\" style=\"width: 100%;\">&nbsp;<br><span style=\"float: none;\">And the show.js is going to have the showPage function like such</span></span></div><div><span style=\"float: none;\"><span style=\"float: none;\"><br></span></span></div><div><span style=\"float: none;\"><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc12.png\" style=\"width: 100%;\">&nbsp;</span><!--EndFragment--><br><span style=\"float: none;\">But we have a problem, when the showPage function is run, the showPage function does not exist in the webapp section. In order to accomplish that we can export the module by writing&nbsp;<code>exports.showPage = showPage;</code><br><br></span></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc13.png\" style=\"width: 100%;\"><br></span><span style=\"float: none;\">The way it's going to talk to the webapp is like importing a module like such&nbsp;<code>var show = require('./show');</code> the show file is in the same directory so we used <code>./show</code> Save it, restart the app</span></div><div><span style=\"float: none;\"><br></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc14.png\" style=\"width: 100%;\"><br></span></div><div><br><span style=\"float: none;\">If you refresh the page nothing will happen as excepted because the content is not defined.</span></div><div><span style=\"float: none;\"><br></span></div><div><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc15.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">We are going to do the same for content.js as well by writing <code>exports.contentMap = contentMap;</code></span></div><div><span style=\"float: none;\"><br></span></div><div><!--EndFragment--><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc16.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">and import the module in show.js file and change contentMap to content.contentMap as shown below. Restart the server by writing node webapp.&nbsp;<br><br></span></div><div><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc17.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">If you go to your application and browse through different pages, you will see that it works fine. Also our code is in more organized fashion.<br></span><br><img src=\"//a.ilovecoding.org/img/creating-a-simple-web-app-with-nodejs-sc18.png\" style=\"width: 100%;\"><br><div><div><div><div><p>I hope you enjoyed this lesson. This is just a simple web app to show you that node js is a runtime that allows you to create anything you can imagine. For more advanced lesson, we'll be using Express JS in the lessons section where you will build a more advanced application.</p><p>If you have any question, leave your comments below. I'll talk to you soon. Bye :)&nbsp;</p></div></div></div></div></div></div>",
    "createdMsec": 1.44580813015E+12,
    "updatedIso": {
      "$date": "2019-03-08T23:55:10.813Z"
    },
    "updatedMsec": 1.529359399885E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/nodeWk-11-webapp.zip",
    "videoSource": "//player.vimeo.com/video/119326691",
    "duration": "17:17",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T21:22:10.15Z"
    },
    "technology": [
      "Node.js"
    ],
    "topic": [
      "Back-End",
      "Node.js",
      "Project"
    ]
  },
  {
    "_id": "57c659851cbef70f008a10ed",
    "slug": "git-merge",
    "title": "How to Merge Code in Git",
    "subTitle": "How to Merge Code in Git with two default Git Merge Strategies",
    "thumbnail": "git-merge.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472616837352E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:46:55.061Z"
    },
    "updatedMsec": 1.473043615061E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180694919",
    "duration": "5:31",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T04:13:57.352Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "57c65bf11cbef70f008a10f2",
    "slug": "git-rebase",
    "title": "Git Rebase: An elegant alternative to merge",
    "subTitle": "Learn how to rebase your branch and re-organize the workstream.",
    "thumbnail": "git-rebase.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472617457381E+12,
    "updatedIso": {
      "$date": "2016-09-05T03:04:48.442Z"
    },
    "updatedMsec": 1.473044688442E+12,
    "level": 2,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180693137",
    "duration": "4:04",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T04:24:17.381Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "5a726ccfb736b600141cd222",
    "slug": "create-your-first-react-app",
    "title": "Create Your First React App",
    "subTitle": "Write your first React App with multiple React Component working together",
    "thumbnail": "react/react5-first-app.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517448399303E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-app/tree/1-first-app",
    "videoSource": "//player.vimeo.com/video/251885617",
    "duration": "10:15",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:26:39.303Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T20:24:33.996Z"
    },
    "updatedMsec": 1.522873473996E+12
  },
  {
    "_id": "562d46f551e467f0010e5292",
    "slug": "command-line-basics",
    "title": "Command Line Basics",
    "subTitle": "You will get familiar with using the command line, and learn the most basic and common commands used. Honestly, I am not a command line master. I just know the basics (which you will learn here) and that should be enough",
    "thumbnail": "nodeWk-4-command.png",
    "demoUrl": "",
    "bodyContent": "<h1>How to use the Command Line</h1><p>In this lesson, we are going to learn how to use the Command line or the terminal in Windows or Mac So let's get started. The first command that we're going to look at is called <b><code>LS</code></b>, which is to list the items which are inside the folder you're already in. If you see below in a screenshot. I'm inside the Azizali's folder and the list of items are showing as I used the <code>LS</code><span> <code>~</code> represents the home directory of the user which is logged in.</span></p><p><img src=\"//a.ilovecoding.org/img/commandline-basics1.png\" style=\"width: 100%;\"/><br/></p><p><span>If you want to go to the very root directory of your machine, you can simply write <b><code>cd /</code> </b>and hit enter and you will be inside the main directory of the machine.</span><br/></p><p><img src=\"//a.ilovecoding.org/img/command-line-basics2.png\" style=\"width: 100%;\"/><span><br/></span></p><p>If you want to see what's inside your main directory of that machine you can simply write <b>LS </b>and you can see the folders inside the director as shown below<b><code><code><img src=\"//a.ilovecoding.org/img/command-line-basics3.png\" style=\"width: 100%;float: left;\"/></code></code></b></p><p><span>If you want to go to any folder which is inside the directory, you can simply write </span><b><code>cs users</code> </b><span>since I want to go to the users folder. You can see below, I'm in the users folder.</span></p><p><img src=\"//a.ilovecoding.org/img/command-line-basics4.png\" style=\"width: 100%;\"/><span><br/></span></p><p>If you want to see what's inside the azizali's folder I can say <b><code>LS</code> </b>and you see it shows three folders. And if I want to go in any of the folder, I can write<b><code> cd azizali</code> </b>and you see I'm inside the azizali's folder. Also you notice the tilde sign <code>~</code> is back because I'm in the directory.</p><p><img src=\"//a.ilovecoding.org/img/command-line-basics5.png\" style=\"width: 100%;\"/><br/></p><p>You can write <b><code>clear</code> </b>to clear up the screen, but you can still scroll up and see the previous information. If you want to go back, one step up you can simply write <b><code>cd ..</code></b> or if you want to go back, you can write <code>cd Desktop</code> and you will be back to the desktop as shown below.<br/></p><p><img src=\"//a.ilovecoding.org/img/command-line-basics6.png\" style=\"width: 100%;\"/><br/></p><p>You can also create a folder in that particular location by writing making a directory like such <b><code>mkdir</code> </b>and call it anything you like, I'll call i iloveNode hit enter and you see the folder gets created.<br/></p><p><img src=\"//a.ilovecoding.org/img/command-line-basics7.png\" style=\"width: 100%;\"/><br/></p><p>If you want to go inside that folder you can simply write <b><code>cd iloveNode</code></b> and you will be in that folder. If you want to open that folder you can write <b><code>open .</code> </b>and you see the folder got open.</p><p><img src=\"//a.ilovecoding.org/img/command-line-basics8.png\" style=\"width: 100%;\"/><br/></p><p>This only works in machines, which have windows kind of environment. If you're on core terminal based machines like Linux or Unix without the Windows. This isn't going to happen, because they don't have the GUI.<br/></p><p>If you want to create a file inside the folder that you created, you can write <b><code>touch</code> </b>and the name of the file like such <b><code>touch first.js</code></b><br/></p><p><img src=\"//a.ilovecoding.org/img/command-line-basics9.png\" style=\"width: 100%;\"/><br/></p><p>If you want to remove the file, you can write <code>rm</code> and name of the file in our case it will be <code>rm first.js</code> hit enter and the file will be removed. If you want to write something inside the file, you can write <code>echo</code> and write something in quotes like such <code>echo &#34;firstline&#34;</code> the greater than sign and the name of the file like such <code>echo &#34;FirstLine&#34; &gt; first.js</code> save it, refresh the file and you will see the FirstLine got printed in the file. You can also use that to replace the text. <span>If you want to write something else, you can add double greater than signs </span></p><p><img src=\"//a.ilovecoding.org/img/command-line-basics10.png\" style=\"width: 100%;\"/><br/></p><p>If you want to change the name of the file, you can simply write <code>mv</code> the name of the file that you want to change, then write the new name of the file like such. <code>mv first.js second.js</code> you can see the file name got changed to <code>second.js</code></p><p><img src=\"//a.ilovecoding.org/img/command-line-basics11.png\" style=\"width: 100%;\"/><br/></p><p>If you want to move that file to the desktop, you could write <b><code>mv second ../</code> name of the file </b>and your file will be moved to the desktop.</p><p><img src=\"//a.ilovecoding.org/img/command-line-basics12.png\" style=\"width: 100%;\"/><br/></p><p>If you want to see what's inside the file, you can write <code>cat</code> and the name of the file like such <b><code>cat second.js</code> </b>whatever the content of the file was got printed.<br/></p><p><img src=\"//a.ilovecoding.org/img/command-line-basics13.png\" style=\"width: 100%;\"/></p><p>I hope you enjoyed this lesson, If you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</p>",
    "createdMsec": 1.445807861982E+12,
    "updatedIso": {
      "$date": "2016-11-07T23:59:37.329Z"
    },
    "updatedMsec": 1.478563177333E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/118479462",
    "duration": "7:07",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T21:17:41.982Z"
    },
    "technology": [
      "Node.js"
    ],
    "topic": [
      "Back-End"
    ],
    "url": "<h1>How to use the Command Line</h1><p>In this lesson, we are going to learn how to use the Command line or the terminal in Windows or Mac. So let's get started. The first command that we're going to look at is called <b><code>LS</code></b>, which is to list the items which are inside the folder you're already in. If you see below in a screenshot. I'm inside the Azizali's folder and the list of items are showing as I used the <code>LS</code><span> <code>~</code> represents the home directory of the user which is logged in.</span></p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics1.png\" style=\"width: 100%;\"/><br/></p><p><span>If you want to go to the very root directory of your machine, you can simply write <b><code>cd /</code> </b>and hit enter and you will be inside the main directory of the machine.</span><br/></p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics2.png\" style=\"width: 100%;\"/><span><br/></span></p><p>If you want to see what's inside your main directory of that machine you can simply write <b>LS </b>and you can see the folders inside the director as shown below<b><code><code><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics3.png\" style=\"width: 100%;float: left;\"/></code></code></b></p><p><span>If you want to go to any folder which is inside the directory, you can simply write </span><b><code>cs users</code> </b><span>since I want to go to the users folder. You can see below, I'm in the users folder.</span></p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics4.png\" style=\"width: 100%;\"/><span><br/></span></p><p>If you want to see what's inside the azzuali's folder I can say <b><code>LS</code> </b>and you see it shows three folders. And if I want to go in any of the folder, I can write<b><code> cd azzuali</code> </b>and you see I'm inside the azzuali's folder. Also you notice the tilde sign <code>~</code> is back because I'm in the directory.</p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics5.png\" style=\"width: 100%;\"/><br/></p><p>You can write <b><code>clear</code> </b>to clear up the screen, but you can still scroll up and see the previous information. If you want to go back, one step up you can simply write <b><code>cd ..</code></b> or if you want to go back, you can write <code>cd Desktop</code> and you will be back to the desktop as shown below.<br/></p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics6.png\" style=\"width: 100%;\"/><br/></p><p>You can also create a folder in that particular location by writing making a directory like such <b><code>mkdir</code> </b>and call it anything you like, I'll call i iloveNode hit enter and you see the folder gets created.<br/></p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics7.png\" style=\"width: 100%;\"/><br/></p><p>If you want to go inside that folder you can simply write <b><code>cd iloveNode</code></b> and you will be in that folder. If you want to open that folder you can write <b><code>open .</code> </b>and you see the folder got open.</p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics8.png\" style=\"width: 100%;\"/><br/></p><p>This only works in machines, which have windows kind of environment. If you're on core terminal based machines like Linux or Unix without the Windows. This isn't going to happen, because they don't have the GUI.<br/></p><p>If you want to create a file inside the folder that you created, you can write <b><code>touch</code> </b>and the name of the file like such <b><code>touch first.js</code></b><br/></p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics9.png\" style=\"width: 100%;\"/><br/></p><p>If you want to remove the file, you can write <code>rm</code> and name of the file in our case it will be <code>rm first.js</code> hit enter and the file will be removed. If you want to write something inside the file, you can write <code>echo</code> and write something in quotes like such <code>echo &#34;firstline&#34;</code> the greater than sign and the name of the file like such <code>echo &#34;FirstLine&#34; &gt; first.js</code> save it, refresh the file and you will see the FirstLine got printed in the file. You can also use that to replace the text. <span>If you want to write something else, you can add double greater than signs </span></p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics10.png\" style=\"width: 100%;\"/><br/></p><p>If you want to change the name of the file, you can simply write <code>mv</code> the name of the file that you want to change, then write the new name of the file like such. <code>mv first.js second.js</code> you can see the file name got changed to <code>second.js</code></p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics11.png\" style=\"width: 100%;\"/><br/></p><p>If you want to move that file to the desktop, you could write <b><code>mv second ../</code> name of the file </b>and your file will be moved to the desktop.</p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics12.png\" style=\"width: 100%;\"/><br/></p><p>If you want to see what's inside the file, you can write <code>cat</code> and the name of the file like such <b><code>cat second.js</code> </b>whatever the content of the file was got printed.<br/></p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/command-line-basics13.png\" style=\"width: 100%;\"/></p><p>I hope you enjoyed this lesson, If you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</p>"
  },
  {
    "_id": "57c654661cbef70f008a10e7",
    "slug": "git-config",
    "title": "Configuring your Local Git Setup",
    "subTitle": "We add your name and email to git configuration such that every commit you make is stamped with you as the author",
    "thumbnail": "git-config.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.47261552674E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:09:41.571Z"
    },
    "updatedMsec": 1.473041381572E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180691704",
    "duration": "2:38",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T03:52:06.74Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "58b3e5724d0bd100102f06bf",
    "slug": "api-intro",
    "title": "API: Learn to use Any Web API",
    "subTitle": "Learn and understand how to use Any Web API",
    "thumbnail": "api-intro.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488184690591E+12,
    "updatedIso": {
      "$date": "2017-02-27T08:49:20.886Z"
    },
    "updatedMsec": 1.488185360886E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/201799351",
    "duration": "3:22",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-27T08:38:10.591Z"
    },
    "technology": [
      "API"
    ],
    "topic": [
      "API"
    ]
  },
  {
    "_id": "58b3e16c4d0bd100102f06bb",
    "slug": "book-search-app-google-books-api",
    "title": "Project: Build an Book Search App with Google Books API",
    "subTitle": "Learn how to create an Application via Google Books API",
    "thumbnail": "api5-google-books.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488183660705E+12,
    "updatedIso": {
      "$date": "2017-02-28T03:34:16.356Z"
    },
    "updatedMsec": 1.488252856356E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/204833839",
    "duration": "6:32",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-27T08:21:00.705Z"
    },
    "technology": [
      "Web API",
      "jQuery"
    ],
    "topic": [
      "Web API",
      "Projects"
    ]
  },
  {
    "_id": "57ef2fb5bbd56d000f0e84c5",
    "slug": "constructor-functions-2",
    "title": "Making and Using Constructor Functions in JavaScript - Part 2",
    "subTitle": "Constructor Functions Provide Class-like behavior in JavaScript. Learn how to use Constructor function to make Object-Oriented Applications",
    "thumbnail": "oopjs.gif",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.475293109553E+12,
    "updatedIso": {
      "$date": "2016-10-01T03:38:29.554Z"
    },
    "updatedMsec": 1.475293109554E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/185100398",
    "duration": "6:36",
    "access": 0,
    "createdIso": {
      "$date": "2016-10-01T03:38:29.553Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Object-Oriented Javascript"
    ]
  },
  {
    "_id": "58b56e4545db170010ebb057",
    "slug": "api-crud",
    "title": "How to use CRUD APIs also known as  (Create, Read, Update, Delete) APIs",
    "subTitle": "Learn how to utilize CRUD APIs",
    "thumbnail": "api2-2-crud.png",
    "demoUrl": "0",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488285253434E+12,
    "updatedIso": {
      "$date": "2017-02-28T12:34:13.434Z"
    },
    "updatedMsec": 1.488285253434E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/205978173",
    "duration": "8:53",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-28T12:34:13.434Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ]
  },
  {
    "_id": "58b3e4a34d0bd100102f06be",
    "slug": "apis-iceland-wikipedia-itunes",
    "title": "Playing with Iceland API, Wikipedia API and iTunes API",
    "subTitle": "Let's read the docs and play with 3 more Web APIs - Iceland API, Wikipedia API and iTunes API",
    "thumbnail": "api7-iceland-wikipedia-itunes.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488184483486E+12,
    "updatedIso": {
      "$date": "2017-02-28T03:38:51.673Z"
    },
    "updatedMsec": 1.488253131673E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/205814023",
    "duration": "4:48",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-27T08:34:43.485Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web API"
    ]
  },
  {
    "_id": "59931aff2f385300129b8739",
    "slug": "api2-10-3-implicit-grant",
    "title": "oAuth Flows: Implicit Grant",
    "subTitle": "Learn about Implicit Grant in Authorization Flow",
    "thumbnail": "Api2-10-3-implicit-grant.png",
    "demoUrl": "0",
    "createdMsec": 1.502812927276E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/229614230",
    "duration": "1:03",
    "access": 0,
    "createdIso": {
      "$date": "2017-08-15T16:02:07.276Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ]
  },
  {
    "_id": "562d31b39068f91a3cdf1c64",
    "slug": "animate-animating-elements-with-jquery",
    "title": "Animate: Animating elements with jQuery",
    "subTitle": "Learn how to animate your website by adding motion to your HTML elements and CSS effects.",
    "thumbnail": "jQuery14-8-animate.png",
    "demoUrl": "demo/jQuery14-8-animate/index.html",
    "bodyContent": "<div><h1>Animating Elements with jQuery</h1><p>In this lesson, we are going to learn how to animate your website with jQuery You can start off by creating a simple basic HTML structure and create a div with a class of whatever you like, you can name it anything you like. In my case I've already created a div with a class of mainclass as shown below.</p><p>I'm going to select the main-class and put the top margin on my website since we need some space there. To do that I can write jQuery like such </p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){&#10;   $('.main-class').css(&#34;margin-top&#34;,&#34;40px&#34;);&#10;&#10;});</code></pre><!--EndFragment--><div><span style=\"float: none;\">Save it refresh the screen and see notice the margin top is now added of 40px on top.</span><br/><br/></div><p><img src=\"//a.ilovecoding.org/img/animate-animating-elements-with-jquery-sc1.png\" style=\"width: 100%;\"/></p><p>We can pass another CSS properties as well but instead of writing the same thing again we can actually pass an object <code>{ }</code> and wrap our styles inside it, add semi colon and write more CSS properties like such</p><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){&#10;  $('.main-class').css({ &#10;    &#34;margin-top&#34;:&#34;40px&#34;, &#10;    &#34;background-color&#34;: &#34;blue&#34;&#10;})&#10;&#10;});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it refresh the screen and you see the background color is changed to blue</span></p><div><div><img src=\"//a.ilovecoding.org/img/animate-animating-elements-with-jquery-sc2.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">Now if I change the CSS method to animate method like such</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>  $('.main-class').animate({ <br/>    &#34;margin-top&#34;:&#34;40px&#34;, <br/>    &#34;background-color&#34;: &#34;blue&#34;<br/> })<br/>});</code></pre><!--EndFragment--><span style=\"float: none;\">Now if you refresh the screen the screen will animate. Let's look in to some more method of animate. Go to the jQuery APIs <a href=\"http://api.jquery.com/animate/\" target=\"\">website</a> you see the animate takes the properties in the form of an object then it takes a duration, you can change the speed of the animate etc. Then it takes easing, easing is the way animation is going to function. jQuery comes with two kinds of default easing, the swing and the easing(linear).</span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/animate-animating-elements-with-jquery-sc3.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\">I'm going to put linear in the code in quotes and 3000 milliseconds which is personal preference again</span></div><div><span style=\"float: none;\"><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>  $('.main-class').animate({ <br/>    &#34;margin-top&#34;:&#34;40px&#34;, <br/>    &#34;background-color&#34;: &#34;blue&#34;<br/> }, 3000, 'linear');<br/>});</code></pre><!--EndFragment--><p>Save it refresh the screen and you will notice this time the animation will happen the same way but the easing is different. </p><p><img src=\"//a.ilovecoding.org/img/animate-animating-elements-with-jquery-sc4.png\" style=\"width: 100%;\"/><br/></p><p><b>Complete property<br/></b>Now we are going to look at the complete property which is a function. What it does it that when the animation finishes, what do you want to do with something? You can add some functions. Let's say when the animation finishes, you want to show a button or remove something.  In our case I'm going to remove the header. In the document I have a div with a class of header so I'll in the code like such <code>$('.header').hide();</code></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>  $('.main-class').animate({ <br/>    &#34;margin-top&#34;:&#34;40px&#34;, <br/>    &#34;background-color&#34;: &#34;blue&#34;<br/> }, 3000, 'linear', function(){&#10;    $('.header').hide(); &#10;});<br/>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it refresh the screen and you see when the animation finishes in a linear fashion, it's going to remove the header.</span></p><div><div><img src=\"//a.ilovecoding.org/img/animate-animating-elements-with-jquery-sc5.png\" style=\"width: 100%;\"/><br/><p>If you go to this <a href=\"https://api.jqueryui.com/easings/\" target=\"\">website</a> you will see the jQuery UI library, providing additional easing options. If you scroll down the website, you can see the demo as well on how it looks when the animation happens. You can play around and pick the one you like the most.</p><p>To enable this, you need the jQuery UI CDN because it's the best practice to import the library in your project. Go to the jQuery <a href=\"https://code.jquery.com/\" target=\"\">website </a>and get the uncompressed version </p><p><img src=\"//a.ilovecoding.org/img/animate-animating-elements-with-jquery-sc6.png\" style=\"width: 100%;\"/><br/></p><div><span style=\"float: none;\"></span></div><div><span style=\"float: none;\">click on it and copy the URL and paste in the HTML document right under the script tag where we have imported our jQuery like such</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/animate-animating-elements-with-jquery-sc7.png\" style=\"width: 100%;\"/><!--EndFragment--><br/>Now I'm not going to use the swing one but use some different ones from the <a href=\"https://api.jqueryui.com/easings/\" target=\"\">website</a> </div><div>so In my case I'll be using the easeInOutElastic one. Also you can play around with the seconds as I mentioned it all depends on personal preference</div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>  $('.main-class').animate({ <br/>    &#34;margin-top&#34;:&#34;40px&#34;, <br/>    &#34;background-color&#34;: &#34;blue&#34;<br/> }, 3000, 'easeInOutElastic', function(){<br/>    $('.header').hide(); <br/>});<br/>});</code></pre><!--EndFragment--><span style=\"float: none;\">Save it refresh the screen and you will notice the animation is going to be different. So this is how you can use the jQuery library to animate your website. I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson. Good bye :)</span></div></div></div>",
    "createdMsec": 1.445802419904E+12,
    "updatedIso": {
      "$date": "2018-06-18T18:22:14.528Z"
    },
    "updatedMsec": 1.529346134528E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-8-animate.zip",
    "videoSource": "//player.vimeo.com/video/115436961",
    "duration": "9:41",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:46:59.904Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "jQuery",
      "Front-End",
      "Project",
      "Animation"
    ]
  },
  {
    "_id": "562d32799068f91a3cdf1c67",
    "slug": "prevent-default-behavior-of-elements-with-jquery",
    "title": "Prevent Default Behavior (of elements) with jQuery",
    "subTitle": "All HTML elements have a default behavior. Sometimes this behavior needs to be disabled to control our User Interface and User Experience. In this video you will learn how to do that with just one line of code.",
    "thumbnail": "jQuery14-9-preventDefaults.png",
    "demoUrl": "demo/jQuery14-9-preventDefaults/index.html",
    "bodyContent": "<h1>Prevent Default Behavior of Elements in jQuery</h1><p>In this lesson, we are going to talk about the prevent default concept Continuing on from our previous <a href=\"https://ilovecoding.org/lessons/eventpropagation-with-jquery?playlist=learn-jquery-in-14-days\" target=\"\">Event Propagation</a> lesson. </p><p>As you know we have three anchor tags in our HTML document and in this lesson we'll target the third one which I have named prevent default. I'm going to write the class of anchor tag which is preventDefault in the HTML document as you can see below</p><p><img src=\"//a.ilovecoding.org/img/prevent-default-behavior-of-elements-with-jquery-sc1.png\" style=\"width: 100%;\"/><br/><br/><!--StartFragment--><span style=\"float: none;\">So I'm going to write some jQuery like <code>a.preventDefault</code> and on click run a function and change the font size</span><br/></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>   $('a.preventDefaults').on('click', function(){<br/>   $(this).css('font-size', '200%'); <br/>})<br/>});</code></pre><!--EndFragment--><div><span style=\"float: none;\">Save it, refresh it and you see the text got bigger in size, and also it's going to visit the which in our case is iLoveCoding.org as you can see in the image above</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/prevent-default-behavior-of-elements-with-jquery-sc2.png\" style=\"width: 100%;\"/><br/></div><div><br/><span style=\"float: none;\">Now let's say whatever the functionality of that particular click event is does not happen then you can pass the event object by writing <code>e</code> and write <code>e.preventDefault();</code> like such <br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>   $('a.preventDefaults').on('click', function(e){<br/>   $(this).css('font-size', '200%'); &#10;   e.preventDefault();<br/>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and now if I click on prevent default which is the third anchor tag, it will not perform any action but yes the size got double.</span></p><div><img src=\"//a.ilovecoding.org/img/prevent-default-behavior-of-elements-with-jquery-sc3.png\" style=\"width: 100%;\"/><br/><br/><div><span style=\"float: none;\"></span></div><div>I'm going to comment out the <code>e.preventDefault</code> by adding <code>//</code> before it so it doesn't work in the code and add <code>#anchor1</code> to the same place where I linked iLoveCoding link and If I click on the prevent default link, it will take me to the anchor tag which is at the bottom of the screen 'second header' as shown below</div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>   $('a.preventDefaults').on('click', function(e){<br/>   $(this).css('font-size', '200%'); <br/>  // e.preventDefault(); &lt;---- this part will not run now<br/>});</code></pre><div><img src=\"//a.ilovecoding.org/img/prevent-default-behavior-of-elements-with-jquery-sc4.png\" style=\"width: 100%;\"/><br/><br/></div><div><span style=\"float: none;\">But if I undo the <code>//</code> from the <code>e.preventDefault</code> and save it, refresh the page and this time if I click on the third link, only the text will get bigger but it won't take me to anywhere because of <code>e.preventDefault</code></span></div><div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>   $('a.preventDefaults').on('click', function(e){<br/>   $(this).css('font-size', '200%'); <br/>   e.preventDefault();<br/>});</code></pre><!--EndFragment--><img src=\"//a.ilovecoding.org/img/prevent-default-behavior-of-elements-with-jquery-sc5.png\" style=\"width: 100%;\"/><br/><br/></div><div><span style=\"float: none;\">I hope you enjoyed this lesson, if you have any question please leave your comments below. I'll talk to you in the next lesson. Good bye :) </span></div></div>",
    "createdMsec": 1.445802617584E+12,
    "updatedIso": {
      "$date": "2017-05-08T08:06:45.476Z"
    },
    "updatedMsec": 1.494230805476E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-9-preventDefaults.zip",
    "videoSource": "//player.vimeo.com/video/115441325",
    "duration": "3:06",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:50:17.584Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "jQuery"
    ]
  },
  {
    "_id": "562d33639068f91a3cdf1c6a",
    "slug": "project-create-your-own-image-carousel-slider-with-jquery",
    "title": "Project: Create your own Image Carousel Slider with jQuery",
    "subTitle": "Create your own Image Carousel Slider with pure jQuery. Its not only about the slider, you will learn how a Front-End Developer thinks creatively to build a web feature",
    "thumbnail": "jQuery14-12-projectSlider.png",
    "demoUrl": "demo/jQuery14-12-projectSlider/index.html",
    "bodyContent": "<div><h1>Create your own Image Carousel Slider with jQuery </h1><p>In this lesson, we are going to create an Image Carousel Slider with jQuery which has an image gallery and when you hit the next button, the next photo shows and so on as shown below</p><p><img src=\"//imgilovecoding.org/img/projectcreate-your-own-image-carousel-slider-with-jquery-sc1.png\" style=\"width: 100%;\"/><br/></p><p><b>Our HTML Document</b></p><p>Below is how our HTML document looks, you see I have imported the jQuery, I have created a script.js file and also linked in the HTML document. I have linked the styles sheet as well.</p><p>In our body, I have two divs. One with a class of main-class and another with a class of header as shown below</p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc2.png\" style=\"width: 100%;\"/><br/></p><p>Style sheet<br/>This is how our style sheet looks like, I have some basic styling implemented just so the slider looks beautiful</p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc3.png\" style=\"width: 100%;\"/> <br/>If I open the project in the browser, this is how our page looks like </p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc4.png\" style=\"width: 100%;\"/> <br/>In our HTML docment I'm going to create some divs so I can import our images. I'll have a div with a class of slider and inside I'll have the <b>ul</b> tag and three <b>li</b>'s inside it like such</p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc5.png\" style=\"width: 100%;\"/><br/></p><!--EndFragment--><p>Save it, refresh the screen and this is how our page looks now. It has three images imported on the slider</p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc6.png\" style=\"width: 100%;\"/><br/></p><p><span style=\"float: none;\">Now we need to style our slider so the list item doesn't show up right before the image. Also make it like such so it only shows one image at a time.<br/>I'm going to remove the bullets and float it to left as shown below</span></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">.slider ul {<br/>  list-style: none;<br/>}</code></pre><!--EndFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">.slider ul li {<br/>  float: left;<br/>}</code></pre><!--EndFragment--><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc7.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">Save it, refresh the screen and you see the bullets are not removed and its floated on the left hand side<br/><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc8.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">I like writing styles in Chrome Developer Tools because the impact is immediate and I can tell how it exactly look, and once we're comfortable with whatever the design looks good in the Chrome developer tools we can simply copy and paste the styles in the style sheet. but again it's personal preference.</span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc9.png\" style=\"width: 100%;\"/><br/></span></div><div><br/></div><div>I'm going to change the width of the images to 500px each so 500 x 3 is 1500px. You see immediately the moment I change the styles, the images are not side by side.</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc10.png\" style=\"width: 100%;\"/><br/></div><div><br/>I'm going to write some css and paste it in the css file<br/><br/></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">.slider ul {<br/>  list-style: none;&#10;  width: 1500px; &#10;  position: relative; &#10;  left: -1000px; &#10;  padding: 0; &#10;  margin: 0;<br/>}</code></pre><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">.slider ul {&#10;  width: 500px;&#10;  overflow: hidden;&#10;}&#10;</code></pre><p><span style=\"float: none;\"></span></p><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc11.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\"><br/></span></div><p>Save it, refresh the screen and you see the slider looks much better now</p><div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc12.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">I'm also going to have a div with a class of nav and inside that, I'm going to have two buttons like such</span></div><div><br/><div></div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc13.png\" style=\"width: 100%;\"/><br/><br/></div><div><p><span style=\"float: none;\"></span><span style=\"float: none;\">Save it, refresh the page and you see the slider has now two buttons</span></p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc14.png\" style=\"width: 100%;\"/><br/>But you notice our main class, the white area around the slider is so big and it's looking ugly. I'm going to change the width of the <code>main-class</code> to 500px like such</p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc15.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">Save it, refresh the screen and you see it looks much better now</span></p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc16.png\" style=\"width: 100%;\"/><br/>Now we are going to write some jQuery in our script.js file and query the dom as shown below, also <code>console.log(whichButton);</code> just for demonstration purposes</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\"> $(document).ready(function($){&#10;   $('.nav button').on('click', function(){ &#10;   var whichButton = $(this).data('nav'); &#10;   console.log(whichButton);&#10;   });&#10;});<br/></code></pre><!--EndFragment--><span style=\"float: none;\"></span><div>Save it, refresh the screen and now if I click on the next button or the previous button, it will display in the console, which button was clicked as shown below <br/></div><div><br/></div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc17.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">Save it, refresh the screen and if I click the buttons you can see it in the console that two buttons were clicked</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc18.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">Also did you notice that the 3rd image is showing in the slider right now, if you want the first image to be your default image you can change the default left value to <b>0 </b></span><span style=\"float: none;\">and the width of the images should be dynamically calculated based on the number of images it has in it. For example we have 10 images and 500px width of image x times 10 = 5000px so this is why the width has to be 5000px so all the ten images can be stacked side by side next to the first, second, third and till 10. But in our case we have only 3 images which is 500px x 3 = 1500px this is why we have 1500px. But our default width should be 500px and that should be changed on the next fly when the slider loads</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc19.png\" style=\"width: 100%;\"/><br/><br/><!--StartFragment--><span style=\"float: none;\">I'm going to create a variable and called imageWidth go to the slider and go to the ul tag and inside the ul tag, go to the li tag and since we have two li tags inside our html document I can say get  the first children which has the tag of img and then get its width</span></div><div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function($){&#10;  var imageWidth = $('.slider ul li').first().children('img').width(); console.log(imageWidth);&#10;});</code></pre><!--EndFragment--><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc20.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\"><br/></span></div><div>Save it, refresh the page and you see in the console, the width has been calculated</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc21.png\" style=\"width: 100%;\"/><br/></div><div><span style=\"float: none;\">Now I'm going to set the width of the UL, I'm going to create a variable and name it imageBox because our ul tag has all the images. I'm going to write like such has shown below <code>var imageBox = $('.slider ul');</code></span></div><div><span style=\"float: none;\">We can also find out the quantity images by writing <code>var imageQuantity = $('.slider ul').children('li').length;</code></span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function($){&#10;var imageBox = $('.slider ul');<br/>var imageWidth = $('.slider ul li').first().children('img').width();&#10;var imageQuantity = $('.slider ul').children('li').length;&#10;&#10;imageBox.css('width', imageWidth*)&#10;console.log(imageWidth);<br/>});</code></pre><!--EndFragment--><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc22.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div>In the console if I type <code>$('.slider ul') </code>it will return the <b>ul </b>tag as shown below. if I write <code>$('.slider ul').children('li') </code>It will return the properties of <b>li</b>'s. If I write <code>$('.slider ul').children('li').length</code> it will return the number of li's it has. Since we have three images in our slider therefore it's going to return 3.</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc23.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div>Now that we know the image quantity so I'll change it to 3</div><div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function($){<br/>var imageBox = $('.slider ul');<br/>var imageWidth = $('.slider ul li').first().children('img').width();<br/>var imageQuantity = $('.slider ul').children('li').length;<br/><br/>imageBox.css('width', imageWidth*imageQuantity);<br/>console.log(imageWidth);<br/>});</code></pre><!--EndFragment--><span style=\"float: none;\">Also I'm going to change the width of slider ul to 500px and set the left value to 0 like such</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc24.png\" style=\"width: 100%;\"/><br/>Save it, refresh the screen and you see the first image is showing and</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc25.png\" style=\"width: 100%;\"/><br/></div><div>Now when the button is clicked, the sliding effect should happen. When the button is clicked, jQuery is going to figure out which button is clicked and then run the function, based on whatever button was clicked. I'm going to say if next button is clicked <code>(whichButton === 'next')</code> run certain function, if previous button is clicked <code>else if(whichButton === 'prev')</code> then do something else like such</div><div> </div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc26.png\" style=\"width: 100%;\"/><br/></div><div><br/><span style=\"float: none;\">Save it, refresh the screen and now if you click on the next button, the next image will show up, if you hit next again, nothing will happen because the button is static. And the left button goes to the +500 px which is incorrect in our scenario</span></div><div><br/><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc27.png\" style=\"width: 100%;\"/><br/><br/></div><div>I want to explain something to you. Learning a programming language is not a very difficult task.  People struggle with how to use tools of JavaScript or jQuery and break it down into logical steps so that you can use these tools into doing something fancy like making a photo slider.  </div><div><b><br/></b></div><div><b>Concept </b></div><div>The first image should have a left position of 0 px<br/>The second image should have a left position of -500px<br/>The third image should have a left position of -1000px</div><div><div>  -0px<br/>  -500px</div><div>  -1000px</div><br/>The 500 is the px width of one image so we can come up with a mathematical formula <br/>2 * width = -500 (2 times a width of 500px is really a 1000px, but we want to get to the 500px so we can say</div><div><font face=\"inherit\">(2-1) * width = -500 (2-1 = 1 times to 500px = 500</font><br/><font face=\"inherit\">Same we can say </font><br/><font face=\"inherit\">(1-1) * width = -0  -----&gt; (1 image minus 1 image = 0)</font><br/><span style=\"float: none;\">(2-1) * width = -500 -----&gt; (2-1 = 1 times to 500px = 500</span><!--EndFragment--><br/><font face=\"inherit\">(3-1) * width = -1000px -----&gt; (3 image minus 1 image = 2 and 2 times the width of the image 500px is = 1000px</font><br/><br/><font face=\"inherit\">We converted</font><font face=\"inherit\"> that logic into a mathematical </font><font face=\"inherit\">formula, and now we can give this formula to jQuery or JavaScript and its going to consistently</font><font face=\"inherit\"> calculate the pix from left to right no matter we have 1 image or thousand images. In the above formula -1 is basically in the formula now we want to figure out if our current image is number 1, number 2 or number 3.</font></div><div><font face=\"inherit\">I'm going to create a variable and name it currentImage and the default image is going to be 1. Also I'm going to remove multiple vars from our code and separate each line with a comma and the last statement with a semi colon like such</font></div><div><font face=\"inherit\"><br/></font></div><div><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc28.png\" style=\"width: 100%;\"/><font face=\"inherit\"><br/></font></div><div><font face=\"inherit\"><br/></font></div><div><p>So when the next button is clicked, the function is going to run and the next image will load, make sure the code looks similar to the screenshot below</p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc29.png\" style=\"width: 100%;\"/><br/></p><p>Save it, refresh the screen and now if you click the next button, the second image will show up. If you click the next button again, the third image will show up. But if you click the next button, the fourth image would have appeared but since we don't have any fourth image, it will look like similar to the screenshot below</p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc30.png\" style=\"width: 100%;\"/><br/></p><p></p><span style=\"float: none;\">We can limit the slider so it doesn't go on and on and on. The same thing happens in the previous button, it shows the 3rd image, the 2nd image and the first image but when the previous button is clicked again, it leads to the similar whitish thing. </span></div><div><span style=\"float: none;\">We need to limit our slider so when the last image is being viewed and the next button is clicked, it leads all the way to the first image.</span></div><div><span style=\"float: none;\"><b>Optimizing your code</b></span></div><div><span style=\"float: none;\">You may notice in the image below, that there is a duplication</span></div><div><span style=\"float: none;\"><b> </b></span><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc31.png\" style=\"width: 100%;\"/></div><div><p><b></b></p><p>We can arrange the code by putting it in the function and call it transition because it's actually transitioning the <b>ul</b> tag. </p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc32.png\" style=\"width: 100%;\"/><br/></p><p>Another good optimization to do when writing code is to structure the code in such a way that your functions are not accessing any global values but wherever the function is called, it passes the values that the function has to use. in the image below <b>pxValue</b> has two variables &#34;currentImage&#34; and the &#34;imageWidth&#34; I can pass these values inside the transition as shown below<br/></p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc33.png\" style=\"width: 100%;\"/><br/></p><p>The function is now isolated and can be copied and pasted in any JavaScript program and can be used. The code is reusable and better when you make bigger projects. <br/></p><p>One last thing I'm going to do is that we don't want to go to the blank page when the last image is clicked, I want to go to the first image when the last image is being viewed and clicked for the next one.</p><p>So I can say if the next button is clicked and the value of current image is imageQuantity (which is 3 in our case since we have 3 images) so in this case we want to set the currentImage value to 1 so the image goes to the first image<br/><br/>I'm also going to call the transition function as shown below but if it is not on the last image then we are going to use our old logic of incrementing the value and go to the next image<br/></p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc34.png\" style=\"width: 100%;\"/><br/></p><p>For the previous button, If the currentImage is on the first image and you hit the previous button then you want to go to the last image. Make sure you change the values as shown in the screenshot below.<br/></p><p><img src=\"//a.ilovecoding.org/img/project-create-your-own-image-carousel-slider-with-jquery-sc35.png\" style=\"width: 100%;\"/><br/></p><p><span style=\"float: none;\">Now if I save it, refresh the page and click buttons in the slider, it will work smoothly. If you're on the last image and hit next, it will take you to the first image and if you're on the first image and hit previous it will take you to the last image.</span></p><p>Grab the source code below and play around with the code and build your own slider. I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson. Good bye :)</p></div></div></div></div>",
    "createdMsec": 1.445802851705E+12,
    "updatedIso": {
      "$date": "2018-06-18T17:19:23.574Z"
    },
    "updatedMsec": 1.529342363574E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-12-projectSlider.zip",
    "videoSource": "//player.vimeo.com/video/115443605",
    "duration": "27:07",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:54:11.705Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "jQuery",
      "Front-End",
      "Project"
    ]
  },
  {
    "_id": "57c64cb61cbef70f008a10e4",
    "slug": "git-intro",
    "title": "Introducing Git: What is it and Why to Use it",
    "subTitle": "What is git, why use it, and how is it different than other Version Control Softwares",
    "thumbnail": "git-intro.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.47261355856E+12,
    "updatedIso": {
      "$date": "2016-08-31T03:19:18.56Z"
    },
    "updatedMsec": 1.47261355856E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180691477",
    "duration": "3:39",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T03:19:18.559Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "57c655521cbef70f008a10e8",
    "slug": "git-state",
    "title": "Different File States in Git (Theory)",
    "subTitle": "Learn about the 3 different States in Git, Unstaged, Staged, and Commit, and how to go about committing your code",
    "thumbnail": "git-state.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472615762994E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:13:10.944Z"
    },
    "updatedMsec": 1.473041590944E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180691987",
    "duration": "2:58",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T03:56:02.994Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "59411bf925706a0012d55d0a",
    "slug": "oauth-flow",
    "title": "How the two apps connect",
    "subTitle": "Learn how a client app is able to get access to the resource owner's information from the resource server",
    "thumbnail": "api2-7-oauth-flow.png",
    "demoUrl": "0",
    "createdMsec": 1.49743922521E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/221563264",
    "duration": "3:01",
    "access": 0,
    "createdIso": {
      "$date": "2017-06-14T11:20:25.21Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ]
  },
  {
    "_id": "57c65ad81cbef70f008a10ef",
    "slug": "git-remote",
    "title": "How to use Git Remote to share your project",
    "subTitle": "Learn how to share your project with other developers by syncing your Git repo to services like Github or Bitbucket",
    "thumbnail": "git-remote.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472617176402E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:53:05.488Z"
    },
    "updatedMsec": 1.47304398549E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180694531",
    "duration": "6:29",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T04:19:36.402Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "57ef3066bbd56d000f0e84c6",
    "slug": "prototype",
    "title": "Use JavaScript Prototypes For Faster Apps",
    "subTitle": "Prototype is a hidden property of ALL Objects in JavaScript. See how you can harness its power to write faster apps and features",
    "thumbnail": "oopjs.gif",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.475293286863E+12,
    "updatedIso": {
      "$date": "2016-10-01T03:43:09.031Z"
    },
    "updatedMsec": 1.475293389031E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/185100825",
    "duration": "8:32",
    "access": 0,
    "createdIso": {
      "$date": "2016-10-01T03:41:26.86Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Object-Oriented Javascript"
    ]
  },
  {
    "_id": "57ca4f5c885dc30f0077cae7",
    "slug": "git-workflow",
    "title": "What should be your Workflow in Git",
    "subTitle": "What should be the daily workflow of a developer working with Git, and collaborating with a team",
    "thumbnail": "git-workflow.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472876380264E+12,
    "updatedIso": {
      "$date": "2016-09-12T11:48:36.439Z"
    },
    "updatedMsec": 1.473680916439E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/181280503",
    "duration": "7:11",
    "access": 0,
    "createdIso": {
      "$date": "2016-09-03T04:19:40.264Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "5941185425706a0012d55d09",
    "slug": "terminologies",
    "title": "Common terms used when working with oAuth",
    "subTitle": "Get familiar with different terms used while working with oAuth",
    "thumbnail": "api2-6-terminologies.png",
    "demoUrl": "0",
    "createdMsec": 1.497438292537E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/221562279",
    "duration": "3:24",
    "access": 0,
    "createdIso": {
      "$date": "2017-06-14T11:04:52.536Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ]
  },
  {
    "_id": "59351790fce0650012ff8b27",
    "slug": "auth",
    "title": "Getting Started with oAuth",
    "subTitle": "What is an oAuth and how it can help you make powerful apps",
    "thumbnail": "api2-5-oauth.png",
    "demoUrl": "0",
    "createdMsec": 1.496651664526E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/220275583",
    "duration": "06:46",
    "access": 0,
    "createdIso": {
      "$date": "2017-06-05T08:34:24.525Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ],
    "updatedIso": {
      "$date": "2017-06-12T09:10:26.7Z"
    },
    "updatedMsec": 1.497258626707E+12
  },
  {
    "_id": "57c65b921cbef70f008a10f1",
    "slug": "git-clone",
    "title": "Git Clone in Detail",
    "subTitle": "What happens when you clone a Git repository,",
    "thumbnail": "git-clone.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472617362787E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:59:02.577Z"
    },
    "updatedMsec": 1.473044342577E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180693662",
    "duration": "5:09",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T04:22:42.787Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "58b3e2eb4d0bd100102f06bd",
    "slug": "book-search-app-google-books-api-part2",
    "title": "Project: Create a Book Search App with Google Books API - Part 2",
    "subTitle": "Learn how to practically make a book search app via Google Books API",
    "thumbnail": "api6-google-books-app-part2.png",
    "demoUrl": "demo/api6-google-books-app/index.html",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488184043263E+12,
    "updatedIso": {
      "$date": "2017-03-03T03:17:27.181Z"
    },
    "updatedMsec": 1.488511047182E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/api6-google-books-app.zip",
    "videoSource": "//player.vimeo.com/video/205811779",
    "duration": "18:55",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-27T08:27:23.263Z"
    },
    "technology": [
      "Web API",
      "jQuery"
    ],
    "topic": [
      "Web API",
      "Projects"
    ]
  },
  {
    "_id": "5a726d2cb736b600141cd223",
    "slug": "styling-your-react-component",
    "title": "Styling Your React Component",
    "subTitle": "Learn how to add CSS styling to your React component",
    "thumbnail": "react/react6-styles.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517448492848E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-app/tree/2-styles",
    "videoSource": "//player.vimeo.com/video/251885761",
    "duration": "4:52",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:28:12.848Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T20:24:51.404Z"
    },
    "updatedMsec": 1.522873491404E+12
  },
  {
    "_id": "562d321d9068f91a3cdf1c65",
    "slug": "event-delegation-with-jquery",
    "title": "Event Delegation with jQuery",
    "subTitle": "Just the way in the physical world, you can assign or delegate tasks to others, one event trigger can be delegated to another event trigger. Sounds confusing? It is not really. Watch and learn how this technique can improve your page performance",
    "thumbnail": "jQuery14-9-eventDeligation.png",
    "demoUrl": "demo/jQuery14-9-eventDeligationEtc/index.html",
    "bodyContent": "<h1>Event Delegation with jQuery </h1><p>In next three lessons, we will be discussing the three concepts related to events <br/></p><ul><li>Event Deligation</li><li>Bubbling / Event Propagation</li><li>Prevent Defaults</li></ul><p>In this lesson, we are going to discuss Event Deligation three concepts related to events </p><p><b>Our Document Structure </b><br/>We have the basic HTML created which has three links in it as shown in the image below. The first two have the href of #anchor1 same for the second href and the third one has a href of the iLoveCoding link.</p><p>If I click on on the first link which is event deligation on the web page, it's going to go to the link at the bottom called &#34;Second header&#34; which has a name of anchor1 in the text editor</p><p><img src=\"//a.ilovecoding.org/img/eventdelegation-with-jquery-sc1.png\" style=\"width: 100%;\"/><br/></p><p>I'm going to write the jQuery and test to see if it's working or not</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){&#10;   console.log('hello');&#10;}</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it refresh the screen and open the chrome developer tools and you should see <b>hello </b>in the console which means our JavaScript and jQuery is working.</span></p><div><div><img src=\"//a.ilovecoding.org/img/event-delegation-with-jquery-sc2.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">I'm going to query all the anchor tags in our document and attach an event to it. So let's say on click, the particular function is going to run so I can write code like such</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>   $('a').on('click', function(){&#10;   $(this).css('color', 'red'); &#10;})&#10;});</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and now if you click on the event deligation the color will be changed to red as you can see in the screenshot below</span></div><div><br/><img src=\"//a.ilovecoding.org/img/event-delegation-with-jquery-sc3.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">I'm now going to add classes to anchor tags, this way it will help us querying the DOM more easily</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/event-delegation-with-jquery-sc4.png\" style=\"width: 100%;\"/><br/></div><div><span style=\"float: none;\"> </span><!--EndFragment--><br/><div><span style=\"float: none;\"><span class=\"Apple-converted-space\">and since we have removed the anchor tags we need to change our jQuery as well. So I can write <code>a.deligation</code> like such</span></span></div><div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>   $('a.deligation').on('click', function(){<br/>   $(this).css('color', 'red'); <br/>})<br/>});</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and effect is still the same</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/event-delegation-with-jquery-sc5.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">We can query the entire body and pass another parameter between the click and the function. So when you are querying the body and attaching a click handler to the body. When we pass the second parameter and when a click happens on the body, the event delegates the handler to the <code>a.deligation</code> selection</span></div><div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>   $('body').on('click', 'a.deligation', function(){<br/>   $(this).css('color', 'red'); <br/>})<br/>});</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and now if I click on event deligation you see the color is changed to red. The only benefit of it as that jQuery will only select the body element and look for the a element and transfer the click handler to that particular selection. This way jQuery doesn't have to do extra work.</span><br/></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/event-delegation-with-jquery-sc6.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div>I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</div></div>",
    "createdMsec": 1.445802525565E+12,
    "updatedIso": {
      "$date": "2017-05-04T06:36:10.423Z"
    },
    "updatedMsec": 1.493879770423E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-9-eventDeligationEtc.zip",
    "videoSource": "//player.vimeo.com/video/115440861",
    "duration": "4:52",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:48:45.564Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "Event Delegation"
    ]
  },
  {
    "_id": "562d479151e467f0010e5296",
    "slug": "create-a-simple-http-server-with-nodejs",
    "title": "Create a Simple HTTP Server with Node.js",
    "subTitle": "Lets create our first Node.js web-server. This will receive request and serve responses. Lets see how simple it is to create.",
    "thumbnail": "nodeWk-8-httpServer.png",
    "demoUrl": "",
    "bodyContent": "<h2>Transcript of the video lesson:</h2>\n<p>In this lesson, we are going to create a simple HTTP Server with Node.js. The server is going to be able to take a request that you sent via the browser and also respond to those requests that you sent to it. We'll look at some more modules.</p>\n\n<p>Our document Structure Our document has some basic HTML in it. We'll use the&nbsp;file to load via the HTTP server. Also, there's a file called server.js and a logo file as well. On the right-hand side, you can see I have opened the terminal and the browser:</p>\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs1.png\" style=\"width: 100%;\">\n\n<p><br></p><p>Let's import the HTTP module by writing <code>var http = require('http');</code> This is the module that is built inside node.js.</p><p>Create a server by writing <code>http.createServer(). listen(7000)</code> the server is created but we need to write some function which is going to take request also it's going to have a callback response.</p>\n\n<p>So when any kind of request comes in, we are going to have a generic response by writing:</p><p><code>response.writeHead(200, {'Content-type': 'text/plan'};</code>&nbsp;</p><p>because every HTTP request has a head and a response code. 200 in our case, which is a success response. Also, they have other parameters but in our case, we'll have&nbsp;<code>content-type</code> and the value is going to be <code>text/plan</code>. The response has another property <code>respone.write('Hello Node JS Server Response')</code> and the last value is going to be <code>response.end();</code>\n</p>\n\n<pre><code class=\"language-javascript\">var http = require('http');http.createServer(function(request, respone){  respone.writeHead(200, {'Content-type':'text/plan'});  response.write('Hello Node JS Server Response');  response.end( );}).listen(7000);</code></pre>\n<p>Run the code by writing node server hit enter and go to the link <code>localhost:7000</code> and you can see http server has been loaded and it shows the generic message on the browser. Also no matter what you put ahead of 7000 port like such:</p><p><code>localhost:700/randomtext</code>&nbsp;</p><p>or anything you put there and refresh the page, it will always display the generic text that we have. Because the server does not take into consideration on what the request parameters are:</p>\n\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs2.png\" style=\"width: 100%;\">\n\n<p><br></p><p>We can <code>console.log(request);</code> to see what's happening. Close the server and restart it and refresh the browser again. You will see a lot of information in the console. We can look for the url one, which has the value of whatever was written in the browser url section. We put aziz so you can see below the <code>/aziz</code> was printed because it captured the request. Based on whatever the url, if let's say index.html is there, run the index.html file etc</p>\n\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs3.png\" style=\"width: 100%;\">\n\n\n<p>But the request can also be complicated like it could be a query string parameter like such <code>users?name=aziz&amp;access=full</code>. In the image below <code>/users</code> is the link while <code>name=aziz&amp;access=full</code> is the query string.</p>\n\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs4.png\" style=\"width: 100%;\">\n\n<p>There are some other modules that can process or parse the path and the query string. So we can say write a module <code>var url = require('url');</code> this module can help us parse the URL. So we can say <code>pathName = url.parse(request.url).pathname;</code>\n</p>\n\n<pre>  <code class=\"language-javascript\">var http = require('http');var url = require('url');\n  http.createServer(function(request, respone){  respone.writeHead(200, {'Content-type':'text/plan'});  response.write('Hello Node JS Server Response');  response.end( );\npathName= url.parse(request.url).pathname;\n   console.log(pathName);  \n}).listen(7000);</code>\n</pre>\n\n<p>So in our case, the pathName is going to be the url. Run the code by writing node server hit enter and It printed <code>users</code> which is the path name and also it shows <code>favicon.ico</code> which is the default thing that it does. Favicon shows at the top of the website as shown below</p>\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs5.png\" style=\"width: 100%;\">\n\n\n<p>We can process the query string as well. We can add another module by writing like such <code>var querystring = require('querystring');</code> also make sure that your code looks same like the way it does in the screenshot below</p>\n\n<pre>  <code class=\"language-javascript\">var http = require('http');var url = require('url');\nvar querystring = require('querystring');http.createServer(function(request, respone){  respone.writeHead(200, {'Content-type':'text/plan'});  response.write('Hello Node JS Server Response');  response.end( );   pathName= url.parse(request.url).pathname;\n   query= url.parse(request.url).query;   console.log('pathName' + pathName);  \n   console.log('query' + query);}).listen(7000);</code>\n</pre> <img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs6.png\" style=\"width: 100%;\">\n\n<p>Refresh the terminal one more time and you can see the pathName is the <code>/users</code> and the query is the <code>name=aziz&amp;access=full</code>.</p>\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs7.png\" style=\"width: 100%;\">\n\n<p>Now, the <code>querystring</code> module can process and make the query into an object and we can read whatever query string we want to read. if we go to Google and search anything, you see at the URL, the source id which is highlighted is a query string.</p>\n\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs8.png\" style=\"width: 100%;\">\n\n<p>Now, let's see if we can load the html via the server. I'll write <code>localhost:7000/file.html</code> and hit enter and you will see that it still printed the same generic information like such:</p>\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs9.png\" style=\"width: 100%;\">\n\n<p>Now, we are going to use our file system module to read the files. We can write</p><p><code>var = require('fs');</code> also create the directory of the file which you want to read by writing <code>fs.readFile(__dirname + pathName</code> and then run a callback functions. We can have two callback objects, if the error occurs, show the response code of 404 which is the code for page not found, if the page loads successfully then show the data.</p>\n\n<pre><code class=\"language-javascript\">var http = require('http');\nvar url = require('url');\nvar querystring = require('querystring');\nvar = require('fs');\nhttp.createServer(function(request, respone){\n   pathName = url.parse(request.url).pathname;\n   fs.readFile(__dirname + pathName, function(err, data){\n      if(err){\n         respone.writeHead(404, {'Content-type':'text/plan'});\n         response.write('Page Was Not Found');\n         response.end();\n       } else {\n         respone.writeHead(200, {'Content-type':'text/plan'});\n         response.write(data);\n         response.end( );\n   }).listen(7000);</code></pre> <img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs10.png\" style=\"width: 100%;\">\n\n<p><br></p><p>Refresh the server and the browser you will see the HTML file on the browser:</p>\n\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs11.png\" style=\"width: 100%;\">\n\n<p><br></p><p>You may notice that it's showing the simple text, which doesn't look good so you can remove the following:</p>\n\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs12.png\" style=\"width: 100%;\">\n\n<p><br></p><p>Restart the server and refresh the page and you will see that the HTML page has been loaded.</p>\n\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs13.png\" style=\"width: 100%;\">\n\n<p><br></p><p>If you try to open index.html file which does not exist in our case, it won't open and it will give you an error. you can also stringify the error by writing <code>JSON.stringify(err));</code></p>\n\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs14.png\" style=\"width: 100%;\">\n\n<p><br></p><p>Restart the server and refresh the browser and you will see it gives the error</p>\n\n<img src=\"//a.ilovecoding.org/img/create-a-simple-http-server-with-nodejs15.png\" style=\"width: 100%;\">\n\n<p><br></p><p>I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</p>",
    "createdMsec": 1.445808017527E+12,
    "updatedIso": {
      "$date": "2018-12-14T18:44:35.037Z"
    },
    "updatedMsec": 1.529359223419E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/nodeWk-8-httpServer.zip",
    "videoSource": "//player.vimeo.com/video/119326686",
    "duration": "17:36",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T21:20:17.527Z"
    },
    "technology": [
      "Node.js"
    ],
    "topic": [
      "Back-End",
      "Node.js",
      "Project"
    ],
    "url": "<div><h1>Create a Simple HTTP Server with Node.js</h1><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">In this lesson we are going to create a simple HTTP Server with Node.js. The server is going to be able to take request that you sent via the browser, and also respond to those requests that you sent to it. We'll look at some more modules. </span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/><b>Our document Structure</b></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">Our document has some basic HTML in it. We'll use the that file to load via the http server.<br/>Also there's a file called server.js and a logo file as well. On the right hand side you can see I have opened the terminal and the browser.<br/><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs1.png\" style=\"width: 100%;\"/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">Let's import the http module by writing <code>var http = require('http');</code><b> </b>This is the module that is built inside node.js. Create a server by writing <code>http.createServer(). listen(7000)</code><b> </b>the server is created but we need to write some function which is going to take request also it's going to have a callback response.<br/><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">So when any kind of request comes in, we are going to have a generic response by writing <code>response.writeHead(200, {'Content-type': 'text/plan'};</code> because every http request has a head and a response code. 200 in our case, which is a success response. Also they have other parameters but in our case we'll have <code>content-type</code> and the value is going to be <code>text/plan</code>.</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">The response has another property <code>respone.write('Hello Node JS Server Response')</code> and the last value is going to be <code>response.end();</code></span></div><!--StartFragment--><p><b><b></b></b></p><p></p><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var http = require('http');<br/><br/>http.createServer(function(request, respone){<br/>  respone.writeHead(200, {'Content-type':'text/plan'});<br/>  response.write('Hello Node JS Server Response');<br/>  response.end( );<br/><br/>}).listen(7000);</code></pre><!--EndFragment--><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><span class=\"Apple-converted-space\">Run the code by writing node server hit enter and go to the link <code>localhost:7000</code> and you can see http server has been loaded and it shows the generic message on the browser. Also no matter what you put ahead of of 7000 port like such <code>localhost:700/randomtext</code> or anything you put there and refresh the page, it will always going to display the generic text that we have.</span></span></div><div style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><span class=\"Apple-converted-space\">Because the server does not take into consideration on what the request parameters are. <br/></span></span></div><p></p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs2.png\" style=\"width: 100%;\"/><br/></p><p>We can <code>console.log(request);</code> to see what's happening. Close the server and restart it and refresh the browser again. You will see a lot of information in the console. We can look for the url one, which has the value of whatever was written in the browser url section. We put azzu so you can see below the <code>/azzu</code> was printed because it captured the request. Based on whatever the url, if let's say index.html is there, run the index.html file etc</p><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"></span></div><div><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs3.png\" style=\"width: 100%;\"/><br/></div><p><br/>But the request can also be complicated like it could be a query string parameter like such <code>users?name=azzu&amp;access=full</code>. In the image below <code><b>/</b>users</code> is the link while <code>name=azzu&amp;access=full</code> is the query string.</p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs4.png\" style=\"width: 100%;\"/><font face=\"inherit\"><span><br/></span></font></p><p><font face=\"inherit\"><span>There are some other modules that can process or parse the path and the query string. So we can say write a module </span></font><code>var url = require('url');</code> <font face=\"inherit\"><span>this </span></font>module can<font face=\"inherit\"><span> help us </span></font>parse<font face=\"inherit\"><span> the </span></font>URL. So we can say <code>pathName = url.parse(request.url).pathname;</code></p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var http = require('http');<br/>var url = require('url');&#10;<br/>http.createServer(function(request, respone){<br/>  respone.writeHead(200, {'Content-type':'text/plan'});<br/>  response.write('Hello Node JS Server Response');<br/>  response.end( );<br/>&#10;pathName= url.parse(request.url).pathname;&#10;   console.log(pathName);  &#10;}).listen(7000);<br/></code></pre><!--EndFragment--><p><b><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">So in our case the pathName is going to be the url. Run the code by writing node server hit enter and It printed </span></b><code>users</code><b> </b><span>which is the path name an</span><span>d also it shows </span><b> </b><code>favicon.ico</code><span> </span><span>which is the default thing that it does. Favicon shows at the top of the website as shown below</span></p><div><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs5.png\" style=\"width: 100%;\"/><span><br/></span><br/><div><span style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">We can process the query string as well. We can add another module by writing like such <code>var querystring = require('querystring');</code> <b style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><b><span style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\">also make sure that your code looks same like the way it does in the screenshot below</span></b></b><br/></span></span></div><br/><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var http = require('http');<br/>var url = require('url');&#10;var querystring = require('querystring');<br/><br/>http.createServer(function(request, respone){<br/>  respone.writeHead(200, {'Content-type':'text/plan'});<br/>  response.write('Hello Node JS Server Response');<br/>  response.end( );<br/><br/>   pathName= url.parse(request.url).pathname;&#10;   query= url.parse(request.url).query;<br/>   console.log('pathName' + pathName);  &#10;   console.log('query' + query);<br/>}).listen(7000);</code></pre><!--EndFragment--><b style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"></span></b><div><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs6.png\" style=\"width: 100%;\"/><b style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><span style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><br/></span></b></div><div><br/></div><div><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">Refresh the terminal one more time and you can see the pathName is the </span><code>/users</code><span> and the query is the </span><code>name=azzu&amp;access=full</code><span>.</span></div></div><div><span><br/></span><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs7.png\" style=\"width: 100%;\"/><br/><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/>Now the <code>querystring</code> module can process and make the query into an object and we can read whatever query string we want to read. if we go to Google and search anything, you see at the URL, the source id which is highlighted is a query string.</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs8.png\" style=\"width: 100%;\"/><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\">Now let's see if we can load the html via the server. I'll write <code>localhost:7000/file.html</code> and hit enter and you will see that it still printed the same generic information like such</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs9.png\" style=\"width: 100%;\"/><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\">Now we are going to use our file system module to read the files. We can write <code>var = require('fs');</code> also create the directory of the file which you want to read by writing <code>fs.readFile(__dirname + pathName</code> and then run a callback functions. We can have two callback objects, if the error occurs, show the response code of 404 which is the code for page not found, if the page loads successfully then show the data.<br/><br/></span></div><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var http        = require('http');<br/>var url         = require('url');<br/>var querystring = require('querystring');&#10;var             = require('fs');<br/><br/>http.createServer(function(request, respone){&#10;pathName =url.parse(request.url).pathname;<br/>fs.readFile(__dirname + pathName, function(err, data<br/><b>if(err)</b>{<br/>   respone.writeHead(404, {'Content-type':'text/plan'});<br/>   response.write('Page Was Not Found');<br/>   response.end( );<br/>}<b>else</b>&#10;   respone.writeHead(200, {'Content-type':'text/plan'});<br/>   response.write(data);<br/>   response.end( );&#10;<br/>}).listen(7000);</code></pre><!--EndFragment--><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs10.png\" style=\"width: 100%;\"/><br/></p><p>Refresh the server and the browser you will see the html file on the browser</p><p><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs11.png\" style=\"width: 100%;\"/><br/></p><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">you may notice that it's showing the simple text, which doesn't look good so you can remove the following</span></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\"><span class=\"Apple-converted-space\"> </span></span><!--EndFragment--></span><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs12.png\" style=\"width: 100%;\"/><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/><br/>Restart the server and refresh the page and you will see that the html page has been loaded.</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs13.png\" style=\"width: 100%;\"/><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\">If you try to open index.html file which does not exist in our case, it won't open and it will give you an error. you can also stringify the error by writing <code>JSON.stringify(err));</code></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs14.png\" style=\"width: 100%;\"/><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\">Restart the server and refresh the browser and you will see it gives the error</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><img src=\"https://ilovecoding-assets.s3.amazonaws.com/img/create-a-simple-http-server-with-nodejs15.png\" style=\"width: 100%;\"/><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\">I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</span></div></div>"
  },
  {
    "_id": "58b3def04d0bd100102f06b7",
    "slug": "what-is-api",
    "title": "What is an API and Web API",
    "subTitle": "Learn the concept of a API and Web API",
    "thumbnail": "api1-what-is.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488183024698E+12,
    "updatedIso": {
      "$date": "2017-02-28T03:22:22.414Z"
    },
    "updatedMsec": 1.488252142415E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/203038356",
    "duration": "9:38",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-27T08:10:24.697Z"
    },
    "technology": [
      "API"
    ],
    "topic": [
      "API"
    ]
  },
  {
    "_id": "58b56f2a45db170010ebb058",
    "slug": "api-auth",
    "title": "What is the difference between Authentication and Authorization",
    "subTitle": "Understand the two most fundamental concepts and the difference among them",
    "thumbnail": "api2-3-auth.png",
    "demoUrl": "0",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488285482902E+12,
    "updatedIso": {
      "$date": "2017-02-28T12:38:02.902Z"
    },
    "updatedMsec": 1.488285482902E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/205974439",
    "duration": "3:35",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-28T12:38:02.902Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ]
  },
  {
    "_id": "59931a5a2f385300129b8738",
    "slug": "api2-10-2-password-grant",
    "title": "oAuth Flows: Password Grant",
    "subTitle": "Learn about Password Grant in oAuth Flows",
    "thumbnail": "Api2-10-2-password-grant.png",
    "demoUrl": "0",
    "createdMsec": 1.502812761966E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/229613912",
    "duration": "2:32",
    "access": 0,
    "createdIso": {
      "$date": "2017-08-15T15:59:21.966Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ],
    "updatedIso": {
      "$date": "2017-08-15T15:59:50.79Z"
    },
    "updatedMsec": 1.50281279079E+12
  },
  {
    "_id": "562d47dd51e467f0010e5298",
    "slug": "project-create-a-web-scraper-to-gather-information-from-the-web",
    "title": "Project: Create a Web Scraper to gather information from the web",
    "subTitle": "Lets write your first web scraper. This program will be able to crawl any webpage and grab information from it.",
    "thumbnail": "nodeWk-10-scraper.png",
    "demoUrl": "",
    "bodyContent": "<div><h1>Create a Web Scraper to Gather Information from the web<br/></h1><p>In this lesson, we are going to create a node application which is going to scraper a website It could be any website. In this lesson, we are going to scrap data from Craigslist. We'll scrap the data and store in a JSON file.</p><p><u><b>Disclaimer</b></u><b>: </b>This type of scraping is sometimes against the terms and conditions for any website. This is just for learning purposes. But when you scrape a website, you be sure to check their terms and conditions.</p><p>What we will do in this lesson:<br/></p><ul><li>We'll use 2 External Node modules</li><li>We'll learn a new concept called Package.Json &gt; Bulk Installing Dependencies</li><li>Scrape a Website</li><li>Save data to JSON</li><li>How Node's Asynchronous Behavior works<br/></li></ul><p><b>Getting Started</b><br/>Create a folder on your desktop and name it scraper. Inside we're going to create a file and name it scraper.js where we'll write the code. </p><h5><b>External Node modules</b><br/>We are going to use two modules. One is called <a href=\"https://github.com/cheeriojs/cheerio\" target=\"\">Cherrio</a> which helps you to query the dom whatever website we're going to get information from. It has jQuery like API that allows us to grab the information from Document Object Model. Another one we're going to be using is called <a href=\"https://github.com/request/request\" target=\"\">request</a>, this module helps us make the HTTP request to the particular webpage that we want to grab the information from. So let's get started. Write some code and create a modules in script.js file like such<br/><br/></h5><!-StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var cheerio = require('cheerio');<br/>var request = require('request');<br/>var fs      = require('fs');</code></pre><!--EndFragment--><p><span style=\"float: none;\">Before we proceed, we need to install the cheerio and request module. So go to the folder directory, inside the folder and in the folder install the dependencies which is cheerio and request. You can install both of the dependencies together by writing <b>npm install cheerio request</b>. Hit enter and you see we have both modules inside our folder.</span></p><div><h5><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc1.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\"><b>Package.Json &gt; Bulk Installing Dependencies</b><br/></span></h5><div><span style=\"float: none;\">So a lot of times your application is going to have tons of modules that you're going to be using, and it's not very productive for you to manually put the names of the modules that you want to install, and they have different versions as well. If you're in a team and you inhered a project and you don't know what version of cheerio and request modules are using. Importing the wrong version can really break the code. </span></div><div>So let's create a package.json file that is going to have the dependencies mentioned in that particular file in a JSON format.</div><div>The standard format of Package.json looks like this. In the description, we can say scraping website, looping and saving the information.</div><div> <img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc2.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">In our case, main is not needed so I'll remove that. You also notice that in front of request and cheerio you see <code>&#34;*&#34;</code> the asterisk sign, which means we need to write the version of the module. While picking up the module from Github or anywhere, you can check the version number and put it inside the quotes. Once you put the version numbers, all you have to do is write <code>npm install</code>and it will install the modules. But as I hit enter, there's an error which says &#34;version not found&#34;</span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc3.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\">so a lot of times you cannot figure out the version number. There's a technique to automatically get the right version numbers. So instead of putting the version numbers, just put the asterisk sign like such <code>&#34;*&#34;</code> in Package.json file and in the terminal write <b><code>npm update --save</code> </b>hit enter and now you notice that it picked the right version. Package.json is going to be very helpful when you become a professional developer and start to build real projects and working in a team. </span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc4.png\" style=\"width: 100%;\"/><br/><!--StartFragment--><span style=\"float: none;\">Back to our code. We'll use the request module and add a link to it, you can add any link that you want to get information from. The request module is going to have a callback function and it will take three parameters, the error, the response and the html body. Also I'll <code>console.log('page loaded')</code> to see if it works fine</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var cheerio = require('cheerio');<br/>var request = require('request');<br/>var fs      = require('fs');&#10;&#10; request ('http://chicago.craigslist.org/search/zip?hasPic=1')&#10;  function(error, response, html){&#10;  console.log('page loaded')&#10;});</code></pre><!--EndFragment--><span style=\"float: none;\">Write node scraper in the terminal and hit enter, yes it's working fine.</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc5.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">The next thing we're going to do is that if there's no error on our page, and the <code>response.statusCode == 200</code> (In the HTTP world, 200 is a success message). I'm going to console.log, else we are going to do nothing. So go to cheerio and load html and save it into a var like such <code>var $ = cheerio.load(html)</code>. The reason I called it a <code>$</code> sign it because cheerio is similar to jQuery, it uses jQuery in the background.<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var cheerio = require('cheerio');<br/>var request = require('request');<br/>var fs      = require('fs');<br/><br/> request ('http://chicago.craigslist.org/search/zip?hasPic=1')<br/>  function(error, response, html){&#10;     if(!error &amp;&amp; response.statusCode == 200){<br/>        console.log('page loaded');&#10;&#10;    var $ = cheerio.load(html);<br/>});</code></pre><!--EndFragment--><p><span style=\"float: none;\"></span></p><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc6.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\"><br/></span></div><p>And since our page is loaded, we can now use the cheerio which is a jQuery mechanism or library that will take the entire HTML document and it will help us parse and look for information. It depends on what information you want to scrape. We want to get the title, the location and the link as well. It's a good practice to open the chrome developer tools and inspect elements to see how information is stored on a particular website. Also know what is class of a particular element. </p><p></p><p><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc7.png\" style=\"width: 100%;\"/><br/></p><p>You see, every record is in a row. The element is <code>p</code> with a class of <code>row</code>.</p><p><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc8.png\" style=\"width: 100%;\"/><br/></p><p>So in our code, we are going to say <code>$ </code>which already has everything loaded off our HTML document. I'll write <code>$('p.row')</code> and save all the records inside a variable called allRecords like such <code>var allRecrods = $('p.row'). </code>So it will grab all the elements with a class of row. Just for demonstration I'll <code>console.log('all records: ' + allRecords);</code> to see if it's working.</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var cheerio = require('cheerio');<br/>var request = require('request');<br/>var fs      = require('fs');<br/><br/> request ('http://chicago.craigslist.org/search/zip?hasPic=1')<br/>  function(error, response, html){<br/>     if(!error &amp;&amp; response.statusCode == 200){<br/>        console.log('page loaded');<br/><br/>    var $ = cheerio.load(html);&#10;&#10;      var allRecords = $('p.row'); &#10;      console.log('all records: ' + allRecords);}<br/>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Write <code>node scraper</code> in the terminal and hit enter. You will see that all of our <code>p</code> tags with a class of <code>row</code> have been printed in our document.</span></p><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc10.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">The hard part is done, all we have to do is to store the information in the JSON format. Write <code>allRecords.each()</code> because we have lots of records in the document.<span class=\"Apple-converted-space\"> Run a function which is going to get the index value and also the element. This is just a function which comes with JavaScript and Node JS which takes an array, <code>allRecords </code>is an array, it's going to look through each of the record in the array. So I'll write <code>$(element).find</code> and then find something. What do we want to find? We wan to find the text in a row. The section <code>a</code> has a class of <code>hdrlnk</code> and then get it's text</span></span></div><div><span style=\"float: none;\"><span class=\"Apple-converted-space\"><br/></span></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc11.png\" style=\"width: 100%;\"/><span class=\"Apple-converted-space\"><br/></span></span></div><p><br/></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">allRecords.each(function(index, element){ &#10;   var title = $(element).find('a.hdrlnk').text();&#10;   console.log(title);&#10;  })<br/></code></pre><!--EndFragment--><p><span style=\"float: none;\">This is how our code looks.</span></p><div><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc12.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">Write node scraper in the terminal and hit enter. You will see the title of the page loaded in our document. </span></div><div><br/><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc13.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">Now we need to grab the location. You see in the document below that the location is stored in a tag called <code>small</code>.</span></div><div><br/><div><span style=\"float: none;\"><span class=\"Apple-converted-space\"></span></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc14.png\" style=\"width: 100%;\"/><span class=\"Apple-converted-space\"><br/></span></span></div><div><br/><span style=\"float: none;\">Another thing that we want to grab is the link tag, the href one and write like such</span></div><div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">allRecords.each(function(index, element){ <br/>   var title    = $(element).find('a.hdrlnk').text();&#10;   var location = $(element).find('small').text();&#10;   var link     = $(element).find('a.hdrlnk').attr('href');<br/>   console.log(title, location, link);<br/>  })</code></pre><!--EndFragment--><span style=\"float: none;\">This is how our code looks</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc15.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">Write node scraper in the terminal and hit enter. It shows the title, the location and the link.<br/><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc16.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">You may notice that the link doesn't have the craigslist.org at the start but we can append that manually by writing<code> 'http://chicago.craigslist.org' +</code></span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">allRecords.each(function(index, element){ <br/>   var title    = $(element).find('a.hdrlnk').text();<br/>   var location = $(element).find('small').text();<br/>   var link     = 'http://chicago.craigslist.org' + $(element).find('a.hdrlnk').attr('href');<br/>   console.log(title, location, link);<br/>  })</code></pre><!--EndFragment--><span style=\"float: none;\">Write node scraper in the terminal one more time and hit enter. As you can see the links are showing with chicago.craigslist.org.</span></div><div><b> </b><!--EndFragment--><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc17.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">If this lesson is difficult for you to understand, make sure you take <a href=\"https://ilovecoding.org/courses/js2\" target=\"\">Learn JavaScript in 14 days </a>course to grasp the concepts.</span></div><div><span style=\"float: none;\">Let's make the information into a JSON. I'm going to create a <code>var allJSONdata = [ ]; </code>and create another var like such</span></div><div><span style=\"float: none;\"><br/></span></div><!--EndFragment--><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc18.png\" style=\"width: 100%;\"/><br/><br/><div><span style=\"float: none;\"></span><span style=\"float: none;\">The last thing we need to do is to save the information inside the file system.</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">fs.writeFile('output.json', allJSONdata, function(err){  &#10;    console.log('successfully saved');&#10;})</code></pre><!--EndFragment--><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc19.png\" style=\"width: 100%;\"/><br/><br/><div><span style=\"float: none;\">Run the scraper by writing node scraper and you will notice it says, <code>allJSONdata</code> is not defined, which of course is true. We need to define it. Copy the selected code as shown below</span></div><div><p><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc35.png\" style=\"width: 100%;\"/>​</p></div><div><p><span style=\"font-size: 18.700000762939453px;\">and paste it there as shown below. So when it was at the previous location, it was a local variable to the request and since </span><code>fs.writeFile</code><span style=\"font-size: 18.700000762939453px;\"> wasn't inside that so it couldn't inhered the allJSONdata</span></p></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc21.png\" style=\"width: 100%;\"/><br/><div><span style=\"float: none;\">Run the code one more time and you see it successfully saved.<br/><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc22.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">You also may notice that output,json file is created and it's empty. I'll explain it to you why it's empty. It's empty because of the asynchronous nature of how Node JS works</span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc23.png\" style=\"width: 100%;\"/><br/></span></div><div><br/><span style=\"float: none;\">So this is how it works. First the modules run and it won't move on to the next part unelss the modules are being loaded.</span></div><div><br/><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc24.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">Then it will move further and run the request. Unless the request is being completed, the code in the box highlighted below will not run.</span></div><div><br/><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc25.png\" style=\"width: 100%;\"/><br/></div><p><br/>While the callback is not returned, it's going to run the <b>writeFile </b>as shown below. Also you might be wondering, where did the code go? I just minimized it for demonstration. <br/></p><p><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc26.png\" style=\"width: 100%;\"/><br/></p><p><span style=\"float: none;\">You also notice that <code>allJSONdata</code> is empty because the callback function isn't resolved. It has not pushed the information yet. But if you want to see something you can write anything like such</span></p><p><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc27.png\" style=\"width: 100%;\"/><br/></span></p><p><span style=\"float: none;\">Run the code by writing node scraper, hit enter and go to the output.json and file and you see it printed &#34;Hi I am here&#34;</span></p><p><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc28.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">Even though allJSONdata has data, but it didn't print because the callback function isn't resolved. The next step is to fix the problem. I'm going to create a function and put code inside it like such. The function below is not going to run unless it is called. </span></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">function saveData(){<br/>  fs.writeFile('output.json', (allJSONdata), function(err){<br/>    console.log('successfully saved');<br/>  });  </code></pre><!--EndFragment--><span style=\"float: none;\">We want to run the above code when the entire loop has ended.</span></div><div><span style=\"float: none;\"><br/></span></div><div><!--EndFragment--><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc29.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">We can come up with a scenario where we don't want all records to show but only ten. So we can say if the index is less than ten, then run a code and save the value, else end the loop. Or just before it's ending it, save the data. </span></div><div><span style=\"float: none;\">We just added an if statement that save the ten records, and if you go to the eleventh one, save the data and end the loop. </span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc30.png\" style=\"width: 100%;\"/><br/></span></div><div><br/><span style=\"float: none;\">Run the code in the terminal, hit enter and it will show successfully saved, and if you go to the output.json file, you see that it has object written in the file.</span></div><div><br/><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc31.png\" style=\"width: 100%;\"/><br/><br/><div><span style=\"float: none;\">Also we need to fix the multiple objects in the document. allJSONdata is not in JSON format, it's in JavaScript format. Even though JavaScript is a stringify edition like a text based edition or representation of an object. We can stringify the allJSONdata like such.</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">function saveData(){<br/>  fs.writeFile('output.json', <b>JSON.stringify</b>(allJSONdata), function(err){<br/>    console.log('successfully saved');<br/>  });  </code></pre><!--EndFragment--><span style=\"float: none;\">Run the application again and now you can see our data is in JSON format.</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc32.png\" style=\"width: 100%;\"/><br/><div><div>If you use Sublime text like I do, you can search for pretty JSON feature to make it into a JSON format and that way you can read it easily.</div><div><br/><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc33.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">Click on it and you see it looks more organized now and readable.</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-web-scraper-to-gather-information-from-the-web-sc34.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">I hope you enjoyed this lesson. If you have any question, leave your comments below. I'll talk to you in the next lesson. Good bye :)</span></div></div></div></div></div></div>",
    "createdMsec": 1.445808093571E+12,
    "updatedIso": {
      "$date": "2018-06-18T22:03:14.524Z"
    },
    "updatedMsec": 1.529359394524E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/nodeWk-10-scraper.zip",
    "videoSource": "//player.vimeo.com/video/119339771",
    "duration": "22:57",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T21:21:33.568Z"
    },
    "technology": [
      "Node.js"
    ],
    "topic": [
      "Back-End",
      "Node.js",
      "Project"
    ]
  },
  {
    "_id": "5993194f2f385300129b8737",
    "slug": "api2-10-1-authorization-code-grant",
    "title": "oAuth Flows (Grant Types) Which one to use and how they work",
    "subTitle": "Learn different oAuth Flows and how they work technically",
    "thumbnail": "api2-10-1-authorization-code-grant.png",
    "demoUrl": "0",
    "createdMsec": 1.502812495744E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/229613440",
    "duration": "4:38",
    "access": 0,
    "createdIso": {
      "$date": "2017-08-15T15:54:55.742Z"
    },
    "technology": [
      "API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ],
    "updatedIso": {
      "$date": "2017-08-15T15:56:33.308Z"
    },
    "updatedMsec": 1.502812593308E+12
  },
  {
    "_id": "562d471e51e467f0010e5293",
    "slug": "file-system",
    "title": "File System",
    "subTitle": "Steams is a method of data transfer. You will learn what is Streams, why is it so helpful and how to use them.",
    "thumbnail": "nodeWk-5-fileSystem.png",
    "demoUrl": "",
    "bodyContent": "<p></p><p></p><h1 class=\"ngbinding\" style=\"text-align: left;color: rgb(51, 51, 51);background-color: rgb(255, 255, 255);\">File System</h1><p><span>In this lesson, </span><span>we are going to look at some new concepts</span></p><p></p><p></p><ul><li><span>Module</span><br/></li><li><span>Read Write Files</span><br/></li><li><span>Callback</span><br/></li><li><span>Aysnc</span><br/></li></ul><p></p><p><span>We’ll look at how modules work in Node.js, then we’re going to use a module to read &amp; write files on the system. As you know, JavaScript on the browser does not have access to the file system but with the help of Node.js runtime, JavaScript has access to your file system.<br/><br/>In the process, we’re going to see how callbacks work in Node.js and how asynchronous code is written in Node.js as well.</span></p><p><b>TIP: </b><br/>One small tip that I want to give to you guys is that if you have a long list of items in your terminal or command like your machine name, the location name and the username along with the <b>$ </b>as shown below.</p><p><img src=\"//a.ilovecoding.org/img/file-system1.png\" style=\"width: 100%;\"/><br/><br/>You can get rid of that if you want to, but it’s just personal preference. To accomplish that you can write <b><code>export PS1=”\\w$ ”</code> </b>the forward slash and <b>w </b>represents the folder location <br/></p><p><img src=\"//a.ilovecoding.org/img/file-system2.png\" style=\"width: 100%;\"/><span><br/></span></p><p>Now I’m going to create a folder and call it filesystem. To create a folder you can write mkdir filesys and your file will be created. I named my folder filesys but you can call it whatever you like. Write <b><code>cd filesys</code></b> to go inside the folder and there I’ll <span>create a file inside the folder and open it in sublime text (text editor). To c</span><span>reate a file, simply write touch code.js</span></p><p><img src=\"//a.ilovecoding.org/img/file-system3.png\" style=\"width: 100%;\"/><span><br/></span></p><p>You can name filename whatever you want. So let’s start writing code. The first thing I’m going to do is to import the module from the Node.js core installation. One of the module node.js has is called <b>fs</b> or file system.</p><p><span>A module is a piece of functionality that node.js may have it as part of their entire coordbase. You can also create module to supplement some kind of information. You can create a module as well on like how to pick a date picker, how to calculate dates and export it to the node package manager that we’re going to look soon.</span></p><p><span>There’s a module which is pre bundled with the node insulation is called file system. It allows you to access the file system of your computer.</span></p><p>To import any module, I can create a variable and call it <b>fs </b>like such</p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var fs = require('fs')</code></pre><p><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">The <b>fs </b>module is now accessible in the program.  To read a file I'm going to write <b><code>fs.readFile('');</code> </b>it takes a few parameters. The first one is the file that we want to read. I'm going to create another file, and you know how to do it. Yes! you guessed it right, we're going to write <b><code>touch</code> </b>and the file name. You can see below the file is now created.</span></p><div><div><img src=\"//a.ilovecoding.org/img/file-system4.png\" style=\"width: 100%;\"/><span><br/></span><br/><p><span></span></p><p>Let's write something inside that file &#34;Hello World, and Hello Node Programmers&#34; just for demonstration. The second parameter it takes is a function, and the function further takes two parameters. One is the error written as <b><code>err</code> </b>and the second one is <b><code>data</code></b><span> or you can call it anything. I'm going to </span><b><code>console.log( )</code> </b><span>for example. Also I'll change the text file in the editor to </span><b><code>text2.txt</code> </b><span>just for demonstration purposes.</span></p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var fs = require('fs')&#10;&#10;fs.readFile('text.txt', function(err, data){ &#10; if(err){ &#10;    console.log(err); &#10; }  &#10;    console.log(data);&#10;&#10;});&#10;</code></pre><!--EndFragment--><img src=\"//a.ilovecoding.org/img/file-system5.png\" style=\"width: 100%;\"/><br/></div><div><p><br/><font face=\"inherit\"><span>If I run the code in the terminal by writing node code.js. You will see an error that the file path does not exist and the reason is that because we didn't enter the exact </span></font>file name<font face=\"inherit\">. <b>Undefined </b>is the data, it did not read any data.</font></p><p><img src=\"//a.ilovecoding.org/img/file-system6.png\" style=\"width: 100%;\"/><span><br/></span></p><p></p><p style=\"color: rgb(85, 85, 85);background-color: rgb(255, 255, 255);\"><span>This time I'll change the file name from <code>&#34;text2.txt&#34;</code> to <code>&#34;text.txt</code>&#34; which is the correct file name.</span></p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var fs = require('fs')<br/><br/>fs.readFile('text.txt', function(err, data){ <br/> if(err){ <br/>    console.log(err); <br/> }  <br/>    console.log(data);<br/><br/>});</code></pre><!--EndFragment--><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">Save it, go to the terminal and write code node.js again. This time you will notice that the buffer information got printed. Buffer is a data type in Node.js that is an information representing binary code.</span><p></p><p><img src=\"//a.ilovecoding.org/img/file-system7.png\" style=\"width: 100%;\"/><br/><br/><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">Since we cannot understand the binary code,<span class=\"Apple-converted-space\"> </span></span><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">we understand it in coding format called <code>utf8</code>. You can write it in the code as shown below.</span></p><p><img src=\"//a.ilovecoding.org/img/file-system8.png\" style=\"width: 100%;\"/><span><br/></span><br/><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">Now run the same code again, and you will see the text got printed.</span></p><p><img src=\"//a.ilovecoding.org/img/file-system9.png\" style=\"width: 100%;\"/><span><br/></span><br/><b>How to write a file</b><br/>The next thing we are going to learn is how to write a file.  So this time I'm going to write <code>fs.writeFile</code> and this time I'll create a new file for demonstration and you can see in the image below that code.js file is inside the <code>filesys</code> and to go up one directory, you can write <b><code>../</code> </b>and pass a few parameters like  add <code>'some text'</code> the <code>'uft8'</code> and the callback function</p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">fs.writeFile('../text2.txt', 'some text', 'utf8'&#10; , function(err, data){&#10;<br/> if(err){ console.log(err) }<br/> console.log(data);<br/><br/>})</code></pre><!--EndFragment--><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\"></span><div><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\"><img src=\"//a.ilovecoding.org/img/file-system10.png\" style=\"width: 100%;\"/><br/></span></div><div><br/></div><div><span style=\"float: none;background-color: rgb(255, 255, 255);\"><span>Now if I run the code again, it says undefined, it also printed the text. It created the second text2.txt file which you can see below contains 'some text.</span></span></div></div><div><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/file-system11.png\" style=\"width: 100%;\"/><span><br/></span><br/><p>Also the second part got printed first in the console and the first part got processed later.</p><p><img src=\"//a.ilovecoding.org/img/file-system12.png\" style=\"width: 100%;\"/><br/><br/>Check out the previous <a href=\"https://ilovecoding.org/lessons/whats-special-about-nodejs?playlist=learn-node-js-in-a-week\" target=\"\">lesson </a>to learn more about the Asynchronous and Event Loop. But let's say if you want a certain part to run first, there's a method in file system called <code>readFilesync</code>. Also the synchronous method does not need the callback function. So I'll remove the callback function from the code. I'll create a variable and save the value that we want to print like such </p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var myRead = fs.readFileSync('text.txt', 'utf8');&#10;  console.log(myRead); &#10;var myWrite = fs.writeFileSync('../text2.text', 'some text', 'utf8');&#10;  console.log(myWrite);</code></pre><!--EndFragment--><img src=\"//a.ilovecoding.org/img/file-system13.png\" style=\"width: 100%;\"/><br/><br/><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">Save it, run the code one more time by writing node code.js and you will notice the first part got processed first and the second one got processed later</span></div><div><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\"><img src=\"//a.ilovecoding.org/img/file-system14.png\" style=\"width: 100%;\"/><br/></span></div><div><span><br/></span></div><div><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</span></div><div><p></p></div></div>",
    "createdMsec": 1.445807902563E+12,
    "updatedIso": {
      "$date": "2016-11-14T03:33:32.737Z"
    },
    "updatedMsec": 1.479094412743E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/nodeWk-5-fileSystem.zip",
    "videoSource": "//player.vimeo.com/video/118702555",
    "duration": "12:19",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T21:18:22.563Z"
    },
    "technology": [
      "Node.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "562d2c189068f91a3cdf1c61",
    "slug": "events-with-jquery",
    "title": "Events with jQuery",
    "subTitle": "Events are actions that get triggered. Click is an event, PageLoad is an event. Learn about different kinds of events in web design and how you can leverage them to create interactive web features.",
    "thumbnail": "jQuery14-6-events.png",
    "demoUrl": "demo/jQuery14-6-events/index.html",
    "bodyContent": "<h1>What are Events in jQuery</h1><p>In this lesson, we are going to learn what are events in jQuery All the different user's actions that a web page can respond to are called events.</p><p><b>Examples of Events</b>: </p><ul><li>Moving a mouse over an element</li><li>Moving a mouse outside of an element</li><li>Selecting a radio button</li><li>Clicking on an element</li><li>Double clicking on an element</li><li>Copying and pasting something on the browser</li><li>Any interaction a user does with the browser</li><li>Loading of the page</li></ul><div><b>Our Document Structure</b></div><div>I have imported the jQuery in our project along with the style sheet. We have 3 divs of main, the first is the class of header, the second is the body and the third is the footer</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/eventswith-jquery-sc1.png\" style=\"width: 100%;\"/><br/></div><h3><b>Getting Started</b></h3><div><span style=\"text-align: left;float: none;\">Let's say if I want to make my button do something, I can simply write an atribute and give a value to it like such</span></div><div><span style=\"text-align: left;float: none;\"><br/></span></div><div><span style=\"text-align: left;float: none;\"><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc2.png\" style=\"width: 100%;\"/><span class=\"Apple-converted-space\"><br/></span></span></div><div><span style=\"text-align: left;float: none;\"><span class=\"Apple-converted-space\"><br/></span></span></div><div>Save it and if I click on button, you see the pop up shows with a message  &#34;hello&#34;<br/><br/></div><div><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc3.png\" style=\"width: 100%;\"/><br/></div><p>This is the one way we are attaching an event to the input type button. We can do another way as well by writing a function such as <b>func1</b></p><p><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc4.png\" style=\"width: 100%;\"/><br/><br/>And I can write a function like such<br/></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">function func1(){&#10;  alert('hello again')&#10;}</code></pre><p>If I save it and refresh the screen you will see another pop up shows up with a message of &#34;hello again&#34;</p><div><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc5.png\" style=\"width: 100%;\"/><br/></div><p><br/>But this is the old way of writing JavaScript to make events work</p><p><b>New way of writing an Event </b></p><p>The latest way to do is to query the DOM and write the code like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var btn = document.getElementById('button');&#10;btn.addEventListener('click', function(){&#10;  alert('hello again 3');&#10;}</code></pre><p><span style=\"float: none;\">The reason we wrote button because the input <b>id </b>in our HTML document is button. In the above code, when the click happens on the second line, it will run the function of alert which is &#34;hello again 3&#34; <br/></span>Save it, refresh the screen and you see the hello again on the screen, because the onClick function was running. </p><p><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc6.png\" style=\"width: 100%;\"/><br/></span></p><p>Hit the OK button and you will see the hello again 3 pop up shows up because of the event listener attached to it</p><p><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc7.png\" style=\"width: 100%;\"/><br/></p><p><b>jQuery Syntax For Event Methods<br/></b></p><p>In jQuery we can query the DOM and add the button with the <b>#</b>, the reason we add <b># </b>so we query the DOM via<b> id </b>write .click and add a function like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('#button').click(function(){&#10;  alert('hello from jQuery');&#10;}</code></pre><p><span style=\"float: none;\">Save it, refresh the screen and you see the 'hello again' shows up from the first event attached</span></p><div><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc8.png\" style=\"width: 100%;\"/><br/><div><br/><span style=\"float: none;\">Hit OK one more time and you see &#34;hello again 3&#34; shows up </span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc9.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\"><br/>Hit OK again and you see the last one &#34;hello from jQuery&#34; shows up</span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc10.png\" style=\"width: 100%;\"/><br/></span></div><div><br/>Methods of Events in jQuery</div><div>.click( ) <br/>.on( ) <br/>.mousenter( ) <br/>.mouseleave( )<br/>.dblclick( ) <br/>.focus( ) <br/>.blur( ) </div><p>multiple different listeners <br/>.off( ) <br/>multiple triggers</p><p>We are going to look at the above mentioned methods in Events</p><p><b>.click( ) </b></p><p>So <b>click </b>is really a helping function for the <b>on </b>method. I can write it like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('#button').on('click', function(){<br/>  alert('hello from jQuery');<br/>}</code></pre><!--EndFragment--><div><span style=\"float: none;\">Hit the submit button and you will see the effect is still the same </span><br/><br/></div><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc11.png\" style=\"width: 100%;\"/><br/><b><br/></b><p><b>.mousenter( ) </b></p><div>I am going to write the mouseenter method like such<br/><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul').mouseenter(function(){<br/>  console.log('i am here on the UL');<br/>}</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and if I hover over on the first UL element which is Home, About and Contact in our case, you see it logged it in the console 'i am here on the UL'</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc12.png\" style=\"width: 100%;\"/><br/><p><b>.mouseleave( ) </b></p><p>so let's say if the mouse leaves, do something as well. </p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul').mouseleave(function(){<br/>  console.log('i am outta here from the UL');<br/>}</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and now  if I hover over the UL area, &#34;i am here on the UL&#34; shows in the console and as I move away my cursor from the UL tag, it says &#34;i am outta here from the UL&#34; as shown in the screenshot below </span></div><div><br/><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc13.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\"><b>.hover( )</b> </span></div><div><span style=\"float: none;\">There's another hover method as well and it has two parameters. So when the mouse cursor hovers over the UL area, the color will change to grey</span><br/><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul').hover(function(){<br/>  $(this).css('background-color', 'grey');<br/>}</code></pre><!--EndFragment--><span style=\"float: none;\">And then we are going to pass another function, when the mouse gets away from the UL tag, then change the color back to white <br/><br/></span></div><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">(function(){<br/>  $(this).css('background-color', 'white');<br/>}</code></pre><!--EndFragment--><div><span style=\"float: none;\">You see in the image below, when I hover over the UL tag the color becomes grey, and when you put your cursor away from it, the color will be back to white</span></div><div> </div><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc14.png\" style=\"width: 100%;\"/><br/><br/><div><p>To make it look more readable I can indent it like such </p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('ul')&#10;   .hover(&#10;     function(){<br/>       $(this).css('background-color', 'grey');<br/>     }&#10;</code><span style=\"color: inherit;background-color: transparent;\">      function(){&#10;</span><span style=\"color: inherit;background-color: transparent;\">        $(this).css('background-color', 'white');&#10;</span><span style=\"color: inherit;background-color: transparent;\">};</span></pre></div><!--StartFragment--><span style=\"float: none;\"><b>.dblclick( ) </b></span></div><div><span style=\"float: none;\">This time we are going to select the footer this time. I'm going to query the DOM<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('.footer').dblclick(function( ) {&#10;  $(this).text('I was double clicked');&#10;})</code></pre><div><code>$('.footer')</code> in above code looks in the entire HTML document for the class of footer or any element with a class of footer and attach the <b><code>.dblick</code> </b>event on it, so when you say <code>$(this)</code> it means whatever was selected in the first place. <br/> </div><div><span style=\"float: none;\">Save it, refresh the screen and now if I double click on the footer area and the text got changed</span></div><div><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc15.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">Let's say you want the same action to happen whether you simply click on it or you double click on it so you can just write like such</span><br/><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('.footer').on(dblclick click', function( ) {<br/>  $(this).text('I was double clicked');<br/>})</code></pre><!--EndFragment--><span style=\"float: none;\">If you now single click on the footer or double click on it, the text will be changed<br/></span><br/></div><div><b>.focus( )</b></div><div><br/><span style=\"float: none;\">When you focus on any element, on any input or focus on button or any other area, mostly the form elements and anchor tags have the ability to be focused on. In the image below, the input area is focused and if you don't focus on it, the area becomes blur when its in active.</span></div><div><br/><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc16.png\" style=\"width: 100%;\"/><br/></div><p><br/>I can simply write a code like such</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('input').focus(function( ) {<br/>  $(this).css('background-color', 'pink');<br/>});</code></pre><!--EndFragment--><div><b>.blur( )</b><br/></div><div><br/><span style=\"float: none;\">I am also going to do the blur as well, I'll change it from focus to blur like such and change the color to grey<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('input').blur(function( ) {<br/>  $(this).css('background-color', 'grey');<br/>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and now if I enter the input element you see the background color changed to pink </span></p><p><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc17.png\" style=\"width: 100%;\"/><br/></p><p><span style=\"float: none;\">I can do the same for button as well if I click on submit button, you see the background color changed to pink and the input element color changed to grey because it's blur now and button is focused. <br/></span> <img src=\"//a.ilovecoding.org/img/events-with-jquery-sc18.png\" style=\"width: 100%;\"/></p><p><br/><span style=\"float: none;\"><b>Multiple listeners</b></span><!--EndFragment--><br/><font face=\"inherit\">Now let's learn how to attach multiple listeners to one </font>particular<font face=\"inherit\"> jQuery object. So I can remove the semi colon and add the code like such</font></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('input')&#10; .focus(function( ) {<br/>   $(this).css('background-color', 'pink');<br/> })&#10;</code><span style=\"color: inherit;background-color: transparent;\"> .blur(function( ) {&#10;</span><span style=\"color: inherit;background-color: transparent;\">   $(this).css('background-color', 'grey');&#10;</span><span style=\"color: inherit;background-color: transparent;\">})</span></pre><!--EndFragment--><p><span style=\"float: none;\">In this way it attaches the focus event listener and the blur event listener. If I save it and refresh the screen you will see the effect is still the same. </span></p><div><div><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc19.png\" style=\"width: 100%;\"/><br/><div><span style=\"float: none;\"><b>.off( )</b></span></div><div><span style=\"float: none;\">If you want to detached the event listener from the particular element on the page. you can simply write <code>$('.footer').off('click')</code> save it, refresh the page and if you click on the footer, it won't work but if you double click on it, it will change the text because in the script rank, it first attached the listener and then it dethe listener<br/><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc20.png\" style=\"width: 100%;\"/><br/></span></div><div><br/></div><div>We are using anonymous functions inside our methods, you don't have to do that, you can write a function, name like <code>myfunction</code> and then create a function as shown below</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc21.png\" style=\"width: 100%;\"/><br/></div><div><br/><div><p>You can add multiple functions as well as shown in a screenshot below, It helps you organize your code and do multiple stuff because it's much more cleaner </p><p><img src=\"//a.ilovecoding.org/img/events-with-jquery-sc22.png\" style=\"width: 100%;\"/><br/></p><p>This really is a personal preference. I hope you enjoyed this lesson, if you have any question please leave your comments below. I'll talk to you in the next lesson. Goodbye :)</p></div></div></div></div>",
    "createdMsec": 1.44580098479E+12,
    "updatedIso": {
      "$date": "2017-05-04T13:04:56.219Z"
    },
    "updatedMsec": 1.493903096219E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-6-events.zip",
    "videoSource": "//player.vimeo.com/video/115431759",
    "duration": "19:47",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:23:04.79Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "Events with jQuery"
    ]
  },
  {
    "_id": "562d2c5e9068f91a3cdf1c62",
    "slug": "project-create-a-top-bar-widget-with-jquery",
    "title": "Project: Create a Top Bar Widget with jQuery",
    "subTitle": "You will create a widget that sticks on top of your website. Users of your widget can close them and reopen them by clicking a couple of buttons",
    "thumbnail": "jQuery14-7-1-projectTopBar.png",
    "demoUrl": "demo/jQuery14-7-1-projectTopBar/index.html",
    "bodyContent": "<div><h1>Create a Top Bar Widget with jQuery</h1><p>In this lesson, we are going to learn how to create a top bar widget with jQuery It is called the hello bar feature if you go to the <a href=\"http://old.hellobar.com/\" target=\"\">website </a>you will notice at the top, there's a top bar as shown below. If you click on the right hand side at the top, you will see the lever, if you click on it, it will close the bar and will pull down the lever so visitors can  re open the top bar.</p><p><img src=\"//a.ilovecoding.org/img/projectcreate-a-top-bar-widget-with-jquery-sc1.png\" style=\"width: 100%;\"/><br/></p><p>In the top bar, you can also add some text or links for your visitors or anything that you want to promote. </p><p><b>Our Document Structure</b></p><p>For this lesson, I have written some simple HTML along with the CSS just like we have been doing in our lessons. Below is the HTML template for the Top Bar. It has two things inside it, the top bar and the top bar lever. </p><p><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc2.png\" style=\"width: 100%;\"/><br/></p><div><span style=\"float: none;\">If you save it, refresh the screen you will see the top bar along with the layer shows up on the webpage</span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc3.png\" style=\"width: 100%;\"/><br/></span></div><div><br/></div><div><span style=\"float: none;\">I have also done the styling in the style sheet already since CSS is not the scope of this lesson so we won't be discussing it in this lesson, but you can head over to <a href=\"https://ilovecoding.org/courses/htmlcss2\" target=\"\">Learn HTML &amp; CSS in 14 days</a> and learn the styling etc.</span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\">I'm going to create a script tag and add link the js file to the HTML document. If the file does not exist in your project, you can create one and name it script.js make sure the extension is <b><code>.js</code></b> for the script file. </span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc4.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\"><br/>Once done let's get started writing some jQuery. </span>I'm going to write the jQuery like such just to see if it's working fine<br/><br/></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){&#10; console.log('it's working')&#10;} </code></pre><div><span style=\"float: none;\"></span></div><div></div><p><span style=\"float: none;\">Save it, refresh the screen and you see everything is working fine</span></p><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc5.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">So I'm going to query the DOM and add function. .hide is to hide the topbar-lever and .show is to show the topbar-bar as written in the code below<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/> $('.topbar-bar').show();&#10; $('.topbar-lever').hide();<br/>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and you see the top bar shows up but the lever doesn't show up because we defined in the code above to hide the top bar lever.</span></p><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc6.png\" style=\"width: 100%;\"/><br/><br/><div><span style=\"float: none;\"></span><span style=\"float: none;\">Now I'm going to write some jQuery so when the lever is clicked the top bar collapses and the lever comes down and when the lever is clicked again the lever collapses and the top bar comes down. You see in the image below the close link has a class of closelink</span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc7.png\" style=\"width: 100%;\"/><br/></span></div><div><br/><span style=\"float: none;\">I'm going to query the DOM and write like such</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>  $('.topbar-bar').show();<br/>  $('.topbar-lever').hide();&#10;&#10;  $('.closelink').on('click', function(){&#10;    $('.topbar-bar').slideToggle();&#10;&#10;});<br/>});</code></pre><span style=\"float: none;\"></span><div>Save it, refresh the screen and you see when you click on the close button on the top right hand side, it toggled the top bar</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc8.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div>you can also say slideUp instead of slideToggle and the action will be same. The only difference is that slideUp will slide up whatever is selected and slideToggle will act as if the topbar is down, it will move it up and if the topbar is up, it will move it down. It is going to inverse the state of that particular selection.</div><div>You can also use the fadeIn and fadeOut. When the top bar is visible and you hit the close link with the value of fadeOut, the top bar will fade out.</div><div><br/></div><div>Now if you want to close the topbar and want the lever to come down afterwords you can simply query the DOM and write code as shown in the image below</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc9.png\" style=\"width: 100%;\"/><br/></div><br/><div><span style=\"float: none;\"></span></div><div><span style=\"float: none;\"><span style=\"float: none;\">Now we can do the same thing for the lever (pull) as well so when the pull button is clicked, the topbar comes down, you can write code as shown in the image below. If you click on the pull, it will bring the topbar down as shown in the code below. when the topbar-lever is clicked, slide down the topbar-bar</span></span></div><div><span style=\"float: none;\"><span style=\"float: none;\"><br/></span></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc10.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">You may notice we wrote (<b>this</b>) instead of topbar-lever, in the previous video we learned if the value is already being passed we can use write (<b>this</b>) instead of making jQuery do the task again.</span></span></div><div><span style=\"float: none;\">TRICK</span></div><div><span style=\"float: none;\">Did you notice that every time we write a statement <code>$('.topbar-bar')</code> jQuery is making an effort to open the HTML document an finding the div with a class of a topbar-bar so every time we write it, it has to search multiple times. In the image above you see we have written it 7 times. We can eliminate the number of times the jQuery library searches the DOM. The way to do is that we can create a variable and called it $topbarBar and we can store the jQuery object of the class in it like such</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var $topbarBar = $('.topbar-bar');</code></pre><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var $topbarLever = $('.topbar-lever');</code></pre><span style=\"float: none;\">The reason I'm using the <b>$ </b>sign is that so we can recognize that this is really a jQuery object. But you don't have the dollar sign, you can write anything but it's a good practice to write the dollar sign. Since we have stored the topbar-bar and topbar-lever in JavaScript variable and wherever the topbar-bar is used, we can write <code>$topbarBar</code> like such</span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc11.png\" style=\"width: 100%;\"/><br/></span></div><div><br/></div><div><span style=\"float: none;\">While working on the top bar you may notice that the behavior is acting simultaneously and if you want to delay or make the behavior faster you can do that as well. You can see on the original <a href=\"http://old.hellobar.com/\" target=\"\">website</a>, click the lever and when the bar goes up, when the bar is totally up then the lever comes down and vice versa. You can accomplish that as well but of course this is personal preference but I'll teach you how to do that. You can add either 200 or any amount of milliseconds as per preference. As I have written in the code below.</span></div><div><span style=\"float: none;\"> </span><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc12.png\" style=\"width: 100%;\"/></div><div><br/><span style=\"float: none;\">But we have a problem, in the <a href=\"http://old.hellobar.com/\" target=\"\">website </a>again you see when the bar comes down, the page moves below and when the bar goes up the page moves up. In the image below we cannot see the background because we don't have that function and when the bar is down, it covers up that particular area which makes it harder for the visitor to view the background. We can introduce that feature in our to bar as well. </span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc13.png\" style=\"width: 100%;\"/><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\">We need margins on the top of body equal to the height of topbar. So I'm going to query the DOM and create a variable called $bodyMargin and write it like such<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var $bodyMargin = $('body').css('margin-top')&#10; console.log($bodyMargin); &lt;--- for demonstration purpose</code></pre><div><span style=\"float: none;\">Save it, refresh the screen and come to the console you see it has 8px margin top which you can also check in chrome developer tools</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc14.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\">I'm going to query the DOM again and get the height of our top bar, and we want the outer height not the internal height. </span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc15.png\" style=\"width: 100%;\"/><br/></div><p><span style=\"float: none;\">We can also create a variable for the height as well like such</span></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var $topbarHeight = $('.topbar-bar').outerHeight(); &#10; console.log($topbarHeight); </code></pre><div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc16.png\" style=\"width: 100%;\"/><br/></div><div><br/><div>Save it, refresh the screen you will notice in the console that it says 8px and 39 so 39 is a number and 8px is a string, we are going to convert it into numbers as well. You can simply write replace<code>('px', ' ' );</code> you can also convert that into integer number as well. you can use the <code>parseInt( )</code> and pass the entire string inside the parseInt function. Both the number will show in console as 8 and 39 and the px will be removed.</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc17.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc18.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div>Our next move is that when the hello bar shows, we wan to change the body margin to the original body margin plus the top bar height like such</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc19.png\" style=\"width: 100%;\"/><br/></div><!--EndFragment--><br/><span style=\"float: none;\">Save it, refresh the page you will see the page is moved down and the top bar is not blocking our page anymore</span></div><div><br/><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc20.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">If I close the link on the top right hand side you see there's so much space because the top bar moved up</span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc21.png\" style=\"width: 100%;\"/><br/></span></div><div><br/><span style=\"float: none;\">Now we are going to write code so when the top bar moves up, the page should move up as well. You can write code as shown in the screenshot below, save it and refresh the screen now if you click on the close button you see below the space is now gone </span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc22.png\" style=\"width: 100%;\"/><br/></span></div><div><br/><span style=\"float: none;\">We can do the same for pull as well so when the pull happens the page should move down again like such</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc23.png\" style=\"width: 100%;\"/><br/><br/>Now if you click on the pull button again to bring the top bar on the screen the page will move along. To make your top bar look smoother we can use the feature of animate. So instead of using CSS we can write animate and pass an object and then give the CSS properties as shown below and when you save it and refresh the screen, the page will have a animation every time the top bar moves up or down.</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc24.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div><b>Trick</b></div><div>We have been using multiple vars in our documents, we can remove vars and add comma at the end of every statement and in the last statement, we can end it with a semi colon like such</div><div> <img src=\"//a.ilovecoding.org/img/project-create-a-top-bar-widget-with-jquery-sc25.png\" style=\"width: 100%;\"/><br/><br/><div><span style=\"float: none;\">I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</span><br/></div></div></div></div>",
    "createdMsec": 1.445801054074E+12,
    "updatedIso": {
      "$date": "2019-06-07T14:30:32.449Z"
    },
    "updatedMsec": 1.529342411795E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-7-1-projectTopBar.zip",
    "videoSource": "//player.vimeo.com/video/115434889",
    "duration": "23:47",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:24:14.073Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "jQuery",
      "Front-End",
      "Project"
    ]
  },
  {
    "_id": "562d324d9068f91a3cdf1c66",
    "slug": "event-propagation-with-jquery",
    "title": "Event Propagation with jQuery",
    "subTitle": "Learn the concept of Event Propagation - Event triggers up the HTML tree, triggering ALL the events attached to the ancestor elements of the originally triggered event. Learn how that is beneficial and how to prevent that behavior with just ONE line of code.",
    "thumbnail": "jQuery14-9-eventPropagation.png",
    "demoUrl": "demo/jQuery14-9-eventPropagation/index.html",
    "bodyContent": "<h1>Event Propagation with jQuery</h1><p>In this lesson, we are going to discuss Bubbling / Event Propagation Continuing from our previous <a href=\"https://ilovecoding.org/lessons/eventdelegation-with-jquery?playlist=learn-jquery-in-14-days\" target=\"\">Event Deligation</a> lesson. </p><p>This time I'm going to select the second anchor tag which is named bubbling in our HTML document. I'm going to write a.bubbling and on click it should run a function and make the text bold</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>   $('a.bubbling').on('click', function(){<br/>   $(this).css('font-weight', 'bold'); <br/>})<br/>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and you will see the text is now bold if I click on it</span></p><div><div><img src=\"//a.ilovecoding.org/img/event-propagation-with-jquery-sc1.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">I'm going to write another event handler, and this time I'm going to attach the click handler to the div with a class of <b>main-class</b> element and change the background color to black and the font color to white like such</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>   $('.main-class').on('click', function(){<br/>   $(this).css({&#10;     'background-color': 'black'),&#10;      'color': 'white'&#10;     })<br/>   })<br/>});</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and now if I click on the background area, any part of the main content the background color is going to change to black and the color of text will be white as shown below</span></div><div><br/><img src=\"//a.ilovecoding.org/img/event-propagation-with-jquery-sc2.png\" style=\"width: 100%;\"/><br/><br/><div><span style=\"float: none;\"></span></div><div>Another thing I want to show is that if you refresh the page and now you click on the Bubbling / Event Propagation the link will be bold and the background color will be changed to black. Save it, refresh the screen and you see, even though I clicked on the second link but the background color also changed.</div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/event-propagation-with-jquery-sc3.png\" style=\"width: 100%;\"/><br/></div><div><br/></div><div><font face=\"inherit\">You just learned the concept of the DOM, The </font>Document<font face=\"inherit\"> Object Model. When you click on any of the child element, it takes the effect whatever its parent has. So in our case the second link is the child of the div element with a class of content which is inside the div element with a class of main-class as shown below</font></div><div><font face=\"inherit\"><br/></font></div><div><img src=\"//a.ilovecoding.org/img/event-propagation-with-jquery-sc4.png\" style=\"width: 100%;\"/><font face=\"inherit\"><br/></font></div><div><br/></div><div>If you want to prevent it, you can write the function called <code>e.stopPropagation</code> like such </div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){<br/>   $('a.bubbling').on('click', function(e){<br/>   $(this).css('font-weight', 'bold'); &#10;   e.stopPropagation();<br/>})<br/>});</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and now if you click on the second link, it will become bold but the background and the rest will remain the same as shown below</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/event-propagation-with-jquery-sc5.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">You notice we wrote <code>e</code> in the brackets and also wrote <code>e.stopPropagation</code>. I'm going to <code>console.log(e)</code> to see what this <code>e</code> is.</span></div><div><span style=\"float: none;\"><br/><img src=\"//a.ilovecoding.org/img/event-propagation-with-jquery-sc6.png\" style=\"width: 100%;\"/><br/><!--StartFragment--><span style=\"float: none;\"><br/></span></span></div><div>So <code>e</code> is a call back object that gets resolved when the event gets triggered. But it's not compulsory to call it <code>e</code> you can call it anything you like and it will return the same results in the console. But since it's an event object, it's a good practice to call it <code>e</code></div><div><br/></div><div>You see below it has so many properties, you don't have to get in to detail, but it has so many properties on what got triggered or what was the properties of the event that got triggered. </div><div><br/></div><div><img src=\"//a.ilovecoding.org/img/event-propagation-with-jquery-sc7.png\" style=\"width: 100%;\"/><br/></div><div><span style=\"float: none;\"><br/></span><span style=\"float: none;\">If I click on the first link, the propagation will take place because there's no stopPropagation in the first event handler.  </span><br/><br/><img src=\"//a.ilovecoding.org/img/event-propagation-with-jquery-sc8.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Good bye :)</span></div>",
    "createdMsec": 1.445802573812E+12,
    "updatedIso": {
      "$date": "2017-05-04T12:23:17.4Z"
    },
    "updatedMsec": 1.4939005974E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-9-eventPropagation.zip",
    "videoSource": "//player.vimeo.com/video/115441134",
    "duration": "6:20",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:49:33.812Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "Event Propagation"
    ]
  },
  {
    "_id": "562d372b9068f91a3cdf1c6b",
    "slug": "ajax-create-a-single-page-app-with-jquery",
    "title": "Ajax: Create a Single Page App with jQuery",
    "subTitle": "Create your first Single-Page Application (SPA) with jQuery using AJAX.",
    "thumbnail": "jQuery14-13-ajaxSinglePage.png",
    "demoUrl": "demo/jQuery14-13-ajaxSinglePage/index.html",
    "bodyContent": "<h2>Video Transcript:</h2><p>In this lesson, we are going to learn how to create a single page application with jQuery using the Ajax technique If you go to the Gmail and open any email, you notice that the Gmail only loads the email, without loading the whole webpage. Only the content of the email is modified in the Document object model or in the browser, and only that information is pulled from the particular server and shown to the computer of the user.</p><p>No JavaScript, CSS or templates are reloaded. It basically speeds up the experience. It's less processing on the server side, it's less processing on the client side so therefore the experience is smoother. The same technique has been used on Twitter as well. If you click on someone's following or followers, it loads the followers and followings without loading the whole page.&nbsp;Both of the techniques are called the Ajax technique.</p><h3>AJAX</h3><p>Ajax stands for&nbsp;Asynchronous JavaScript and XML. Ajax is not a technology but a technique which is used in web programming to transfer information over the internet. &nbsp;Asynchronous means when the request is sent to the server for any kind of new data lets bring in the new email or new followers etc. There's a delay when the server is processing and sending back the information. To understand the XML part, go check out the <a href=\"https://ilovecoding.org/lessons/json-what-is-json-and-how-to-use-it\" target=\"\">JSON </a>video</p><p>Examples of applications using AJAX technique: Gmail,&nbsp;Google Maps, Facebook and YouTube etc.<br></p><p><b>Our HTML Document</b></p><p>You see our document has some basic HTML in it. I have the h1 tag and two links in it.</p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc1.png\" style=\"width: 100%;\"><br></p><p>The about.html page doesn't have the full HTML, but only has one div with some content in it. &nbsp;</p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc2.png\" style=\"width: 100%;\"><br></p><p>This is how our page looks like.</p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc3.png\" style=\"width: 100%;\"><br></p><p>If I click on about page, it will lead me to the next page like such</p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc4.png\" style=\"width: 100%;\"><br></p><p>If I click on the contact page, it will lead us to the contact page. But we want to create a one-page application so when I click on about, it shows the about me info on the same page&nbsp;if I click on contact, it shows the contact info on the same page without loading the entire web page.</p><p>Now I'll start writing code in our script.js file. If you haven't created the script file, go and create one. In this lesson, we are going to look&nbsp;at the following Ajax methods.&nbsp;</p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc5.png\" style=\"width: 100%;\"><br></p><p><code>$.ajax( );</code> is the core method that jQuery has. I have already pre-written some of the code which I'm going to explain to you. The <code>$.ajax( );</code> method has several parameters that you can pass to it. The URL contains the page that we want our page to load. So in our case, it's about.html as shown below in the screenshot<br><br>The <b>data </b>parameter is going to convert the id and its value to query string. On the World Wide Web, a query string is the part of a (URL) containing data that does not fit conveniently into a hierarchical path structure.&nbsp;</p><p><b>Structure</b><br>A typical URL containing a query string is as follows: <br>http://example.com/over/there?name=ferret</p><p>When a server receives a request for such a page, it may run a program, passing the query string, which in this case is, name=ferret unchanged, to the program. The first question mark is used as a separator, and is not part of the query string.<br></p><p>If I have <code>about.html?id=123</code> and in many cases when you're making a request to the server and you want to pass some data. For example you say, get the username with an id of 123 like such <code>about.html?id=123</code> that's the query string parameter we are going to use.&nbsp;We will further look at it in the next lesson.</p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc6.png\" style=\"width: 100%;\"><br></p><p>The other parameter is the <b>type</b>. In HTTP, there are two primary kinds of request that we send. One is the 'Get' request and the one is the 'Post' request. The Get request simply gets the image from the server or the HTML, CSS or script document.&nbsp;</p><p>The 'post' in other words is sending some data to the server for some processing. Where some data has been sent o the server and there has been some change done.&nbsp;<br></p><p>In our case, we want to get the information so we will only use the about.html in the URL parameter. I'm going to change the datatype to \"HTML\"</p><p>When the above request is successful, there's going to be a function which will run. I'm going to console.log just for demonstration</p><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">success: function( response ) {\n  console.log('the page was loaded', response);\n},</code></pre><p><span style=\"float: none;\">If the ajax response fails, then the function below will run</span></p><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">success: function( error ) {<br>&nbsp;&nbsp;console.log('the page was NOT loaded', error);<br>},</code></pre><p><span style=\"float: none;\">The complete function runs, regardless if the ajax was successful or failed</span></p><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">success: function( xhr, status ) {<br>&nbsp;&nbsp;console.log(\"the request is complete!\", error);<br>},</code></pre><p><span style=\"float: none;\"></span></p><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc7.png\" style=\"width: 100%;\"><br></span></div><p><br>Save it, refresh the screen and go to the Chrome developer tools and you will see there's an error there.&nbsp;<code>XMLHttpRequest cannot load</code>. The reason for that is that the application we have is not on a web server. We are accessing the file via local directory.&nbsp;</p><div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc8.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">If you are on a MAC, you can use the terminal and luanch a web server. If you're on Windows, you can download the app called <a href=\"https://code.google.com/archive/p/mongoose/\" target=\"\">mongoose server</a>&nbsp;where you can simply double click that particular app app and server gets loaded on that particular location where you actually doubled clicked the mongoose server.</span></div><div><span style=\"float: none;\">Whereas in MAC, you can write command <code>python -m SimpleHTTPServer 8000</code></span></div><div><span style=\"float: none;\"><br></span></div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc9.png\" style=\"width: 100%;\"><br><br><p>I'm going to put the <code>localhost:8000/index.html</code> hit enter and you see the page is loaded and the error is gone<br></p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc10.png\" style=\"width: 100%;\"><br></p><p>But you see there are two console. One is &nbsp;the page was NOT loaded and the one is The response is completed. Let's see why the page was not loaded.&nbsp;The dataType should just be text as shown below<br></p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc11.png\" style=\"width: 100%;\"><br></p><p>Save it, refresh the screen and you see the content of the about me page has been logged in the console.</p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc12.png\" style=\"width: 100%;\"><br></p><p>In the HTML document, I have a div with a class of content which is empty. In the call back function, I can append the information on the webpage like such<br></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">success: function( response ) {<br>&nbsp;&nbsp;console.log('the page was loaded', response);\n  $('.content').html(response);<br>},</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and you see the page has been loaded</span></div><div><span style=\"float: none;\">&nbsp;</span><!--EndFragment--><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc13.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">Now when I click on About or Contact, the page loads and goes to that particular page, which we don't want. When we click on About page, the about page info should appear on the same page.&nbsp;</span></div><div>I'm going to put the whole ajax method inside a function called&nbsp;<b>callPage&nbsp;</b>as shown below. The code looks cleaner as I have removed the comments.&nbsp;</div><div><br></div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc14.png\" style=\"width: 100%;\"><br></div><div><br><p><font face=\"inherit\">I'm going to write a&nbsp;simple on click function like&nbsp;</font>whenever<font face=\"inherit\">&nbsp;the anchor tag is clicked, run the&nbsp;</font>function. The function is going to be that when the page is clicked, it prevents the page from going to another page.</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$('a').on('click', function(e){  \n   e.preventDefault( ); \n});</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and now if you click on the About or Contact page, nothing will happen. The next thing we want to do is that when the About and Contact buttons are clicked, it should show the value of the pages. I'm going to create a variable called pageRef and reference the the attribute to href. The <b><code>(this)</code></b>&nbsp;in the code below is referenced to the <b><code>a</code> </b>(anchor element)<b> </b>and I'm going to call that function and then reference the URL like such</span></div><br><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function(){\n $('a').on('click', function(e){  <br> &nbsp;&nbsp;&nbsp;e.preventDefault( );\n    var pageRef = $(this).attr('href');\n  \n    callPage(pageRef)\n<br>});</code></pre><!--EndFragment--><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc15.png\" style=\"width: 100%;\"><br><br><div><span style=\"float: none;\"></span></div><div><span style=\"float: none;\"><span style=\"float: none;\">Save it, refresh the screen and now if you click on the About button, the information shows without loading the entire page or going to another page.</span></span></div><div><span style=\"float: none;\"><span style=\"float: none;\"><br></span></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/ajax-create-a-single-page-app-with-jquery-sc16.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)&nbsp;</span></span></div></div>",
    "createdMsec": 1.445803819068E+12,
    "updatedIso": {
      "$date": "2018-12-14T18:49:11.173Z"
    },
    "updatedMsec": 1.529342342562E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-13-ajaxSinglePage.zip",
    "videoSource": "//player.vimeo.com/video/115449530",
    "duration": "15:09",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T20:10:19.067Z"
    },
    "technology": [
      "jQuery",
      "Ajax"
    ],
    "topic": [
      "jQuery",
      "Front-End",
      "Project"
    ]
  },
  {
    "_id": "57c655c11cbef70f008a10e9",
    "slug": "git-state-practice",
    "title": "Different File States in Git (Practice)",
    "subTitle": "Learn about the 3 different States in Git, Unstaged, Staged, and Commit, and how to go about committing your code",
    "thumbnail": "git-state-practice.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.47261587378E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:27:24.277Z"
    },
    "updatedMsec": 1.473042444277E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180692183",
    "duration": "6:38",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T03:57:53.78Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "59931b952f385300129b873a",
    "slug": "api2-10-4-client-credentials-grant",
    "title": "oAuth Flows: Client Credentials Grant",
    "subTitle": "Learn about Client Credentials Grant in oAuth",
    "thumbnail": "Api2-10-4-client-credentials-grant.png",
    "demoUrl": "0",
    "createdMsec": 1.502813077031E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/229614291",
    "duration": "1:21",
    "access": 0,
    "createdIso": {
      "$date": "2017-08-15T16:04:37.031Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ],
    "updatedIso": {
      "$date": "2017-08-15T16:05:24.054Z"
    },
    "updatedMsec": 1.502813124054E+12
  },
  {
    "_id": "57c658391cbef70f008a10eb",
    "slug": "git-branch",
    "title": "Git Branch: Organizing Code with Git Branch",
    "subTitle": "Branches in git are labels meant to manage work",
    "thumbnail": "git-branch.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472616505764E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:35:26.758Z"
    },
    "updatedMsec": 1.473042926758E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180692266",
    "duration": "12:13",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T04:08:25.763Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "5a726aaeb736b600141cd21f",
    "slug": "whats-react",
    "title": "What's React.js really?",
    "subTitle": "Learn whats the philosophy of React.js and what it is fundamentally designed to do",
    "thumbnail": "react/react2-whats-react.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517447854431E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/251885386",
    "duration": "3:41",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:17:34.431Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:39:52.692Z"
    },
    "updatedMsec": 1.522863592692E+12
  },
  {
    "_id": "562d47b951e467f0010e5297",
    "slug": "npm-node-package-manager",
    "title": "NPM - Node Package Manager",
    "subTitle": "Node.js's growth is partially attributed to NPM (Node Package Manager). Anyone, including you, can create a small piece of functionality and make it into a module. People all over the world have created millions of modules and made it publicly accessible for all of us to use. This speeds up coding tremendously. Lets learn how to leverage its power",
    "thumbnail": "nodeWk-9-npm.png",
    "demoUrl": "",
    "bodyContent": "<h1>What is Node Package Manager</h1><p>In this lesson, we are going to look at what is NPM, how to use it and why to use it </p><p>NPM stands for Node Package Manager, it is a piece of software that comes packaged with node. Node is a separate piece of software. Node is the runtime for JavaScript. NPM is a separate piece of software that helps you import modules inside node and you use them.</p><p>If you go to the <a href=\"https://www.npmjs.com/\" target=\"\">website</a> you will see they have over 200k packages in the NPM directory. These packages can be used to speed up your development. One of the most popular one is called Express.js which really helps you build web applications. with node js faster.</p><p>If you want to know which version of npm you have, simply go to the console or terminal and write <code>npm –v</code> and it will tell you the exact version. You can also do the same for node as well by writing <code>node –v</code> </p><p>Your NPM module can be installed in two separate places. You can install your NPM in your local area or in your project files. Let’s create a folder and call it someProject and in the terminal go inside the folder by <code>writing cd (filename)</code> in our case it’s going to be cd someProject and inside that folder we are going to create a script.js file where you can write code.</p><p>So write <code>touch script.js</code> this is how you create a file inside a folder via the terminal. The modules can be installed in the project folder. Or NPM modules can also be installed in the global directory.</p><p>You can see the list of modules available in your project that you downloaded from a github or anywhere. Write <code>npm ls</code> in the terminal and hit enter. Currently there isn't any module in the folder as you can see below. </p><p><img src=\"//a.ilovecoding.org/img/npmnode-package-manager-sc1.png\" style=\"width: 100%;\"/><br/></p><p>If you want to see the modules installed on your computer, you can simply write <code>npm ls -g</code> <b> </b><font face=\"inherit\">g is for global. Hit enter and you will see there are so many modules which comes pre-installed with Node in the global directory. So in our case, the modules are stored in the</font> <code>/usr/local/lib</code><font face=\"inherit\"> folder. In your case it may be </font>different<font face=\"inherit\">. </font></p><p><img src=\"//a.ilovecoding.org/img/npm-node-package-manager-sc2.png\" style=\"width: 100%;\"/><br/></p><p>If we go the our lib directory, you can see there are only 10 modules but inside those modules there are sub modules and the list goes on and on.</p><p><img src=\"//a.ilovecoding.org/img/npm-node-package-manager-sc3.png\" style=\"width: 100%;\"/><br/></p><p>If you want to install any particular module in your project folder, you can simply write <code>npm install (filename)</code> if you want to install express module, you can write <code>npm install express</code>hit enter and you see the express module is not installed. </p><p><img src=\"//a.ilovecoding.org/img/npm-node-package-manager-sc4.png\" style=\"width: 100%;\"/><br/></p><p>You can remove any module as well by writing npm rm (filename so if we want to remove the express module we can write <code>npm rm express</code>hit enter and it will remove the module. If you want to install the same module globally, you can write <code>npm install express -g</code> or that doesn't work for some reason try writing <code>sudo npm install express -g</code>you can also remove that as well by writing <code>sudo npm rm express -g</code>. You can also install specific editions. You can define the version like such <code>sudo npm install express@4.11.1 -g</code>I hope you enjoyed this lesson. If you have any questions, leave your comments below. I'll talk to you in the next lesson. Good bye :)</p>",
    "createdMsec": 1.445808057712E+12,
    "updatedIso": {
      "$date": "2017-05-08T07:19:56.88Z"
    },
    "updatedMsec": 1.49422799688E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/119326688",
    "duration": "7:55",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T21:20:57.712Z"
    },
    "technology": [
      "Node.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "57c65c7b1cbef70f008a10f3",
    "slug": "git-rebase-conflict",
    "title": "How to Resolve Merge Conflicts when using Git Rebase",
    "subTitle": "Merge conflicts can arise while using Git Rebase, lets see how to resolve code merge conflicts while using git Rebase",
    "thumbnail": "git-rebase-conflict.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472617595291E+12,
    "updatedIso": {
      "$date": "2016-09-05T03:08:09.228Z"
    },
    "updatedMsec": 1.473044889228E+12,
    "level": 2,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180693306",
    "duration": "6:35",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T04:26:35.291Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "5a726c2eb736b600141cd220",
    "slug": "your-first-react-component",
    "title": "Your First React Component",
    "subTitle": "Create your first react component",
    "thumbnail": "react/react3-first-component.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517448238616E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-first-component/blob/master/index.html",
    "videoSource": "//player.vimeo.com/video/251885436",
    "duration": "6:11",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:23:58.616Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:51:21.54Z"
    },
    "updatedMsec": 1.52286428154E+12
  },
  {
    "_id": "562d32dd9068f91a3cdf1c69",
    "slug": "keyboard-event-with-jquery",
    "title": "Keyboard Event with jQuery",
    "subTitle": "Keyboard entry is also an Event. Learn in this tutorial, how you can enhance your user interface when a user of your website hits certain keys on their keyboard",
    "thumbnail": "jQuery14-11-keyboard-event.png",
    "demoUrl": "demo/jQuery14-11-keyboard-event/index.html",
    "bodyContent": "<h1>Keyboard Event with jQuery<br/></h1><div><span style=\"float: none;\">In this lesson, we are going to learn how to create keyboard shortcuts in our web application In the image below you see the list of shortcuts that Gmail has.</span></div><div><span style=\"float: none;\"><br/></span></div><div><!-EndFragment--><img src=\"//a.ilovecoding.org/img/keyboard-event-with-jquery-sc1.png\" style=\"width: 100%;\"/><font color=\"#4d4e53\"><br/></font><br/></div><p><b>Our Document Structure</b></p><p>In our document I have some basic HTML page created like such </p><p><img src=\"//a.ilovecoding.org/img/keyboard-event-with-jquery-sc2.png\" style=\"width: 100%;\"/><br/></p><p>It has some styles as well</p><p><img src=\"//a.ilovecoding.org/img/keyboard-event-with-jquery-sc3.png\" style=\"width: 100%;\"/><br/></p><p>In the script.js file I have written some jQuery so when the &#34;click me&#34; button is clicked, the text changes to &#34;I have been clicked&#34;</p><p><img src=\"//a.ilovecoding.org/img/keyboard-event-with-jquery-sc4.png\" style=\"width: 100%;\"/><br/></p><p>In this lesson, we are going to learn three keyboard events</p><ul><li>Keypress</li><li>Keyup</li><li>Keydown</li></ul><p>I'm going to query the DOM and write some jQuery by writing keypress and also put e which is the event call back. For demonstration purposes I'll <code>console.log('I have been pressed', e);</code></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function($){<br/><br/>  $('button').on('click', function() {<br/>    $(this).text('I have been clicked');<br/>   })&#10;<br/>  $('body').on('keypress', function (e) {<br/>    console.log('I have been pressed', e);<br/>})<br/><br/>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it refresh the page and our page looks like this<br/></span> <img src=\"//a.ilovecoding.org/img/keyboard-event-with-jquery-sc5.png\" style=\"width: 100%;\"/></p><div><br/><span style=\"float: none;\">I'm going to open my console and now if I hit <b><code>A</code></b> while on the page, you will see the event logged in the console. If I open the object in the console, you will see lots of properties. The <code>keyCode: 97</code> represents the <b><code>A</code></b> key that was pressed. The keyCode is the key code representation of a lower case <b><code>a</code></b>. </span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/keyboard-event-with-jquery-sc6.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\">There's a site out there for <a href=\"http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes\" target=\"\">JavaScript Char Codes</a> which gives you the quick conversion of all the keys that a keyboard has and it's character code. </span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/keyboard-event-with-jquery-sc7.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">So in our code we can recognize what kind of key was pressed and then take some action after that key was pressed. There are three kinds of keyboard events. When you press down, it's a key down. When you press up, it's a key up. Just between the key up and key down event, the key pressed event triggers. </span></div><div><span style=\"float: none;\"><br/></span></div><div><span style=\"float: none;\">I'm going to create a keyboard shortcut that when when <code>Ctrl + J</code> is pressed the &#34;click me&#34; button on our webpage is going to be triggered. I'll use the keydown in our example. I'm going to write jQuery like such<br/><code>e.keyCode === 74 &amp;&amp; e.ctrlKey === true</code> what it means is that when the J is clicked while holding the shift key, the button is going to be clicked by writing <code>$('button').click();</code> as shown below<br/><br/></span></div><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function($){<br/><br/>  $('button').on('click', function() {<br/>    $(this).text('I have been clicked');<br/>   })<br/><br/>  $('body').on('keypress', function (e) {&#10;    if(e.keyCode === 74 &amp;&amp; e.ctrlKey === true&#10;      $('button').click();<br/>    console.log('I have been keydown', e);<br/>})<br/><br/>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and you see when I hit Ctrl + J the button got clicked</span></p><div><div><img src=\"//a.ilovecoding.org/img/keyboard-event-with-jquery-sc8.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">We can also modify a little bit as well like for example if you don't want it to work only when Ctrl + J is clicked but also when command + J is clicked or maybe <b><code>C</code> </b>is clicked. So I'm going to write jQuery as shown below, as well as in the screenshot</span></div><br/><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function($){<br/><br/>  $('button').on('click', function() {<br/>    $(this).text('I have been clicked');<br/>   })<br/><br/>  $('body').on('keypress', function (e) {&#10;    if(e.ctrlKey === true){&#10;     if(e.keyCode === 74 || e.keyCode === 67){ &#10;     $('button').click();  <br/>      &#10; console.log('I have been keydown', e);<br/>})<br/><br/>});</code></pre><!--EndFragment--><span style=\"float: none;\">Save it, refresh the screen and now if I click Ctrl + C or Ctrl + J you will see the triggered happened.</span></div><div><br/><img src=\"//a.ilovecoding.org/img/keyboard-event-with-jquery-sc9.png\" style=\"width: 100%;\"/><br/><br/><span style=\"float: none;\">I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Good bye :) </span></div>",
    "createdMsec": 1.445802717074E+12,
    "updatedIso": {
      "$date": "2017-05-05T10:28:13.162Z"
    },
    "updatedMsec": 1.493980093163E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-11-keyboard-event.zip",
    "videoSource": "//player.vimeo.com/video/115441727",
    "duration": "7:13",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:51:57.074Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "Keyboard Events"
    ]
  },
  {
    "_id": "58b3e0604d0bd100102f06b9",
    "slug": "reading-api-docs",
    "title": "How To Read Web API Documentation",
    "subTitle": "Learn the Art of Reading Web API Documentation",
    "thumbnail": "api3-reading-docs.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488183392834E+12,
    "updatedIso": {
      "$date": "2017-02-28T03:27:25.343Z"
    },
    "updatedMsec": 1.488252445343E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/203859138",
    "duration": "11:06",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-27T08:16:32.833Z"
    },
    "technology": [
      "API"
    ],
    "topic": [
      "API"
    ]
  },
  {
    "_id": "57ef2ee9bbd56d000f0e84c4",
    "slug": "constructor-functions",
    "title": "Making and Using Constructor Functions in JavaScript",
    "subTitle": "Constructor Functions Provide Class-like behavior in JavaScript. Learn how to use Constructor function to make Object-Oriented Applications",
    "thumbnail": "oopjs.gif",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.475292905885E+12,
    "updatedIso": {
      "$date": "2016-10-01T03:35:05.885Z"
    },
    "updatedMsec": 1.475292905886E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/185085515",
    "duration": "3:38",
    "access": 0,
    "createdIso": {
      "$date": "2016-10-01T03:35:05.883Z"
    },
    "technology": [
      "Core Javascript"
    ],
    "topic": [
      "Object-Oriented Javascript"
    ]
  },
  {
    "_id": "59931c192f385300129b873b",
    "slug": "api2-10-5-refresh-token-grant",
    "title": "oAuth Flows: Refresh Token Grant",
    "subTitle": "Learn about Refresh Token Grant in oAuth",
    "thumbnail": "Api2-10-5-refresh-token-grant.png",
    "demoUrl": "0",
    "createdMsec": 1.502813209894E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/229614419",
    "duration": "3:08",
    "access": 0,
    "createdIso": {
      "$date": "2017-08-15T16:06:49.892Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ]
  },
  {
    "_id": "562d32b29068f91a3cdf1c68",
    "slug": "content-manipulation-with-jquery",
    "title": "Content Manipulation with jQuery",
    "subTitle": "Yes, you can also ADD, REMOVE, DUPLICATE, and RE-ARRANGE how your HTML is structured with jQuery. In this video, we will learn how to do it.",
    "thumbnail": "jQuery14-10-contentManipulation.png",
    "demoUrl": "demo/jQuery14-10-contentManipulation/index.html",
    "bodyContent": "<h2>Content Manipulation in the DOM</h2><p>In this lesson, we are going to learn about the Content Manipulation in the DOM or the HTML document So I have created the simple HTML document which has an ordered list with anchor tags, it has some paragraph tags. I have some basic style as well so when I manipulate the content in the DOM, you can see which content is moving where. We are going to talk about these 7 methods of jQuery mentioned below.</p><p><img src=\"//a.ilovecoding.org/img/contentmanipulation-with-jquery-sc1.png\" style=\"width: 100%;\"><br></p><p>I will start writing jQuery in the script.js file which I've created. If you haven't created one, go and create one. Make sure the extension is .js&nbsp;</p><p>If I inspect element I will see the class of that particular anchor tag is \"apend\" the second class is \"prepend\" the third is \"appendto\" the fourth one is \"prependto\" the fifth one is \"before\" the sixth one is after and the seventh is clone. You can name it whatever you like</p><p><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc2.png\" style=\"width: 100%;\"><br></p><p><span style=\"float: none;\">In the script file I'll start writing my code inside the <code>$(document).ready(function){ });</code>&nbsp;I'll start by writing an event listener on the first ordered list like such</span><br></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function){\n  $('.append').on('click', function(){\n    $('.select').append('HELLO I AM AN APPENTION');\n});\n\n});</code></pre><!--EndFragment--><p><span style=\"float: none;\">The reason we used <strong><code>.select</code> </strong>is because the class of the first paragraph tag is \"selector\" but really you can name it anything you like. The above code will append the text \"HELLO I AM AN APPENTION\" at the end of the paragraph if I click on the first ordered list. Save it, refresh the screen and you see the text got appended at the end of a paragraph.&nbsp;</span></p><p><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc3.png\" style=\"width: 100%;\"><br><br></p><p>You can also add HTML as well by writing&nbsp;<code>&lt;span style=\"color:red\"&gt;</code>  like such&nbsp;</p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function){<br>&nbsp;&nbsp;$('.append').on('click', function(){<br>&nbsp;&nbsp;&nbsp;&nbsp;$('.select').append(&lt;'span style=\"color:red\"&gt;HELLO I AM AN APPENTION');<br>});<br><br>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and now if I click on the first link, you see the color changed to red</span></p><span style=\"float: none;\"><br></span><p><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc4.png\" style=\"width: 100%;\"><br><strong>Prepend Method</strong></p><p><span style=\"float: none;\">The prepend method will not append the text at the end of a paragraph but it will prepend it a the start. So I'm going to change append to prepend like such<br><br></span></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function){<br>&nbsp;&nbsp;$('.prepend').on('click', function(){<br>&nbsp;&nbsp;&nbsp;&nbsp;$('.select').prepend(&lt;'span style=\"color:red\"&gt;HELLO I AM AN APPENTION');<br>});<br><br>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and if I click on the second link, you see the text appeared at the start of a paragraph</span></p><p><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc5.png\" style=\"width: 100%;\"><br></p><p><span style=\"float: none;\">You can also query the DOM and move objects from one place to another. For example if you want the second paragraph to be appeared right before the first paragraph, you can simply write like such</span></p><br><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function){<br>&nbsp;&nbsp;$('.prepend').on('click', function(){<br>&nbsp;&nbsp;&nbsp;&nbsp;$('.select').prepend($('.target'));<br>});<br><br>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Since the class of the second paragraph is<strong> <code>.taget</code> </strong>so therefore we are going to write <strong><code>.target</code>&nbsp;</strong>Save it, refresh the screen and now if I click on the second ordered list which is prepend, the second paragraph got appeared before the first paragraph as shown below</span></p><span style=\"float: none;\"><br></span><p><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc6.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">We can do the same thing in the append function like such&nbsp;</span></p><br><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function){<br>&nbsp;&nbsp;$('.append').on('click', function(){<br>&nbsp;&nbsp;&nbsp;&nbsp;$('.select').append($('.target'));\n \n  $('.prepend').on('click', function(){ \n    $('.select').prepend($('.target'));<br>});<br><br>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and now if I click on the append, the paragraph tag is appended inside the first paragraph like such<br><br></span></p><p><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc7.png\" style=\"width: 100%;\"><br><br><strong>AppendTo Method<br>PrependTo Method</strong><br></p><p><span style=\"float: none;\">AppenTo and PrependTo method are exactly what Append and Prepend does but instead, rather than putting the jQuery selecting at the start, the selection happens afterwords. Whatever you want to add will be added first. The syntax is reversed. I'm going to change the name from append and prepend to appedTo and prependTo like such</span></p><br><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">$(document).ready(function){<br>&nbsp;&nbsp;$('.append').on('click', function(){<br>&nbsp;&nbsp;&nbsp;&nbsp;$('.select').append($('.target'));<br>&nbsp;<br>&nbsp;&nbsp;$('.prepend').on('click', function(){ <br>&nbsp;&nbsp;&nbsp;&nbsp;$('.select').prepend($('.target'));\n\n\n  $('.appendTo').on('click', function(){ \n    $('.select').appendTo($('.target')); \n\n  $('.prependTo').on('click', function(){ \n    $('.select').prependTo($('.target'));<br>});<br><br>});</code></pre><!--EndFragment--><p><span style=\"float: none;\">Save it, refresh the screen and you see the below image is before clicking the appendTo</span></p><span style=\"float: none;\"><br></span><p><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc8.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">Now if I click on AppendTo you will see the the first paragraph got selected and it appended inside the second paragraph</span></p><p><br><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc9.png\" style=\"width: 100%;\"><br><br><strong>Before and After Method</strong><br><span style=\"float: none;\"></span></p><p><span style=\"float: none;\"><span style=\"float: none;\">I'm going to query the DOM and add before and after as shown in the image below.&nbsp;Before refreshing the page</span></span></p><span style=\"float: none;\"><span style=\"float: none;\"><br></span></span><span style=\"float: none;\"><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc10.png\" style=\"width: 100%;\"><br></span></span><p><span style=\"float: none;\"><br><span style=\"float: none;\">After refreshing the page. You see it put the second paragraph before the first paragraph</span></span></p><span style=\"float: none;\"><span style=\"float: none;\"><br></span></span><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc11.png\" style=\"width: 100%;\"><span style=\"float: none;\"><br></span></span><p><font face=\"inherit\">If I refresh the page again you see below how it looks before&nbsp;</font>clicking<font face=\"inherit\">&nbsp;on the After content</font><br></p><p><font face=\"inherit\"><br></font></p><p><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc12.png\" style=\"width: 100%;\"><br></p><p><br><span style=\"float: none;\">Now if I click on the after anchor tag you will see it put the second paragraph right after the first paragraph as shown below</span></p><span style=\"float: none;\"><br></span><p><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc13.png\" style=\"width: 100%;\"><br><strong>Clone Method</strong></p><p>The clone method will not move the content rather&nbsp;copy the content. I'm going to write .clone and appendTo header or wherever you want it to append. Save it, refresh the page. Below you see the image before clicking the Clone content</p><br><p><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc14.png\" style=\"width: 100%;\"><br><span style=\"float: none;\">After clicking on Clone content</span></p><p><span style=\"float: none;\">&nbsp;</span><!--EndFragment--><br><img src=\"//a.ilovecoding.org/img/content-manipulation-with-jquery-sc15.png\" style=\"width: 100%;\"><br><br><span style=\"float: none;\"></span></p><p><span style=\"float: none;\">Since we only have 1 header but for example if you have multiple classes of header in your document, the same action is going to happen to other headers as well.</span></p><p>I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</p>",
    "createdMsec": 1.445802674371E+12,
    "updatedIso": {
      "$date": "2018-07-13T15:41:26.47Z"
    },
    "updatedMsec": 1.53149648647E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-10-contentManipulation.zip",
    "videoSource": "//player.vimeo.com/video/115441478",
    "duration": "9:32",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T19:51:14.371Z"
    },
    "technology": [
      "jQuery"
    ],
    "topic": [
      "Content Manipulation"
    ]
  },
  {
    "_id": "5959d7188bc0940012a3e15d",
    "slug": "twitter-reg",
    "title": "How to register a Client App with Twitter",
    "subTitle": "Learn how you can easily register a client app with Twitter in no time",
    "thumbnail": "Api2-9-twitter-reg.png",
    "demoUrl": "0",
    "createdMsec": 1.499059992557E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/224011015",
    "duration": "2:56",
    "access": 0,
    "createdIso": {
      "$date": "2017-07-03T05:33:12.557Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ]
  },
  {
    "_id": "562d37a99068f91a3cdf1c6d",
    "slug": "ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-2",
    "title": "Ajax: Create a Location Finder App using jQuery & Google Maps API - Part 2",
    "subTitle": "Using Google Maps API with AJAX to create a location finder app",
    "thumbnail": "jQuery-14-14-googleMapsAPI-part2.png",
    "demoUrl": "demo/jQuery14-14-ajaxGoogleMapAPI/index.html",
    "bodyContent": "<div><h1>Ajax: Create a Location Finder App using jQuery &amp; Google Maps API  Part 2</h1><p>Continuing from our previous<a href=\"https://ilovecodingorg/lessons/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-1?playlist=learn-jquery-in-14-days\" target=\"\"> Create a Location Finder App using jQuery &amp; Google Maps API part 1 </a>lesson. We know that longitude and latitude parameters are hard coded and it's not picking up the actual location the user is at. So we are going to use the feature that HTML5 introduces called the Geo location. </p><p><font face=\"inherit\">There's an object in the modern browsers called navigator, not all browsers have it, only the latest browser do. With the help of navigator you can see if the Geo location feature is available on your browser. </font></p><p><font face=\"inherit\">I'm going to write a function and call it <code>getLocation</code> and I'll do <code>navigator.geolocation</code> to see if the Geo Location feature is available in the browser, if that condition is true, then I'm going to call a function inside that object called <code>navigator.geolocation.getCurrentPosition</code> and this will have a function in it which is going to run when the location is found and call the <code>function (loc)</code> and for demonstration </font>purposes<font face=\"inherit\">, I'll <code>console.log</code></font></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">function getLocation(){<br/>  if(navigator.geolocation){<br/>    navigator.geolocation.getCurrentPosition(function(loc){<br/>    console.log(loc);<br/> });<br/> }<br/>}<br/></code></pre><!--EndFragment--><p>The getLocation function is going to run immediately when the button (anchor tag) is clicked in the webpage. Save it, refresh the screen </p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-2-sc1.png\" style=\"width: 100%;\"/><br/></p><p><span style=\"float: none;\">Save it, refresh the screen and now if you click on the anchor tag one more time and wait a little bit, just after couple of seconds the Geo Location will display like such.</span></p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-2-sc2.png\" style=\"width: 100%;\"/><br/>The navigator at the top is using the HTML5 feature of Geo location from the browser. I have already enabled and allowed the browser for our web server URL to access my location. </p><p>Well that's a privacy concern. Go to the Chrome settings if you're using chrome like I'm doing and scroll down go to the advanced settings. Go to content settings, scroll down to location and click manage exceptions and you can cancel it, if you're doing it for the first time. </p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-2-sc3.png\" style=\"width: 100%;\"/></p><p><span style=\"float: none;\">Now that I have disabled it and if I refresh the page again and click it one more time, you will see the pop up asking you to either allow or deny and if you allot it, your location is accessible but if you deny it, your location is not accessible.</span></p><p><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-2-sc4.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">And if I hit allow, it will wait a few seconds then the location information will be printed as shown below. </span></p><p><span style=\"float: none;\"><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-2-sc5.png\" style=\"width: 100%;\"/><br/></span></p><p><span style=\"float: none;\">Inside coords, we have latitude and longitude. Now our job is to pick up the latitude and longitude information, combine it and separate with a comma then pass it to the Google APIs.</span></p><p><span style=\"float: none;\">I'm going to create a variable and call it <code>latlng</code> and concatenate with a comma. Also <code>getCity</code> function is going to be called when the location information is found. I'm going to pass latlng function to the <code>getCity</code>. </span></p><!--StartFragment--><pre><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">function getLocation(){<br/>  if(navigator.geolocation){<br/>    navigator.geolocation.getCurrentPosition(function(loc){<br/>    var latlng = loc.coords.latitude + ',' + loc.coords.longitude;&#10;    getCity(latlng);<br/>});<br/>}<br/>}</code></pre><!--EndFragment--><p><span style=\"float: none;\">When the getCity is run, it needs the latlngInput parameter</span></p><div><div><!--EndFragment--><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-2-sc6.png\" style=\"width: 100%;\"/><br/><span style=\"float: none;\">Save it, refresh the screen and click &#34;What City Am I In?&#34; and you will see the city gets printed on the screen and the Geo location is working fine. Also if you want to know how it works, you can go to Network tab and click on the file and the call is being made to the Google Maps APIs and if you go to the response tab, you will see all the information regarding the city, state, county and the zip code etc.</span></div><div><span style=\"float: none;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/ajax-create-a-location-finder-app-using-jquery-google-maps-api-part-2-sc7.png\" style=\"width: 100%;\"/><br/></div><span style=\"float: none;\">Congratulations you just build a real application with HTML5 feature, jQuery and Google maps APIs. I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</span></div></div>",
    "createdMsec": 1.445803945032E+12,
    "updatedIso": {
      "$date": "2018-06-18T17:18:27.879Z"
    },
    "updatedMsec": 1.529342307879E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/jQuery14-14-ajaxGoogleMapAPI.zip",
    "videoSource": "//player.vimeo.com/video/115451905",
    "duration": "4:18",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T20:12:25.032Z"
    },
    "technology": [
      "jQuery",
      "Ajax"
    ],
    "topic": [
      "jQuery",
      "Front-End",
      "Project"
    ]
  },
  {
    "_id": "562d469f51e467f0010e5290",
    "slug": "whats-special-about-nodejs",
    "title": "Whats Special about Node.js",
    "subTitle": "In this video you will discover what makes Node.js so fast efficient and popular. You will learn about concepts such as Asynchronous, Non-Blocking, Single-Threaded, Event-Driven and Event Loop. Sounds scary? Its really not. Watch and learn now",
    "thumbnail": "nodeWk-2-special.png",
    "demoUrl": "",
    "bodyContent": "<h1>Whats Special about Nodejs</h1><p>Welcome to Learn Node Js in a week course. In this lesson, we are going to talk about what really Node.js is and what makes Node.js so special. And what are the reasons, you should learn it and embrace it's benefits.<br/></p><h2>What is Node JS</h2><p><span>Node.js is a runtime for JavaScript. Let's understand what a runtime is. Every language has a runtime, that runs the language, understands its code and processes the instructions which are written by the </span>programmer. Ruby has a runtime, Python has a runtime, Java has a runtime. Every other language has a runtime.</p><p>JavaScript is the most used language on the planet and it did not really have a runtime that ran on the computer. JavaScript could only run on the browser because the browser is the only software that could process the JS code.</p><p>So that limited the JavaScript developers, from writing JavaScript code and doing something more powerful that a computer could do, but the browser could not do. That is what Node.js brings us to the table.<br/></p><p>Node.js is a runtime for JavaScript so it can run JavaScript code on the machine. Node.js can be installed on any machine, it could be a Linux, it could be on a MAC, it could be on a Windows etc.</p><h2>What is so special about Node JS? </h2><div><span style=\"color: rgb(85, 85, 85);float: none;backgroundcolor: rgb(255, 255, 255);\">There has been other attempts to make JavaScript runtime on the machine, so why did Node.js take off?</span></div><div><span>Node.js is no the first to do that. The real reason is that Node.js, the type of techniques it implements in processing the JavaScript code is really fast and extremely efficient from the processing stand point.</span></div><div><span><br/></span></div><div><span><b>Properties of Node JS</b></span></div><div><span><br/></span></div><div><ul><li><span>Non-blocking (Asynchronous) </span><br/></li><li><span>Event Driven (Event Loop) </span><br/></li><li><span>Single-Threaded</span><br/></li></ul></div><div><span>Node.js is non blocking, the way it runs the code by default is asynchronous code. The second thing is that the JavaScript is event driven. It has a concept of event loop, through which it process the code. Also Node.js is single threaded. Let's look into some examples.</span></div><div><span><b><br/>1- Non-blocking (Asynchronous)</b><br/></span></div><div><span style=\"color: rgb(85, 85, 85);float: none;background-color: rgb(255, 255, 255);\">Below I have a piece of code written</span><span>. </span></div><div><br/><pre><code class=\"”language-javascript”\">-----&gt; // Synchronous / Blocking &lt;------&#10;&#10;var output = getDataFromDatabase('names');&#10;console.log('Hi There');&#10;console.log(output);</code></pre><font face=\"inherit\"><span>In the code above, t</span></font><span>here are three lines of code. </span><span>We can create a variable and call it <code>output</code> like <code>var output</code> then we write a function that says <code>getDataFromDatabase</code> and pass a parameter called 'names'<br/><br/></span></div><div><font face=\"inherit\"><span>So in essence </span></font><font face=\"inherit\"><span>this line of code <code>var output = getDataFromDatabase('name');</code> is going to the database, querying the database and getting some data, the data is stored in the </span></font><b>output </b><font face=\"inherit\"><span>variable. After the first line is processed, it goes to the second line <code>console.log ('Hi There');</code> and prints that. And in the third line it says print out the output, whatever was stored in the output variable.</span></font><br/><br/><font face=\"inherit\"><span>The above code is synchronous and in sequence and it's blocking. Meaning until and unless, the first line of code finishes. It is going to block the rest of the code unless the first line is finished.</span></font></div><div><font face=\"inherit\"><span>But Node.js recommends that we do not write our code this way. I'm going to write another piece of code <br/><br/></span></font><pre><code class=\"”language-javascript”\">---------&gt; // Asynchronous / Non-blocking &lt;-----------&#10;&#10;getDataFromDatabase('name', function(output){&#10;  console.log(output);&#10;});&#10;console.log('Hi There');</code></pre><span>The Asynchronous style of coding is that we define the same function which gets the data from the database <code>getDataFromDatabase</code> pass in the same parameter but we are going to pass another parameter which is a call back function. So the way the above code works is that it will go to this part <code>getDataFromDatabase</code> then get the data and while the database querying is happening which normally takes a few seconds, and it's going to print <code>'Hi There'</code>  or whatever information is there.</span></div><div><span>It's not going to wait for database querying to finish, it's going to proceed to the next line. So by design this is non-blocking and asynchronous that means that means everything is happening together.</span></div><div><span><br/></span></div><div><img src=\"//a.ilovecoding.org/img/whats-special-about-nodejs1.png\" style=\"width: 100%;\"/><span><br/></span></div><div><span><br/></span></div><div><span>In an analogy, the example would be for example. There was a waiter at a restaurant, the waiter goes to a table and takes the order, goes to the chef and gives him the order that customer wants to have. After that he sits and waits for the order to be ready, then takes the dishes and serves it to the customer. The waiter, waiting for the order to be ready is what the synchronous way of doing things are.<br/></span></div><div><span><br/></span></div><div><span>But the asynchronous way is a smarter way. So while the chef is cooking, the waiter is free and has nothing to do but in the mean time he can server other customers or do some other task a waiter does. So the asynchronous methodology  maximizes the usage of the processor and it's cheaper and efficient for computer processor. </span></div><div><span><br/><b>2- Event Driven (Event Loop)<br/></b></span></div><div><span>Another important thing about Node.js is that it's event driven, and it has a concept called event loop. </span><span>Node.js works in a single thread. It has a single processor. </span><font face=\"inherit\"><span>Below you see the list of tasks. Consider it as a single thread. The tasks will be done in sequence, when the first task is done, the second task will start, when the second task is complete, the third task </span></font><font face=\"inherit\"><span>will start and when the third</span></font><font face=\"inherit\"><span> is finished, the fourth will happen and so forth. It will go in a load.</span></font></div><div><font face=\"inherit\"><span>If the new task comes in, it will be added on the top of the task and it's going to be task 5 and so forth</span></font></div><div><font face=\"inherit\"><span><br/></span></font></div><div><img src=\"//a.ilovecoding.org/img/whats-special-about-nodejs-2.png\" style=\"width: 100%;\"/><span><br/></span></div><div><span><br/><span style=\"float: none;background-color: rgb(255, 255, 255);\">Once it has all the tasks, whenever it has a stack of different task or even a single task, It's going to start doing it. Task 1 from a machine perspective is to store a file, that system is going to be done by the file system. The task could be to store information in the database or retrieve information from a database. Or simply it could be a server request.</span></span></div><div><span>When it has sent request to the web request, second one to the database, the third one to the file system, it really doesn't have more work to do. It's not going to wait for the file system to successfully save the files or database to successfully query the things or the web request to completely finish.</span></div><div><span>So when the Callback comes back, when the file system has completed the task. The results arrived will be stacked on the top of the loop, and whatever printing needs to happen, it will happen.</span></div><div><span><br/></span></div><div><img src=\"//a.ilovecoding.org/img/whats-special-about-nodejs3.png\" style=\"width: 100%;\"/><span><br/></span></div><div><span><br/>Another concept that I want to discuss today is called event driven. To explain it further, I'm going to write a piece of code.<br/><br/></span><pre><code class=\"”language-javascript”\">---------&gt; // Event Driven &lt;-----------&#10;&#10;readStream.on('data', function(Data) {&#10;  console.log('recieved some data');&#10;});&#10;&#10;readStream.on('end', function( ) {&#10;  console.log('file ended');&#10;}):</code></pre></div><div><span>Let's assume there's a content that Node.js is reading from a thing called <code>readStream</code> (we don't have to get into details) so when the data is available or trigger happens from the <code>readStream</code> then the callback function is going to run. If the <code>readStream</code> has ended, meaning the node.js has read all content. Then it will do something else.<br/></span></div><div><span><br/></span></div><div><span>In jQuery, we have events, so we have the click event, the load event, do something when the click event happens. Load, click, hover are events that gets triggered and then we do something based on those events. </span></div><div><span>I hope you enjoyed this lesson, if you have any question, leave your comments below, I'll talk to you in the next lesson. Goodbye :) </span></div>",
    "createdMsec": 1.445807775169E+12,
    "updatedIso": {
      "$date": "2016-11-06T20:56:06.754Z"
    },
    "updatedMsec": 1.478465766754E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "source/nodeWk-2-special.zip",
    "videoSource": "//player.vimeo.com/video/117354804",
    "duration": "12:55",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T21:16:15.168Z"
    },
    "technology": [
      "Node.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "57c650d21cbef70f008a10e5",
    "slug": "git-vs-github",
    "title": "Whats the difference between Git & Github?",
    "subTitle": "Once and for all you are going to demystify the difference between Git and Github. Let me tell you, they are NOT the same.",
    "thumbnail": "git-vs-github.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.47261461028E+12,
    "updatedIso": {
      "$date": "2016-09-03T04:03:50Z"
    },
    "updatedMsec": 1.47287543E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180691564",
    "duration": "3:38",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T03:36:50.279Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "5959d4348bc0940012a3e15c",
    "slug": "facebook-reg",
    "title": "How to register a Client App with Facebook",
    "subTitle": "Learn how you can easily register a client app with Facebook in no time",
    "thumbnail": "Api2-8-facebook-reg.png",
    "demoUrl": "0",
    "createdMsec": 1.49905925247E+12,
    "level": 2,
    "active": true,
    "enabled": true,
    "sourceUrl": "0",
    "videoSource": "//player.vimeo.com/video/224010814",
    "duration": "3:07",
    "access": 0,
    "createdIso": {
      "$date": "2017-07-03T05:20:52.468Z"
    },
    "technology": [
      "Web API"
    ],
    "topic": [
      "Web Fundamentals",
      "Crash Course"
    ],
    "updatedIso": {
      "$date": "2017-07-03T05:33:11.524Z"
    },
    "updatedMsec": 1.499059991525E+12
  },
  {
    "_id": "562d46cc51e467f0010e5291",
    "slug": "install-nodejs-on-windows-mac",
    "title": "Install Node.js on Windows & Mac",
    "subTitle": "You will learn how to Install Node.js on Windows and Mac. Then we will play around with the Node.js console and run our first JavaScript code on Node.js",
    "thumbnail": "nodeWk-3-install.png",
    "demoUrl": "",
    "bodyContent": "<h1>How to Install Nodejs on Windows &amp; Mac</h1><div><span style=\"color: rgb(119, 119, 119);textalign: center;float: none;background-color: rgb(255, 255, 255);\">In this lesson, we will see how to install Node.js on Windows &amp; Mac. And then we are going to see on how to use Node.js on Windows &amp; Mac machine via the command line. So let's get started.</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">Simple go to the Node JS <a href=\"https://nodejs.org/en/download/\" target=\"\">website</a> and install it on your system. Once the download is complete, you can simply run the wizard and install Node.js on your system. Open up your installer and follow the instructions, the one thing I want to share with you guys is that when you install Node.js it comes with two things. First it comes with a Node js runtime, the second thing you're going to notice is NPM package manager, NPM stands for node package manager. It is similar to <a href=\"https://rubygems.org/\" target=\"\">RubyGems</a>.</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><img src=\"//a.ilovecoding.org/img/install-nodejs-on-windows-mac1.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">Follow along the setup and finish installing. Once you've done with the installation process. Go to your start menu and type Node.js commnad prompt and open up, because that's where you're going to execute the JavaScript code.</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><img src=\"//a.ilovecoding.org/img/install-nodejs-on-windows-mac2.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><b>How to install Node.js on MAC</b></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">Get the file from the <a href=\"https://nodejs.org/en/download/\" target=\"\" style=\"color: rgb(10, 80, 178);text-align: center;background-color: transparent;\">website</a> I have already downloaded it as you can see below, open the installer and follow along and continue the installation. I have already installed it.</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><img src=\"//a.ilovecoding.org/img/install-nodejs-on-windows-mac3.png\" style=\"width: 100%;\"/><br/><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">Once done with the installation. Now we are going to look at on how to use Node.js. If you're on Windows, you can open Node.js command prompt to write code or if you're on Mac, simply open your terminal and write node. I'm going to write node and hit enter, I'm inside the node runtime where I can write any command of JavaScript. If I say 2+ 2 and it will print 4, I can <code>console.log ('Hello world')</code> as well and it will print whatever information is being written. I can also create an array with three values inside like such <code>var a + [1, &#34;a&#34;, { }]</code></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><img src=\"//a.ilovecoding.org/img/install-nodejs-on-windows-mac4.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">Now we'll see how to use Node when writing a program. I'm going to open my text edit sublime text and start writing code. </span><span style=\"color: rgb(119, 119, 119);text-align: center;\">I'm going to <code>console.log ('hello world')</code> save it</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><img src=\"//a.ilovecoding.org/img/install-nodejs-on-windows-mac5.png\" style=\"width: 100%;\"/><span style=\"color: rgb(119, 119, 119);text-align: center;\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">I've cleared the console and I'll write node again and put the name of the file. When I write the name of the file it will print &#34;hello world&#34; like such</span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><img src=\"//a.ilovecoding.org/img/install-nodejs-on-windows-mac6.png\" style=\"width: 100%;\"/><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\"><br/></span></div><div><span style=\"color: rgb(119, 119, 119);text-align: center;float: none;background-color: rgb(255, 255, 255);\">I'll create two variables like such</span></div><p><br/></p><!--StartFragment--><pre style=\"color: rgb(51, 51, 51);background-color: rgb(245, 245, 245);\"><code class=\"language-javascript\" style=\"color: inherit;background-color: transparent;\">var a = 2;<br/>var b = 59;<br/>var c = a + b;<br/><br/>console.log(c);</code></pre><!--EndFragment--><div><img src=\"//a.ilovecoding.org/img/install-nodejs-on-windows-mac7.png\" style=\"width: 100%;\"/><br/></div><p><br/>save it and now if I wrote node and the name of the file one more time, it printed the total value and hello world as shown below</p><p><img src=\"//a.ilovecoding.org/img/install-nodejs-on-windows-mac8.png\" style=\"width: 100%;\"/><br/></p><p>I hope you enjoyed this lesson, if you have any question, leave your comments below. I'll talk to you in the next lesson. Goodbye :)</p>",
    "createdMsec": 1.445807820043E+12,
    "updatedIso": {
      "$date": "2016-11-06T21:07:12.787Z"
    },
    "updatedMsec": 1.478466432787E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/118479461",
    "duration": "5:45",
    "access": 0,
    "createdIso": {
      "$date": "2015-10-25T21:17:00.043Z"
    },
    "technology": [
      "Node.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "57c65a191cbef70f008a10ee",
    "slug": "git-merge-conflict",
    "title": "How to Manually Resolve Merge Conflicts in Git",
    "subTitle": "Although Git is smart enough to Auto Resolve merge conflicts, There are times when a manual merge must be done by the developer. Lets see how to resolve merge code conflicts manually",
    "thumbnail": "git-merge-conflict.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472616985319E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:51:03.557Z"
    },
    "updatedMsec": 1.473043863558E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180695190",
    "duration": "5:10",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T04:16:25.318Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "57c65b231cbef70f008a10f0",
    "slug": "git-remote-multi",
    "title": "How to add multiple Git Remotes",
    "subTitle": "You can add multiple git remotes and share your project to multiple locations",
    "thumbnail": "git-remote-multi.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472617251286E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:55:45.652Z"
    },
    "updatedMsec": 1.473044145653E+12,
    "level": 2,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180822041",
    "duration": "3:53",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T04:20:51.286Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "57c6537d1cbef70f008a10e6",
    "slug": "git-start",
    "title": "Installing Git and Starting a Git Repo",
    "subTitle": "Let's get our hands dirty and start working with Git. We install Git, Source Tree and Initialize our first Git Repo",
    "thumbnail": "git-start.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472615293857E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:05:36.397Z"
    },
    "updatedMsec": 1.473041136401E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180691825",
    "duration": "5:04",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T03:48:13.856Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "58b3e0df4d0bd100102f06ba",
    "slug": "mailchimp-api",
    "title": "Consume MailChimp Web API",
    "subTitle": "Learn how to use Mail Chimp Web API",
    "thumbnail": "api4-mailchimp.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488183519186E+12,
    "updatedIso": {
      "$date": "2017-02-28T03:30:44.486Z"
    },
    "updatedMsec": 1.488252644486E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/204832685",
    "duration": "11:43",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-27T08:18:39.186Z"
    },
    "technology": [
      "API"
    ],
    "topic": [
      "API"
    ]
  },
  {
    "_id": "58b3e22d4d0bd100102f06bc",
    "slug": "book-search-app-google-books-api-part1",
    "title": "Project: Create a Book Search App with Google Books API - Part 1",
    "subTitle": "Learn how to practically make a book search app via Google Books API",
    "thumbnail": "api6-google-books-app-part1.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.488183853099E+12,
    "updatedIso": {
      "$date": "2017-02-28T03:36:27.299Z"
    },
    "updatedMsec": 1.488252987299E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/205809440",
    "duration": "15:54",
    "access": 0,
    "createdIso": {
      "$date": "2017-02-27T08:24:13.099Z"
    },
    "technology": [
      "Web API",
      "jQuery"
    ],
    "topic": [
      "Web API",
      "Projects"
    ]
  },
  {
    "_id": "5ab0318c0288fc00145e24d4",
    "slug": "expressjs-prerequisites",
    "title": "Prerequisites for the Express.js Course",
    "subTitle": "",
    "thumbnail": "express/express-1-prerequisite.jpg",
    "bodyContent": "",
    "createdMsec": 1.521496460887E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260483936",
    "duration": "1:28",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T21:54:20.887Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ],
    "updatedIso": {
      "$date": "2019-02-13T18:15:45.063Z"
    },
    "updatedMsec": 1.521498375722E+12
  },
  {
    "_id": "5a726e7fb736b600141cd226",
    "slug": "es6-let-const",
    "title": "Learning ES6: `let` and `const`",
    "subTitle": "Learn a new feature of JavaScript introduced in ES6 for more granular control over the variables we create",
    "thumbnail": "react/react8-es6-2-let-const.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517448831275E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-app/tree/5-let-const",
    "videoSource": "//player.vimeo.com/video/251885985",
    "duration": "3:51",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:33:51.275Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T20:25:38.049Z"
    },
    "updatedMsec": 1.522873538049E+12
  },
  {
    "_id": "5a726da8b736b600141cd224",
    "slug": "creating-react-component-with-class",
    "title": "Creating React Component with class and more features",
    "subTitle": "Learn how to create a full-featured React Component. This will include component specific data called `state`",
    "thumbnail": "react/react7-full-component-and-state.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517448616298E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-app/tree/3-class-component",
    "videoSource": "//player.vimeo.com/video/251885832",
    "duration": "7:04",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:30:16.298Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T20:25:06.16Z"
    },
    "updatedMsec": 1.52287350616E+12
  },
  {
    "_id": "5afae37b6be0670014043bdc",
    "slug": "first-react-native-app",
    "title": "Create your first React Native app & view it in iOS simulator",
    "subTitle": "",
    "thumbnail": "react-native/6-ios-simulator.jpg",
    "bodyContent": "",
    "createdMsec": 1.526391675196E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243486",
    "duration": "5:03",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:41:15.196Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5a727277b736b600141cd22f",
    "slug": "react-component-lifecycle-part2",
    "title": "The React Component Lifecycle - Part 2",
    "subTitle": "Learn what happens within a React component when its is being created",
    "thumbnail": "react/react13-lifecycle-2.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517449847624E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/253695146",
    "duration": "1:25",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:50:47.624Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:47:40.759Z"
    },
    "updatedMsec": 1.522864060759E+12
  },
  {
    "_id": "5afae2636be0670014043bd7",
    "slug": "installing-android-tools-on-mac-for-react-native-part-2",
    "title": "Installing Android tools on Mac for React Native - Part 2",
    "subTitle": "",
    "thumbnail": "react-native/5-2-jdk.jpg",
    "bodyContent": "",
    "createdMsec": 1.52639139512E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243139",
    "duration": "1:45",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:36:35.119Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:26:11.611Z"
    },
    "updatedMsec": 1.526469971611E+12
  },
  {
    "_id": "5ac3e7e4b9773a0014e29f42",
    "slug": "notetaking-passportjs-verify-func",
    "title": "Passport.js: Verify Function (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p23-passport-verify-func.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788324261E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893672",
    "duration": "6:35",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:45:24.261Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:16:00.628Z"
    }
  },
  {
    "_id": "5afb66346be0670014043bff",
    "slug": "make-loading-feature-in-react-native",
    "title": "Make loading feature in React Native",
    "subTitle": "",
    "thumbnail": "react-native/36-webapi-loading.jpg",
    "bodyContent": "",
    "createdMsec": 1.526425140434E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269266925",
    "duration": "3:57",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T22:59:00.434Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afb65a16be0670014043bfe",
    "slug": "web-api-call",
    "title": "Make API calls in your React Native app",
    "subTitle": "",
    "thumbnail": "react-native/35-webapi.jpg",
    "bodyContent": "",
    "createdMsec": 1.526424993407E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269266211",
    "duration": "10:19",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T22:56:33.407Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5b883502c665e40014cad628",
    "slug": "semantic-element-hw",
    "title": "Semantic Elements + Homework",
    "subTitle": "Learn about <main>, <header>, <footer>, <aside> and other elements with fancy (semantic) names + homework for you.",
    "createdIso": {
      "$date": "2018-08-30T18:18:42.827Z"
    },
    "createdMsec": 1.535653122827E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287103727",
    "duration": "4:26",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>Resources</h3><ul>\n  <li><a href=\"https://developermozilla.org/enUS/docs/Web/HTML/Element/video\"></a><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Content_sectioning\">HTML Elements Reference on Mozilla</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:13:35.914Z"
    },
    "updatedMsec": 1.5411795758E+12,
    "demoUrl": "demo/htmlcss2/24-semantic-element-hw",
    "sourceUrl": "source/htmlcss2/24-semantic-element-hw.zip"
  },
  {
    "_id": "5a74a53c22183100147c5db9",
    "slug": "project-building-a-timer-app-with-react-part2",
    "title": "Project: Building a Timer App with React - Part 2",
    "subTitle": "Let's build a practical Timer App with React.",
    "thumbnail": "react/react18-project-timer.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517593916584E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/253886234",
    "duration": "9:01",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:51:56.584Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:48:26.484Z"
    },
    "updatedMsec": 1.522864106484E+12
  },
  {
    "_id": "5ac3e616b9773a0014e29f39",
    "slug": "notetaking-enforcing-unique-email",
    "title": "Enforcing Unique Email (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p14-unique-email.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787862896E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262892893",
    "duration": "4:51",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:37:42.896Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:34.899Z"
    }
  },
  {
    "_id": "5ac3e04fb9773a0014e29f2c",
    "slug": "notetaking-project-setup",
    "title": "Project Setup (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p1-setup.jpg",
    "bodyContent": "",
    "createdMsec": 1.522786383727E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262891414",
    "duration": "6:05",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:13:03.726Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:05.49Z"
    },
    "updatedMsec": 1.522789292471E+12
  },
  {
    "_id": "57c658ed1cbef70f008a10ec",
    "slug": "git-tag",
    "title": "Git Tag: How and Why to use Git Tags",
    "subTitle": "Learn about How and When to use the Two Types of Git Tags, Lightweight Tag and Annotated Tag",
    "thumbnail": "git-tag.png",
    "demoUrl": "",
    "bodyContent": "<p></p>",
    "createdMsec": 1.472616685019E+12,
    "updatedIso": {
      "$date": "2016-09-05T02:41:15.378Z"
    },
    "updatedMsec": 1.473043275379E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/180827921",
    "duration": "7:14",
    "access": 0,
    "createdIso": {
      "$date": "2016-08-31T04:11:25.019Z"
    },
    "technology": [
      "Git"
    ],
    "topic": [
      "Git"
    ]
  },
  {
    "_id": "5afae3026be0670014043bdb",
    "slug": "installing-android-tools-on-mac-for-react-native-part-6",
    "title": "Installing Android tools on Mac for React Native - Part 6",
    "subTitle": "",
    "thumbnail": "react-native/5-6-avd.jpg",
    "bodyContent": "",
    "createdMsec": 1.526391554493E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243400",
    "duration": "4:04",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:39:14.493Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:26:33.688Z"
    },
    "updatedMsec": 1.526469993688E+12
  },
  {
    "_id": "5afaea196be0670014043bea",
    "slug": "jsx",
    "title": "Understanding JSX in React",
    "subTitle": "",
    "thumbnail": "react-native/17-2-jsx.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393369966E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269248293",
    "duration": "6:52",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:09:29.966Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afae7836be0670014043be0",
    "slug": "first-react-component",
    "title": "Create your first React component",
    "subTitle": "",
    "thumbnail": "react-native/10-first-component.jpg",
    "bodyContent": "",
    "createdMsec": 1.526392707084E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269244144",
    "duration": "7:55",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:58:27.084Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5b882629c665e40014cad622",
    "slug": "emmet-comments",
    "title": "Emmet shortcuts and code comments",
    "subTitle": "Speed up your coding with Emmet Shortcuts, plus see how to add notes in your code.",
    "createdIso": {
      "$date": "2018-08-30T17:15:21.109Z"
    },
    "createdMsec": 1.535649321109E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972638",
    "duration": "3:37",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:12:47.069Z"
    },
    "updatedMsec": 1.541178781755E+12
  },
  {
    "_id": "5b8834d5c665e40014cad626",
    "slug": "img",
    "title": "Adding images with the <img> element",
    "subTitle": "Learn to use the <img> element and add images to your webpages",
    "createdIso": {
      "$date": "2018-08-30T18:17:57.173Z"
    },
    "createdMsec": 1.535653077173E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287103570",
    "duration": "5:11",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:13:16.744Z"
    },
    "updatedMsec": 1.541179549856E+12,
    "bodyContent": "<h3>Resources</h3><ul><li><a href=\"https://developermozilla.org/enUS/docs/Web/HTML/Element/img\">&lt;img&gt; Reference on Mozilla</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/22-img",
    "sourceUrl": "source/htmlcss2/22-img.zip"
  },
  {
    "_id": "5ac3e2e9b9773a0014e29f31",
    "slug": "notetaking-creating-note",
    "title": "Creating Note (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p6-crud.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787049642E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/263040922",
    "duration": "6:13",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:24:09.641Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:17.23Z"
    },
    "updatedMsec": 1.523383551215E+12
  },
  {
    "_id": "5afb66706be0670014043c00",
    "slug": "creating-different-screens-in-a-react-native-app-using-react-navigation",
    "title": "Creating different screens in a React Native app (using React Navigation)",
    "subTitle": "",
    "thumbnail": "react-native/37-react-navigation.jpg",
    "bodyContent": "",
    "createdMsec": 1.526425200759E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269267188",
    "duration": "7:35",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:00:00.759Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5ac3e6fbb9773a0014e29f3d",
    "slug": "notetaking-login-check-password",
    "title": "Login: Check Password (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p18-login-check-password.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788091934E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/263041308",
    "duration": "3:27",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:41:31.933Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:42.352Z"
    },
    "updatedMsec": 1.522790033364E+12
  },
  {
    "_id": "5a726c85b736b600141cd221",
    "slug": "setting-up-a-real-react-development-environment",
    "title": "Setting up a real React Development Environment",
    "subTitle": "Setup the tools for an optimal React application development workflow",
    "thumbnail": "react/react4-setup.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517448325257E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-app/tree/0-setup",
    "videoSource": "//player.vimeo.com/video/251885506",
    "duration": "6:38",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:25:25.257Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T20:24:16.893Z"
    },
    "updatedMsec": 1.522873456894E+12
  },
  {
    "_id": "5afb67236be0670014043c01",
    "slug": "react-navigation-go-from-screen-to-screen-in-a-react-native-app",
    "title": "React-Navigation: Go from screen to screen in a React-Native app",
    "subTitle": "",
    "thumbnail": "react-native/38-react-navigation-link.jpg",
    "bodyContent": "",
    "createdMsec": 1.526425379149E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269272103",
    "duration": "4:56",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:02:59.149Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5b88260ec665e40014cad620",
    "slug": "sublist-hw",
    "title": "Making nested lists + Homework",
    "subTitle": "Learn to make nested list + homework for your learning.",
    "createdIso": {
      "$date": "2018-08-30T17:14:54.03Z"
    },
    "createdMsec": 1.53564929403E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972550",
    "duration": "4:31",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:12:28.851Z"
    },
    "updatedMsec": 1.541178761306E+12,
    "bodyContent": "<h3>Resources</h3><ul>\n  <li><a href=\"https://developermozilla.org/enUS/docs/Web/HTML/Element/ul\">&lt;ul&gt; Reference on Mozilla</a></li>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol\">&lt;ol&gt; Reference on Mozilla</a></li>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li\">&lt;li&gt; Reference on Mozilla</a></li>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\">HTML Reference on Mozilla</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/16-sublist-hw",
    "sourceUrl": "source/htmlcss2/16-sublist-hw.zip"
  },
  {
    "_id": "5b37b3bcd14d27001482d254",
    "slug": "js-intro-part2",
    "title": "Basics of JavaScript - Part 2",
    "subTitle": "Learn the basics of JavaScript in a way that its going to make sense this time.",
    "demoUrl": "http://awesome-site.netlify.com/play.html",
    "createdIso": {
      "$date": "2018-06-30T16:45:48.449Z"
    },
    "createdMsec": 1.530377148452E+12,
    "updatedIso": {
      "$date": "2018-06-30T16:54:15.868Z"
    },
    "updatedMsec": 1.530377655869E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "277741466",
    "duration": "5:26",
    "access": 0,
    "technology": [
      "Javascript"
    ],
    "topic": [
      "Javascript",
      "Email Course"
    ],
    "bodyContent": "<div class=\"col12\">\nThis is part 2 of the lesson<br />\n<a class=\"btn btn-secondary btn-lg\" href=\"https://ilovecodingorg/lessons/js-intro\">Go back to part 1 of this lesson</a>\n</div>"
  },
  {
    "_id": "5b88359ac665e40014cad62e",
    "slug": "css-class-selectors",
    "title": "CSS class selector (. dot sign)",
    "subTitle": "Target elements by their class attribute. See how.",
    "createdIso": {
      "$date": "2018-08-30T18:21:14.379Z"
    },
    "createdMsec": 1.535653274379E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104211",
    "duration": "3:52",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:15:31.329Z"
    },
    "updatedMsec": 1.541179742973E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/29-30-basic-selectors",
    "sourceUrl": "source/htmlcss2/29-30-basic-selectors.zip"
  },
  {
    "_id": "5a727549b736b600141cd235",
    "slug": "react-router-intro",
    "title": "React-Router: Making Pages in a React App",
    "subTitle": "Learn how to use the 'react-router' library to make pages in our React app",
    "thumbnail": "react/react19-react-router-intro.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517450569219E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-router",
    "videoSource": "//player.vimeo.com/video/253696362",
    "duration": "6:07",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T02:02:49.219Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T22:09:38.162Z"
    },
    "updatedMsec": 1.522879778162E+12
  },
  {
    "_id": "5a7270beb736b600141cd22b",
    "slug": "all-about-props-in-react",
    "title": "All about Props in React",
    "subTitle": "Learn all about 'Props' in React. The way to send data into a component",
    "thumbnail": "react/react10-props.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517449406857E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-props",
    "videoSource": "//player.vimeo.com/video/253694745",
    "duration": "8:44",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:43:26.857Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T21:17:36.336Z"
    },
    "updatedMsec": 1.522876656336E+12
  },
  {
    "_id": "5a74a6cc22183100147c5dc1",
    "slug": "project-song-search-app-part4",
    "title": "Project: Building a Song Search App with React - Part 4",
    "subTitle": "Learn how to build a fully functional song search app with React. We'll integrate our app with the iTunes API to find song",
    "thumbnail": "react/react21-project-song-search.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517594316906E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-project-song-search",
    "videoSource": "//player.vimeo.com/video/254002297",
    "duration": "7:37",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:58:36.906Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End",
      "Project"
    ],
    "updatedIso": {
      "$date": "2018-04-04T22:19:01.88Z"
    },
    "updatedMsec": 1.52288034188E+12
  },
  {
    "_id": "5ab0332a0288fc00145e24d8",
    "slug": "expressjs-building-blocks",
    "title": "Building Blocks of Express.js",
    "subTitle": "",
    "thumbnail": "express/express-5-building-blocks.jpg",
    "bodyContent": "",
    "createdMsec": 1.521496874173E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260485873",
    "duration": "0:55",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:01:14.173Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ],
    "updatedIso": {
      "$date": "2019-02-13T18:17:00.216Z"
    }
  },
  {
    "_id": "5afae72a6be0670014043bde",
    "slug": "react-native-project-files",
    "title": "Understanding React Native project files",
    "subTitle": "",
    "thumbnail": "react-native/8-project-files.jpg",
    "bodyContent": "",
    "createdMsec": 1.526392618275E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243644",
    "duration": "5:14",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:56:58.275Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5ab036ed0288fc00145e24e4",
    "slug": "expressjs-static-files",
    "title": "Serving Static Files with Express.js",
    "subTitle": "",
    "thumbnail": "express/express-16-static-files.jpg",
    "bodyContent": "",
    "createdMsec": 1.521497837298E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260488797",
    "duration": "4:44",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:17:17.298Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5afb760107ff3d0014610ff7",
    "slug": "crypto-price-checker-refresh-the-price-every-30-seconds",
    "title": "Crypto Price Checker: Refresh the price every 30 seconds",
    "subTitle": "",
    "thumbnail": "react-native/54-crypto-interval.jpg",
    "bodyContent": "",
    "createdMsec": 1.526429185487E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269277326",
    "duration": "8:06",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-16T00:06:25.487Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5ab01d330288fc00145e24cd",
    "slug": "intro-mongodb",
    "title": "Introduction to MongoDB",
    "subTitle": "Introduction to MongoDB - A JSON like database",
    "thumbnail": "mongodb/mongodb-6-mongodb-intro.jpg",
    "bodyContent": "",
    "createdMsec": 1.521491251397E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260483617",
    "duration": "3:21",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:27:31.397Z"
    },
    "technology": [
      "Database"
    ],
    "topic": [
      "Database"
    ],
    "updatedIso": {
      "$date": "2018-03-19T20:44:52.373Z"
    },
    "updatedMsec": 1.521492292373E+12
  },
  {
    "_id": "5afb6f5b07ff3d0014610fea",
    "slug": "react-navigation-additional-navigation-features",
    "title": "React-Navigation: Additional navigation features",
    "subTitle": "",
    "thumbnail": "react-native/43-react-navigation-navigators.jpg",
    "bodyContent": "",
    "createdMsec": 1.526427483694E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269276139",
    "duration": "3:18",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:38:03.694Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5a726f39b736b600141cd228",
    "slug": "es6-template-literals",
    "title": "Learning ES6: `Template Literals`",
    "subTitle": "Learn a new feature of JavaScript introduced in ES6 for embedding expressions inside strings",
    "thumbnail": "react/react8-es6-4-template-literals.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517449017419E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-app/tree/7-template-literals",
    "videoSource": "//player.vimeo.com/video/253694448",
    "duration": "3:01",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:36:57.419Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T20:26:10.084Z"
    },
    "updatedMsec": 1.522873570084E+12
  },
  {
    "_id": "5ab01e770288fc00145e24d0",
    "slug": "mongodb-play",
    "title": "Creating Database, Collections & Documents with MongoDB",
    "subTitle": "",
    "thumbnail": "mongodb/mongodb-9-create-read.jpg",
    "bodyContent": "",
    "createdMsec": 1.521491575591E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260484674",
    "duration": "6:57",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:32:55.589Z"
    },
    "technology": [
      "Database"
    ],
    "topic": [
      "Database"
    ]
  },
  {
    "_id": "5a7272b9b736b600141cd230",
    "slug": "react-component-lifecycle-part3",
    "title": "The React Component Lifecycle - Part 3",
    "subTitle": "Learn what happens within a React component when state changes",
    "thumbnail": "react/react13-lifecycle-3.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517449913758E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-lifecycle/tree/state-change",
    "videoSource": "//player.vimeo.com/video/253695182",
    "duration": "3:29",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:51:53.758Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T21:37:02.792Z"
    },
    "updatedMsec": 1.522877822792E+12
  },
  {
    "_id": "5afb75c607ff3d0014610ff5",
    "slug": "crypto-price-checker-making-button-open-the-drawer-menu",
    "title": "Crypto Price Checker: Making button open the drawer menu",
    "subTitle": "",
    "thumbnail": "react-native/52-crypto-menu-functional.jpg",
    "bodyContent": "",
    "createdMsec": 1.526429126482E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269277169",
    "duration": "1:13",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-16T00:05:26.482Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5ac3e72cb9773a0014e29f3e",
    "slug": "notetaking-login-issue-accesstoken",
    "title": "Login: Issue Access Token (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p19-login-issue-token.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788140625E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/263041700",
    "duration": "7:19",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:42:20.625Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:44.333Z"
    },
    "updatedMsec": 1.522950126499E+12
  },
  {
    "_id": "5ac3e5deb9773a0014e29f38",
    "slug": "notetaking-validate-register-user",
    "title": "Validating input when registering user (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p13-register-validation.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787806265E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262892806",
    "duration": "2:18",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:36:46.264Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:32.562Z"
    }
  },
  {
    "_id": "5ab01c660288fc00145e24cc",
    "slug": "sql-nosql",
    "title": "SQL vs NoSQL Databases",
    "subTitle": "",
    "thumbnail": "mongodb/mongodb-5-sql-nosql.jpg",
    "bodyContent": "",
    "createdMsec": 1.521491046736E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260483493",
    "duration": "3:09",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:24:06.735Z"
    },
    "technology": [
      "Database"
    ],
    "topic": [
      "Database"
    ],
    "updatedIso": {
      "$date": "2018-11-29T02:33:44.838Z"
    },
    "updatedMsec": 1.543458824839E+12
  },
  {
    "_id": "5ab01f1e0288fc00145e24d2",
    "slug": "mongodb-delete",
    "title": "Deleting Database, Collections & Documents with MongoDB",
    "subTitle": "",
    "thumbnail": "mongodb/mongodb-11-delete.jpg",
    "bodyContent": "",
    "createdMsec": 1.521491742737E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260485208",
    "duration": "2:41",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:35:42.737Z"
    },
    "technology": [
      "Database"
    ],
    "topic": [
      "Database"
    ]
  },
  {
    "_id": "5b882635c665e40014cad623",
    "slug": "meta-elements",
    "title": "<meta> elements and what they are about",
    "subTitle": "What is a <meta> element and what does it do?",
    "createdIso": {
      "$date": "2018-08-30T17:15:33.93Z"
    },
    "createdMsec": 1.53564933393E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972663",
    "duration": "3:19",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "demoUrl": "demo/htmlcss2/20-meta-continued",
    "sourceUrl": "source/htmlcss2/20-meta-continued.zip",
    "updatedIso": {
      "$date": "2019-02-16T04:12:55.288Z"
    },
    "updatedMsec": 1.541179130214E+12,
    "bodyContent": "<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5ac3e6b0b9773a0014e29f3b",
    "slug": "notetaking-login-validate-input",
    "title": "Login: Validating Input (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p16-login-validation.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788016578E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893365",
    "duration": "3:33",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:40:16.577Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:38.8Z"
    }
  },
  {
    "_id": "5ab032a50288fc00145e24d6",
    "slug": "frontend-backend",
    "title": "Understanding How Front-End & Back-End Work",
    "subTitle": "",
    "thumbnail": "express/express-3-fe-be-work.jpg",
    "bodyContent": "",
    "createdMsec": 1.52149674164E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260484928",
    "duration": "6:34",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T21:59:01.64Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ],
    "updatedIso": {
      "$date": "2019-02-13T18:16:49.671Z"
    }
  },
  {
    "_id": "5b62faca68881b00142e56c3",
    "slug": "how-better",
    "title": "How is iLoveCoding different than cheap courses and expensive bootcamps?",
    "subTitle": "Let's objectively compare iLoveCoding with all the other options you have available to you. Let's consider cost and benefits of each",
    "thumbnail": "",
    "bodyContent": "<p>One question you may be asking yourself is why should you pick iLoveCoding when you have so many different options of getting multiple courses, getting multiple books or even joining a coding bootcamp.</p><p>And that's a very good question. You see, I started iLoveCoding way before this \"learned how to code\" thing was so popular or coding bootcamps was a mainstream thing. I was struggling myself to learn how to code because I was trying to launch my own startups and I was struggling.</p><p>I was learning from multiple developers, I was getting multiple courses and nothing was working for me.</p><p>So when I was struggling I decided that once I figured this thing out I'm going to teach it to others so others don't have to struggle. So I created iLoveCoding and till this day there's nothing like it.</p><p>There's no one website that goes from nothing takes you from nothing to a complete front-end and full-stack developer in a systematic way.</p><p>So let me share with you a few things that are different about iLoveCoding that you will not find in other places.</p><h3>#1. iLoveCoding is Complete</h3>\n<p>There is a reason why learning how to code is broken. Cheap online courses are incomplete and focus on only a few parts of becoming a programmer.</p>\n<p>On the other hand coding bootcamps focus on too many things and only cover the surface. If the coding bootcamp is any good, they are super expensive and overwhelming for students.</p>\n<p>iLoveCoding solves both of these problems. iLoveCoding takes you from a newbie to a confident software developer via the <a href=\"/curriculum\">Perfect Curriculum</a></p>\n<p><a href=\"/curriculum\">The Perfect Curriculum</a> covers the foundations of programming and web technology. You learn the basics of HTML, CSS, JavaScript and learn how to build simple and complex web and mobile applications.</p>\n<p>You learn how to think like a developer so you can architect the perfect app.</p><h3>#2. JavaScript Focus - Right Technologies</h3>\n<p>Next, I teach some JavaScript frameworks. These frameworks are in high-demand and will help you make modern web and mobile apps. You will learn frameworks like Express.js, Node.js, React, jQuery, and more. These are the same technologies used by PayPal, Facebook, Airbnb, Tesla, Microsoft, and many other smaller companies.</p><p>One of the biggest problems in the learn to code space is that different courses and bootcamps are pushing their own agenda and teaching the wrong programming languages. You see all programming languages are good, however, if you want to build different kinds of apps and have a profitable long-term career than JavaScript should be your first programming language. I go in detail why this is important here</p><p>With iLoveCoding, you learn JavaScript and its popular frameworks.</p><p>This is the fastest and the smartest way to build fully functional Web Apps, Websites, Mobile Apps and even Desktop Apps.</p><p>No other programming language can match this capability.</p><p>JavaScript is the most versatile programming language, and is the most popular as well - Meaning! getting a job is easier.</p><h3>#3. Simple Explanations</h3><p>iLoveCoding takes a fundamentals-first approach and simple explanations.</p><p>You see coding can become very difficult because it has a lot of small new concepts that are difficult to grasp. They look complicated, they sound complicated but when explained simply, with examples that information will be communicated to you and you are going to understand it.</p><p>Firstly not all the resources will teach you these concepts, and the ones that do, they'll explain thing to you in a not so simple way and without giving helpful examples.</p><p>iLoveCoding does that. I teach you a new concept and then I pair it with a practical example. So that information is digested for you.</p>\n<p>Most college professors, bootcamp instructors, and even online courses miss this. They use complicated terminology and skip through important details. I don't do that to you.<br></p><p>I believe in the saying: <br></p><blockquote><i>\"If you can't explain it simply, you don't understand it yourself\" - Albert Einstein</i></blockquote><p>You see, all knowledge is acquired incrementally. Before I introduce a new terminology (or a new concept), I will first explain to you what that is. Once you understand that, then and only then I will proceed on to teaching you other things.</p><p>Secondly, I repeat and re-clarifying the concepts that I teach you. For instance, I will introduce a programming concept in video 7, and then let's say that the same concept is being used in video 12, I will recap that concept quickly and then proceed. This way your knowledge is refreshed along the way.</p><h3>#4. Build Real-world Projects</h3><p>While learning we build a ton of projects. There is a dedicated section called Practice Projects. These are video training on how to apply your learning to build real-world apps and features. You see, the fundamentals of web and programming do not change, but it's eye-opening to see HOW to apply those same programming fundamentals to build impressive apps. That's where Practice Projects comes in. Select any Practice Project, watch the lessons and then try to build the same app while following along.</p><p>When you copy/follow along these lessons, you will subconsciously internalize my thought process and see how to think and build like a developer.</p><h3>#5 Bite-sized training<br></h3><p>That brings me to the next point. There's so much information to learn, so I break my videos down into smaller chunks so you are making linear progress. I have videos most of them are like 5 minutes long. Some are smaller, some are longer because some concepts take longer to explain.<br></p><p>If there is a concept which has multiple parts, I would break that video down into a one, two, three, four, or five different parts, depending on how many different aspects are there for a particular concept.</p><p>I take this information piece by piece and I explain it to you in a simple manner so you can understand it and you can also make progress with one piece at a time.</p><p>So even if you have a short break in between work or you have some time you can just watch one or two videos and you constantly make progress. So the videos are bite-sized.</p><p>No assumptions of previous knowledge</p><h3>#6 Cheatsheets + Homework</h3><p>All the courses come with cheat sheets and homework so you are constantly reminded of the main concepts that you learn in a cheat sheet format and you can always come back to it. And also homework, so once you get this information, you will have to apply that information with your own mind. So you're actually activating your mind. You're putting your thoughts and your mind into those new concepts that you learn.<br></p><h3>#7 True Mentor Support + Student Community</h3><p>Listen, the internet is the home of all the knowledge the world has to offer. The reality is that Google doesn't always serve us, nor does all the blogs and articles we have access to. If you want to 3x-10x your speed of learning, and achieve your goals faster, a mentor would be invaluable to your journey.<br><br>Here is the key - You must and must choose a mentor who has been there, done that. Someone who has been through the journey and achieved the goals you are after.<br><br><strong>CAUTION:</strong> DO NOT listen to people who are just talkers. People who can talk smart, act smart and can give smart advice but they have never achieved the goals you are after. Such people will hurt you more than they will help since they do not have the practical experience.<br><br>At iLoveCoding, you get true mentorship from me. I am a self-taught software developer who went from a being a marketer to a project manager to a Software Developer. I have since built software for CVS Health, United Airlines (and others) + I have taught programming to people who work at Twitter, Sony, Intuit, CVS, Citibank (and other).<br><br>Whenever you are stuck with a coding problem, interview prep, resume or portfolio help, you can always reach out to me, and I'll assist you as a true mentor. <br><br>A mentor's greatest joy is to see his students succeed.<br></p><h3>#8 Career Support</h3><p>Half of iLoveCoding Students want to start their own business and build their app ideas; Others want a career as a software developer. No matter what your goal iLoveCoding will assist you in your career.<br><br>Here is how:</p><ul><li>✅Get app architecture and design advice/feedback</li><li>✅Get interview preparation help</li><li>✅Get resume support</li><li>✅Get advice on planning your career move from your current situation</li><li>✅Get to know the current job market situation and know what to expect</li><li>✅Get salary expectation and negotiation advice</li><li>✅Get to know how to build a portfolio that will impress</li></ul><p>Having a mentor just cuts your time and you are able to shortcut your way to success.</p><p><br></p>\n\n<h3>A quick comparison chart: iLoveCoding vs Cheap Courses vs Bootcamps</h3>\n<table class=\"table text-center\">\n    <thead class=\"bg-gray-200 bold strong\">\n        <tr>\n            <th width=\"20%\" class=\"\"></th>\n            <th width=\"27%\" class=\"h5 align-middle border-right border-left border-primary alert-primary\">iLoveCoding Premium<br></th>\n            <th width=\"27%\" class=\"h5 align-middle\">Expensive Bootcamps <br>\n                <small>(Thinkful, General Assembly, Hack Reactor, etc.)</small>\n            </th>\n            <th width=\"27%\" class=\"h5 align-middle\">Cheap Courses <br>\n                <small>(Udemy, Codecademy, Lynda, etc.)</small>\n            </th>\n        </tr>\n    </thead>\n    <tbody class=\"bg-white\">\n        <tr>\n            <td class=\"text-right\"><strong>Cost</strong></td>\n            <td class=\"border-right border-left border-primary border-top-0\">$199/mo</td>\n            <td>$9500 - $19000</td>\n            <td>$12-$1000</td>\n        </tr>\n        <tr class=\"bg-light\">\n            <td class=\"text-right\"><strong>Complete Training</strong></td>\n            <td class=\"border-right border-left border-primary border-top-0\"><checkmark></checkmark> Yes</td>\n            <td><checkmark></checkmark> Yes</td>\n            <td><span class=\"oi oi-x text-danger\" title=\"x\" aria-hidden=\"true\"></span> No, you'll have to buy multiple courses to get the full information</td>\n        </tr>\n        <tr>\n            <td class=\"text-right\"><strong>Focus on the right material</strong></td>\n            <td class=\"border-right border-left border-primary border-top-0\"><checkmark></checkmark> Yes</td>\n            <td>❓ Maybe <br>Some bootcamps focus on the wrong technologies like Ruby, Rails, Python and the like, and only lightly touch the important topics.</td>\n            <td>❓ Maybe<br>Students have to find the right material by themselves constantly.</td>\n        </tr>\n        <tr class=\"bg-light\">\n            <td class=\"text-right\"><strong>Live mentor support</strong></td>\n            <td class=\"border-right border-left border-primary border-top-0\"><checkmark></checkmark>Yes<br>(Premium: Live Video Call + Slack Chat; Pro: Slack Chat only)</td>\n            <td><checkmark></checkmark> Yes</td>\n            <td><span class=\"oi oi-x text-danger\" title=\"x\" aria-hidden=\"true\"></span> No</td>\n        </tr>\n        <tr>\n            <td class=\"text-right\"><strong>Bite-sized Training</strong></td>\n            <td class=\"border-right border-left border-primary border-top-0\"><checkmark></checkmark> Yes</td>\n            <td><span class=\"oi oi-x text-danger\" title=\"x\" aria-hidden=\"true\"></span> No</td>\n            <td>❓ Maybe <br>(depends on the course author)</td>\n        </tr>\n        <tr class=\"bg-light\">\n            <td class=\"text-right\"><strong>Cheat sheets</strong></td>\n            <td class=\"border-right border-left border-primary border-top-0\"><checkmark></checkmark> Yes</td>\n            <td><span class=\"oi oi-x text-danger\" title=\"x\" aria-hidden=\"true\"></span> No</td>\n            <td><span class=\"oi oi-x text-danger\" title=\"x\" aria-hidden=\"true\"></span> No</td>\n        </tr>\n        <tr>\n            <td class=\"text-right\"><strong>Homework Assignments</strong></td>\n            <td class=\"border-right border-left border-primary border-top-0\"><checkmark></checkmark> Yes</td>\n            <td><checkmark></checkmark> Yes</td>\n            <td>❓ Maybe</td>\n        </tr>\n        <tr class=\"bg-light\">\n            <td class=\"text-right\"><strong>Mentor: Portfolio Help</strong></td>\n            <td class=\"border-right border-left border-primary border-top-0\"><checkmark></checkmark> Yes</td>\n            <td><checkmark></checkmark> Yes</td>\n            <td><span class=\"oi oi-x text-danger\" title=\"x\" aria-hidden=\"true\"></span> No</td>\n        </tr>\n        <tr>\n            <td class=\"text-right\"><strong>Mentor: Career Help</strong></td>\n            <td class=\"border-right border-left border-primary border-top-0\"><checkmark></checkmark> Yes</td>\n            <td><checkmark></checkmark> Yes</td>\n            <td><span class=\"oi oi-x text-danger\" title=\"x\" aria-hidden=\"true\"></span> No</td>\n        </tr>\n        <tr class=\"bg-light\">\n            <td class=\"text-right\"><strong>Intangibles</strong></td>\n            <td class=\"text-left border-right border-left border-primary border-top-0 border-bottom\">\n                <checkmark></checkmark> Simple Explanations <br>\n                <checkmark></checkmark> Focus on fundamentals<br>\n                <checkmark></checkmark> Real-world examples<br>\n                <checkmark></checkmark> Practice Projects<br>\n                <checkmark></checkmark> Practical advice vs Generic advice</td>\n            <td>❓ Maybe</td>\n            <td>❓ Maybe</td>\n        </tr>\n    </tbody>\n</table>",
    "createdIso": {
      "$date": "2018-08-02T12:36:26.056Z"
    },
    "createdMsec": 1.533213386056E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "311500900",
    "duration": "3:11",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      "question"
    ],
    "updatedIso": {
      "$date": "2019-09-02T20:09:53.333Z"
    },
    "updatedMsec": 1.544726320917E+12
  },
  {
    "_id": "5ac3e6d3b9773a0014e29f3c",
    "slug": "notetaking-login-find-user",
    "title": "Login: Find User (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p17-login-find-user.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788051152E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893490",
    "duration": "3:15",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:40:51.152Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:40.147Z"
    }
  },
  {
    "_id": "5ab0339c0288fc00145e24d9",
    "slug": "first-expressjs-app",
    "title": "Building Your First Express.js App",
    "subTitle": "",
    "thumbnail": "express/express-6-0-first-app.jpg",
    "bodyContent": "",
    "createdMsec": 1.521496988894E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260485912",
    "duration": "6:08",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:03:08.894Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ],
    "updatedIso": {
      "$date": "2019-02-13T18:17:06.552Z"
    },
    "updatedMsec": 1.543458786413E+12
  },
  {
    "_id": "5ab037960288fc00145e24e6",
    "slug": "expressjs-template-engines",
    "title": "Using Template Engines to Create Traditional Sites with Express.js",
    "subTitle": "",
    "thumbnail": "express/express-18-templates.jpg",
    "bodyContent": "",
    "createdMsec": 1.521498006445E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260490201",
    "duration": "12:04",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:20:06.445Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5afae2876be0670014043bd8",
    "slug": "installing-android-tools-on-mac-for-react-native-part-3",
    "title": "Installing Android tools on Mac for React Native - Part 3",
    "subTitle": "",
    "thumbnail": "react-native/5-3-android-studio.jpg",
    "bodyContent": "",
    "createdMsec": 1.526391431208E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243194",
    "duration": "2:51",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:37:11.208Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:26:17.648Z"
    },
    "updatedMsec": 1.526469977648E+12
  },
  {
    "_id": "5ac3e862b9773a0014e29f45",
    "slug": "notetaking-passportjs-apply-strategy",
    "title": "Passport.js: Apply Strategy Everywhere (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p26-passport-middleware.jpg",
    "bodyContent": "",
    "createdMsec": 1.5227884507E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893764",
    "duration": "3:57",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:47:30.7Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:16:12.224Z"
    }
  },
  {
    "_id": "5afae7546be0670014043bdf",
    "slug": "react-vs-react-native",
    "title": "Understanding React vs React Native",
    "subTitle": "",
    "thumbnail": "react-native/9-react-vs-native.jpg",
    "bodyContent": "",
    "createdMsec": 1.526392660043E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243951",
    "duration": "4:48",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:57:40.043Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afae68e6be0670014043bdd",
    "slug": "react-native-app-android-emulator",
    "title": "Run your React Native app in Android Emulator",
    "subTitle": "",
    "thumbnail": "react-native/7-android-emulator.jpg",
    "bodyContent": "",
    "createdMsec": 1.526392462182E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243579",
    "duration": "3:11",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:54:22.182Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afb6f3b07ff3d0014610fe9",
    "slug": "react-navigation-creating-nested-routes",
    "title": "React-Navigation: Creating nested routes",
    "subTitle": "",
    "thumbnail": "react-native/42-react-navigation-nested-stack.jpg",
    "bodyContent": "",
    "createdMsec": 1.52642745196E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269275420",
    "duration": "3:34",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:37:31.96Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afae7bb6be0670014043be1",
    "slug": "nature-of-react",
    "title": "Understanding the nature of React",
    "subTitle": "",
    "thumbnail": "react-native/11-react-nature-nesting.jpg",
    "bodyContent": "",
    "createdMsec": 1.5263927636E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269244686",
    "duration": "4:59",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:59:23.6Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afae7dc6be0670014043be2",
    "slug": "props-in-react",
    "title": "Understanding Props in React",
    "subTitle": "",
    "thumbnail": "react-native/12-props.jpg",
    "bodyContent": "",
    "createdMsec": 1.526392796184E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269245025",
    "duration": "5:16",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:59:56.184Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T00:13:08.283Z"
    },
    "updatedMsec": 1.526429588283E+12
  },
  {
    "_id": "5ab0363f0288fc00145e24e1",
    "slug": "expressjs-dynamic-routes",
    "title": "Creating Dynamic Routes with Express.js",
    "subTitle": "",
    "thumbnail": "express/express-13-dynamic-routes.jpg",
    "bodyContent": "",
    "createdMsec": 1.5214976633E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260487865",
    "duration": "4:19",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:14:23.3Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5afaeab66be0670014043bed",
    "slug": "state",
    "title": "Understanding State in React",
    "subTitle": "",
    "thumbnail": "react-native/20-state.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393526074E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269249141",
    "duration": "4:47",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:12:06.074Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afb75a707ff3d0014610ff4",
    "slug": "crypto-price-checker-creating-the-menu-button",
    "title": "Crypto Price Checker: Creating the menu button",
    "subTitle": "",
    "thumbnail": "react-native/51-crypto-menu-button.jpg",
    "bodyContent": "",
    "createdMsec": 1.526429095892E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "269277007",
    "duration": "5:30",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-16T00:04:55.892Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-09-08T03:55:28.929Z"
    },
    "updatedMsec": 1.536378928929E+12
  },
  {
    "_id": "5afb758a07ff3d0014610ff3",
    "slug": "crypto-price-checker-advance-passing-of-props-to-components",
    "title": "Crypto Price Checker: Advance passing of props to components",
    "subTitle": "",
    "thumbnail": "react-native/50-crypto-props.jpg",
    "bodyContent": "",
    "createdMsec": 1.526429066122E+12,
    "level": 2,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269743592",
    "duration": "4:10",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-16T00:04:26.122Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:03:10.061Z"
    },
    "updatedMsec": 1.526468590062E+12
  },
  {
    "_id": "5b881eefc665e40014cad614",
    "slug": "whats-html",
    "title": "What is HTML Really?",
    "subTitle": "All websites are built with HTML - lets see fundamentally what is HTML really.",
    "createdIso": {
      "$date": "2018-08-30T16:44:31.221Z"
    },
    "createdMsec": 1.535647471221E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286971745",
    "duration": "3:16",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:02:35.913Z"
    },
    "updatedMsec": 1.541178571613E+12,
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b881f10c665e40014cad616",
    "slug": "html-elements",
    "title": "HTML Elements",
    "subTitle": "HTML has only ONE feature - Elements. Lets see what elements are all about.",
    "createdIso": {
      "$date": "2018-08-30T16:45:04.827Z"
    },
    "createdMsec": 1.535647504827E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286971864",
    "duration": "7:20",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2021-06-06T00:23:19.353Z"
    },
    "updatedMsec": 1.541178588494E+12,
    "demoUrl": "demo/htmlcss2/6-elements",
    "sourceUrl": "source/htmlcss2/6-elements.zip"
  },
  {
    "_id": "5b881f1bc665e40014cad617",
    "slug": "html-elements-continued",
    "title": "HTML Elements - Continued",
    "subTitle": "...Continuation of the lesson on HTML Elements.",
    "createdIso": {
      "$date": "2018-08-30T16:45:15.633Z"
    },
    "createdMsec": 1.535647515633E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286971918",
    "duration": "3:36",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<hr>\n<h2>Lesson Transcript</h2>\n\n<p>There is just one more thing you need to know about HTML elements syntax, and that is in the cheat sheet. So if you simply scroll down, that is the last rule, and that is that some elements do not have a closing tag but they are self-closing.</p>\n<p>The general rule for HTML elements is that they have a closing tag. But some exceptions like <code>&lt;img&gt;</code>, <code>&lt;br&gt;</code>, <code>&lt;hr&gt;</code>, <code>&lt;meta&gt;</code>, and <code>&lt;input&gt;</code>, do not have closing tags and hence, do not have children elements.<br>They usually follow this format:</p>\n<p><code>&lt;name attribute=\"value\"/&gt;</code></p>\n<p>\tthe <q>/</q> denotes that it is a self-closing tag.</p> \n\n<h3>The &lt;br /&gt; tag</h3>\n\n<p>The <code>&lt;br&gt;</code> tag basically is a line-break (br stands for <em>break row</em>). If you want to have a space between 2 paragraphs for example, you need to use a <code>&lt;br&gt;</code> tag. Just manually trying to do this by pressing enter won't have any results in your web page, the same works for multiple spaces. See this example:</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;p id=\"first-para\"&gt;\n  this is the text       for the paragraph.\n  &lt;span&gt;\n    this is some more text\n  &lt;/span&gt;\n  &lt;span&gt;\n    sadjalsdkjsa\n  &lt;/span&gt;\n&lt;/p&gt;\n</pre>\n\n<p>The code above will result in this:</p>\n\n<img src=\"//a.ilovecoding.org/thumb/htmlcss2/element-br-before.jpg\" class=\"border img-fluid\" alt=\"example before using <br /> element\">\n\n<p>We can clearly see that all the extra spacing and the new lines do not have any effect. For jumping to a new line we use the <code>&lt;br /&gt;</code>. For this example, we want to start the span text in a new line, and have a blank line between them. So we add two <strong>br</strong> tags and the code looks like this:</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;p id=\"first-para\"&gt;\n  this is the text       for the paragraph.\n  &lt;br /&gt;\n  &lt;br /&gt;\n\n\n\n\n  &lt;span&gt;\n    this is some more text\n  &lt;/span&gt;\n  &lt;span&gt;\n    sadjalsdkjsa\n  &lt;/span&gt;\n&lt;/p&gt;\n</pre> <img src=\"//a.ilovecoding.org/thumb/htmlcss2/element-br-after.jpg\" class=\"border img-fluid\" alt=\"example of <br /> element usage\">\n\n<p>As you can see in the example above, after we use the <code>&lt;br /&gt;</code> the vertical spacing was applied.</p>\n\n<h3>The &lt;hr /&gt; tag</h3>\n\n<p>\tIf we want to define a line to separate content or to define a thematic break, we can use the <code>&lt;hr /&gt;</code> tag, which stands for horizontal rule. It makes a horizontal line across the screen which is very useful to separate the content visually. Let's use it in our example:</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;p id=\"first-para\"&gt;\n  this is the text       for the paragraph.\n  &lt;br /&gt;\n  &lt;br /&gt;\n  &lt;hr /&gt;\n\n\n\n  &lt;span&gt;\n    this is some more text\n  &lt;/span&gt;\n  &lt;span&gt;\n    sadjalsdkjsa\n  &lt;/span&gt;\n&lt;/p&gt;\n</pre>\n\n<p>Here we can see the result:</p>\n\n<img src=\"//a.ilovecoding.org/thumb/htmlcss2/element-hr.jpg\" class=\"border img-fluid\" alt=\"example of <hr /> element usage\">\n\n<p>One last thing to know about HTML elements, is that one single element can have multiple attributes. like <code> &lt;img id=\"first-img\" class=\"myclass\" alt=\"my first image\" /&gt;</code>, but it won't have any effects visually since they are not meant for it. We will learn more about this in future lessons.</p>",
    "updatedIso": {
      "$date": "2019-03-07T22:21:44.507Z"
    },
    "updatedMsec": 1.541178596604E+12,
    "demoUrl": "demo/htmlcss2/7-elements-continued",
    "sourceUrl": "source/htmlcss2/7-elements-continued.zip"
  },
  {
    "_id": "5b88261ec665e40014cad621",
    "slug": "special-characters",
    "title": "Adding special characters in your webpage",
    "subTitle": "HTML has a unique way of adding special characters in HTML - see how its done.",
    "createdIso": {
      "$date": "2018-08-30T17:15:10.444Z"
    },
    "createdMsec": 1.535649310444E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972594",
    "duration": "5:50",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:12:40.739Z"
    },
    "updatedMsec": 1.541179071277E+12,
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://developermozilla.org/enUS/docs/Glossary/Entity\">Special character (Entity) reference on Mozilla</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/17-special-characters",
    "sourceUrl": "source/htmlcss2/17-special-characters.zip"
  },
  {
    "_id": "5b883575c665e40014cad62b",
    "slug": "style-selector",
    "title": "<style> element & using CSS selectors",
    "subTitle": "CSS selectors are magical - See how you can define once your webpage styling, and it will apply everywhere.",
    "createdIso": {
      "$date": "2018-08-30T18:20:37.866Z"
    },
    "createdMsec": 1.535653237866E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287103977",
    "duration": "5:38",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:15:20.657Z"
    },
    "updatedMsec": 1.541180192622E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/27-style-selector",
    "sourceUrl": "source/htmlcss2/27-style-selector.zip"
  },
  {
    "_id": "5b883582c665e40014cad62c",
    "slug": "css-file",
    "title": "Organize your CSS is its own file",
    "subTitle": "Instead of writing your CSS in the <style> element, you can write them in a separate file. This way these styles can be shared among multiple webpages.",
    "createdIso": {
      "$date": "2018-08-30T18:20:50.833Z"
    },
    "createdMsec": 1.535653250833E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104055",
    "duration": "4:55",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:15:23.456Z"
    },
    "updatedMsec": 1.541180194637E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/28-css-file",
    "sourceUrl": "source/htmlcss2/28-css-file.zip"
  },
  {
    "_id": "5a74a6bb22183100147c5dc0",
    "slug": "project-song-search-app-part3",
    "title": "Project: Building a Song Search App with React - Part 3",
    "subTitle": "Learn how to build a fully functional song search app with React. We'll integrate our app with the iTunes API to find song",
    "thumbnail": "react/react21-project-song-search.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517594299995E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/254002153",
    "duration": "7:05",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:58:19.995Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End",
      "Project"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:49:46.294Z"
    },
    "updatedMsec": 1.522864186294E+12
  },
  {
    "_id": "5ac3e75db9773a0014e29f3f",
    "slug": "notetaking-auth",
    "title": "Authentication & Authorization (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p20-auth.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788189937E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/263042054",
    "duration": "6:02",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:43:09.937Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:47.814Z"
    },
    "updatedMsec": 1.522950418852E+12
  },
  {
    "_id": "5afae9706be0670014043be8",
    "slug": "react-native-custom-button-2",
    "title": "Creating Custom Buttons in React Native - Part 2",
    "subTitle": "",
    "thumbnail": "react-native/16-2-button.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393200049E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269247288",
    "duration": "3:10",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:06:40.048Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:27:13.911Z"
    },
    "updatedMsec": 1.526470033911E+12
  },
  {
    "_id": "5ac3e8a7b9773a0014e29f46",
    "slug": "notetaking-note-author",
    "title": "Note with Author ID (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p27-notes-author.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788519758E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893792",
    "duration": "5:24",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:48:39.758Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:16:14.84Z"
    }
  },
  {
    "_id": "5afadd32364a340014b75d08",
    "slug": "installing-react-native-tools",
    "title": "Installing tools for React Native",
    "subTitle": "",
    "thumbnail": "react-native/4-0-installation.jpg",
    "bodyContent": "",
    "createdMsec": 1.526390066044E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269242940",
    "duration": "3:00",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:14:26.044Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5ac3e93cb9773a0014e29f49",
    "slug": "notetaking-going-live-db",
    "title": "Going Live: Using MLab to host our MongoDB database (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p30-mlab.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788668774E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/263040318",
    "duration": "8:09",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:51:08.774Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:16:25.377Z"
    }
  },
  {
    "_id": "5afaeaf86be0670014043bee",
    "slug": "setstate",
    "title": "Updating State value with setState",
    "subTitle": "",
    "thumbnail": "react-native/21-1-setstate.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393592663E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269249529",
    "duration": "3:00",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:13:12.663Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afaed096be0670014043bf6",
    "slug": "scrollview-style",
    "title": "Styling ScrollView in React Native",
    "subTitle": "",
    "thumbnail": "react-native/27-2-scrollview-styling.jpg",
    "bodyContent": "",
    "createdMsec": 1.526394121623E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269261221",
    "duration": "4:48",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:22:01.623Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afb64f86be0670014043bfb",
    "slug": "text-input-change",
    "title": "Playing with Text Input Fields in React Native",
    "subTitle": "",
    "thumbnail": "react-native/32-textinput-change.jpg",
    "bodyContent": "",
    "createdMsec": 1.526424824927E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269261069",
    "duration": "4:32",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T22:53:44.926Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afb654a6be0670014043bfc",
    "slug": "platform",
    "title": "Have different behavior on iOS & Android with React Native - Part 1",
    "subTitle": "",
    "thumbnail": "react-native/33-platform.jpg",
    "bodyContent": "",
    "createdMsec": 1.526424906867E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269265322",
    "duration": "6:19",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T22:55:06.867Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afb6ffb07ff3d0014610fee",
    "slug": "crypto-price-checker-getting-crypto-price-from-api",
    "title": "Crypto Price Checker: Getting crypto price from API",
    "subTitle": "",
    "thumbnail": "react-native/47-crypto-get-price.jpg",
    "bodyContent": "",
    "createdMsec": 1.526427643716E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269740951",
    "duration": "6:56",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:40:43.716Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afb6f1c07ff3d0014610fe8",
    "slug": "react-navigation-adding-header-and-titles-on-screens",
    "title": "React-Navigation: Adding header and titles on screens",
    "subTitle": "",
    "thumbnail": "react-native/41-react-navigation-options.jpg",
    "bodyContent": "",
    "createdMsec": 1.526427420146E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269274733",
    "duration": "3:32",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:37:00.145Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afae9e56be0670014043be9",
    "slug": "alerts",
    "title": "Creating Alert messages in React Native",
    "subTitle": "",
    "thumbnail": "react-native/17-1-alert.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393317826E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269247599",
    "duration": "8:29",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:08:37.826Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5b8834b0c665e40014cad625",
    "slug": "blockquote-pre",
    "title": "<blockquote> and <pre> elements for special text formatting",
    "subTitle": "These elements format our webpage text is special spacing and different font-family as well. Learn more in this lesson.",
    "createdIso": {
      "$date": "2018-08-30T18:17:20.561Z"
    },
    "createdMsec": 1.535653040561E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287103454",
    "duration": "5:43",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:13:07.524Z"
    },
    "updatedMsec": 1.541179177192E+12,
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://developermozilla.org/enUS/docs/Glossary/Entity\"></a><a href=\"https://www.google.com/search?q=lorem+ipsum\">Google search -&gt; 'Lorem Ipsum'</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/21-blockquote-pre",
    "sourceUrl": "source/htmlcss2/21-blockquote-pre.zip"
  },
  {
    "_id": "5ab032e90288fc00145e24d7",
    "slug": "traditional-vs-spa",
    "title": "Understanding Traditional vs Single-Page Apps",
    "subTitle": "",
    "thumbnail": "express/express-4-traditional-spa.jpg",
    "bodyContent": "",
    "createdMsec": 1.521496809861E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260485296",
    "duration": "7:52",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:00:09.861Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ],
    "updatedIso": {
      "$date": "2019-02-13T18:16:54.967Z"
    },
    "updatedMsec": 1.521498464303E+12
  },
  {
    "_id": "5a727116b736b600141cd22c",
    "slug": "all-about-state-in-react",
    "title": "All about State in React",
    "subTitle": "Learn all about 'State' in React. The React way to store component specific data within a component",
    "thumbnail": "react/react11-state.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517449494769E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-state",
    "videoSource": "//player.vimeo.com/video/253694938",
    "duration": "6:18",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:44:54.769Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T21:23:31.746Z"
    },
    "updatedMsec": 1.522877011746E+12
  },
  {
    "_id": "5ab035b40288fc00145e24df",
    "slug": "expressjs-response",
    "title": "Using Response Object to send data with Express.js",
    "subTitle": "",
    "thumbnail": "express/express-11-res-send.jpg",
    "bodyContent": "",
    "createdMsec": 1.521497524542E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260487472",
    "duration": "6:35",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:12:04.542Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5ab034190288fc00145e24da",
    "slug": "using-git-in-project",
    "title": "Tracking Code Changes with Git",
    "subTitle": "",
    "thumbnail": "express/express-6-1-git.jpg",
    "bodyContent": "",
    "createdMsec": 1.521497113892E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260486247",
    "duration": "2:30",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:05:13.891Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ],
    "updatedIso": {
      "$date": "2019-02-13T18:17:15.03Z"
    }
  },
  {
    "_id": "5ac3e1c4b9773a0014e29f2d",
    "slug": "notetaking-setting-routes",
    "title": "Setting Routes (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p2-routes.jpg",
    "bodyContent": "",
    "createdMsec": 1.522786756165E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262891442",
    "duration": "5:30",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:19:16.165Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:09.181Z"
    }
  },
  {
    "_id": "5afae88a6be0670014043be4",
    "slug": "style-react-native-app-2",
    "title": "Styling your React Native App - Part 2",
    "subTitle": "",
    "thumbnail": "react-native/13-2-styles.jpg",
    "bodyContent": "",
    "createdMsec": 1.52639297056E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269245515",
    "duration": "5:06",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:02:50.56Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5ac3e40bb9773a0014e29f35",
    "slug": "notetaking-update-note",
    "title": "Update Note (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p10-update-notes.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787339916E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262892510",
    "duration": "4:18",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:28:59.916Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:25.938Z"
    }
  },
  {
    "_id": "5afaecad6be0670014043bf4",
    "slug": "flexbox",
    "title": "Layout React Native app with flexbox",
    "subTitle": "",
    "thumbnail": "react-native/26-flexbox.jpg",
    "bodyContent": "",
    "createdMsec": 1.526394029412E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269255803",
    "duration": "9:39",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:20:29.412Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5a72743bb736b600141cd233",
    "slug": "project-building-a-todo-list-app-with-react",
    "title": "Project: Building a Todo List App with React",
    "subTitle": "From start to finish, create a practical Todo List App with React",
    "thumbnail": "react/react15-project-todolist.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.51745029902E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-project-todo-app",
    "videoSource": "//player.vimeo.com/video/253695679",
    "duration": "29:59",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:58:19.02Z"
    },
    "technology": [
      "React"
    ],
    "topic": [
      "React",
      "Front-End",
      "Project"
    ],
    "updatedIso": {
      "$date": "2018-06-18T21:15:43.083Z"
    },
    "updatedMsec": 1.529356543084E+12
  },
  {
    "_id": "5b883558c665e40014cad62a",
    "slug": "intro-css-continued",
    "title": "Intro to CSS continued",
    "subTitle": "Continuation of CSS from previous lesson.",
    "createdIso": {
      "$date": "2018-08-30T18:20:08.407Z"
    },
    "createdMsec": 1.535653208407E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287103914",
    "duration": "4:10",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:15:15.785Z"
    },
    "updatedMsec": 1.541180191141E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/26-css-intro-continued",
    "sourceUrl": "source/htmlcss2/26-css-intro-continued.zip"
  },
  {
    "_id": "5ab036b60288fc00145e24e3",
    "slug": "expressjs-payload",
    "title": "Working with Request Body (payload) in Express.js",
    "subTitle": "",
    "thumbnail": "express/express-15-body-parser.jpg",
    "bodyContent": "",
    "createdMsec": 1.521497782719E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260488401",
    "duration": "6:27",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:16:22.719Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5ab0375b0288fc00145e24e5",
    "slug": "expressjs-router",
    "title": "Using Express Router to organize our apps",
    "subTitle": "",
    "thumbnail": "express/express-17-router.jpg",
    "bodyContent": "",
    "createdMsec": 1.521497947729E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260489009",
    "duration": "8:17",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:19:07.729Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5ac3e241b9773a0014e29f2e",
    "slug": "notetaking-install-bodyparser",
    "title": "Installing Body Parser (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p3-body-parser.jpg",
    "bodyContent": "",
    "createdMsec": 1.522786881722E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262891640",
    "duration": "1:01",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:21:21.722Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:13.837Z"
    }
  },
  {
    "_id": "5a727003b736b600141cd229",
    "slug": "es6-fat-arrow-function",
    "title": "Learning ES6: Fat Arrow Function",
    "subTitle": "Learn the new way to write functions in JavaScript, The old way works too, but this one has a shorter syntax",
    "thumbnail": "react/react8-es6-5-fat-arrow-function.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517449219148E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/253694516",
    "duration": "2:26",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:40:19.147Z"
    },
    "technology": [
      "React.js",
      "ES6"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:47:08.878Z"
    },
    "updatedMsec": 1.522864028878E+12
  },
  {
    "_id": "5a74a5d622183100147c5dbd",
    "slug": "making-http-calls-in-react",
    "title": "Making HTTP Calls in a React App",
    "subTitle": "How to make HTTP Calls in a React App",
    "thumbnail": "react/react20-api-call.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517594070791E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/Ahttps://github.com/iLoveCodingOrg/react-api-call",
    "videoSource": "//player.vimeo.com/video/253886968",
    "duration": "9:27",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:54:30.791Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T22:15:25.723Z"
    },
    "updatedMsec": 1.522880125723E+12
  },
  {
    "_id": "5afae1ce6be0670014043bd6",
    "slug": "installing-android-tools-on-mac-for-react-native-part-1",
    "title": "Installing Android tools on Mac for React Native - Part 1",
    "subTitle": "",
    "thumbnail": "react-native/5-1-cli.jpg",
    "bodyContent": "",
    "createdMsec": 1.526391246373E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243076",
    "duration": "3:53",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:34:06.372Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:25:58.424Z"
    },
    "updatedMsec": 1.526469958424E+12
  },
  {
    "_id": "5afaebbd6be0670014043bf0",
    "slug": "react-lifecycle-mount",
    "title": "The React Lifecylce - How a component works",
    "subTitle": "",
    "thumbnail": "react-native/22-lifecycle-mount.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393789582E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269250128",
    "duration": "4:16",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:16:29.582Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T10:53:46.139Z"
    },
    "updatedMsec": 1.526468026139E+12
  },
  {
    "_id": "5ac3e275b9773a0014e29f2f",
    "slug": "notetaking-setup-mongoose",
    "title": "Setup Mongoose.js (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p4-mongoose.jpg",
    "bodyContent": "",
    "createdMsec": 1.52278693394E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262891691",
    "duration": "3:59",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:22:13.94Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:15.706Z"
    }
  },
  {
    "_id": "5afadce6364a340014b75d07",
    "slug": "react-native-quick-start",
    "title": "Quick start to React Native Development",
    "subTitle": "",
    "thumbnail": "react-native/3-quick-start.jpg",
    "bodyContent": "",
    "createdMsec": 1.526389990032E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269242866",
    "duration": "6:39",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:13:10.032Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5ab0326a0288fc00145e24d5",
    "slug": "how-web-works",
    "title": "Understanding How the Web Works Internally",
    "subTitle": "",
    "thumbnail": "express/express-2-web-works.jpg",
    "bodyContent": "",
    "createdMsec": 1.521496682502E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260484132",
    "duration": "5:29",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T21:58:02.501Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ],
    "updatedIso": {
      "$date": "2019-02-13T18:16:42.508Z"
    }
  },
  {
    "_id": "5ab017010288fc00145e24c8",
    "slug": "dbms",
    "title": "What's a Database Management System (DBMS)",
    "subTitle": "Learn what is a DBMS and the names of some popular Database Solutions",
    "thumbnail": "mongodb/mongodb-1-dbms.jpg",
    "bodyContent": "",
    "createdMsec": 1.521489665181E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260483346",
    "duration": "1:42",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:01:05.181Z"
    },
    "technology": [
      "Database",
      ""
    ],
    "topic": [
      "Database"
    ],
    "updatedIso": {
      "$date": "2018-03-19T20:05:33.608Z"
    },
    "updatedMsec": 1.521489933608E+12
  },
  {
    "_id": "5afb6f8f07ff3d0014610feb",
    "slug": "project-create-a-crypto-currency-price-checker-app-with-react-native",
    "title": "Project: Create a Crypto-currency price checker app with React Native",
    "subTitle": "You will build a portfolio ready Cryptocurrency Price Checker Mobile App with React Native. This app will be compatible with Android and iOS devices both",
    "thumbnail": "react-native/44-crypro-intro.jpg",
    "bodyContent": "",
    "createdMsec": 1.52642753573E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269740815",
    "duration": "3:09",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:38:55.73Z"
    },
    "technology": [
      "React",
      "React Native"
    ],
    "topic": [
      "Mobile Apps",
      "Android",
      "iOS",
      "React",
      "React Native",
      "Project"
    ],
    "updatedIso": {
      "$date": "2018-06-18T22:33:40.534Z"
    },
    "updatedMsec": 1.529361220534E+12
  },
  {
    "_id": "5afaee096be0670014043bf9",
    "slug": "sectionlist",
    "title": "Using SectionList in React Native to show content",
    "subTitle": "",
    "thumbnail": "react-native/30-sectionlist.jpg",
    "bodyContent": "",
    "createdMsec": 1.526394377514E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269269115",
    "duration": "6:07",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:26:17.514Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T10:56:33.96Z"
    },
    "updatedMsec": 1.526468193961E+12
  },
  {
    "_id": "5a727067b736b600141cd22a",
    "slug": "data-binding-in-react",
    "title": "Data Binding in React",
    "subTitle": "Learn how react keeps the data in sync within the different parts of the component",
    "thumbnail": "react/react9-data-binding.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517449319607E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-data-binding",
    "videoSource": "//player.vimeo.com/video/253694561",
    "duration": "7:29",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:41:59.607Z"
    },
    "technology": [
      "React.js",
      "ES6"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T21:13:43.113Z"
    },
    "updatedMsec": 1.522876423113E+12
  },
  {
    "_id": "5a74a76e22183100147c5dc2",
    "slug": "going-live-our-react-app",
    "title": "Going live with our React App",
    "subTitle": "Let's put our React App on the internet",
    "thumbnail": "react/react22-going-live.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517594478403E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/254002525",
    "duration": "6:19",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T18:01:18.403Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:49:56.339Z"
    },
    "updatedMsec": 1.522864196339E+12
  },
  {
    "_id": "5ab035f50288fc00145e24e0",
    "slug": "expressjs-response-more",
    "title": "Working with HTTP Status & Headers in Express.js",
    "subTitle": "",
    "thumbnail": "express/express-12-http-status.jpg",
    "bodyContent": "",
    "createdMsec": 1.52149758938E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260487497",
    "duration": "6:29",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:13:09.38Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5ac3e58eb9773a0014e29f37",
    "slug": "notetaking-register-user",
    "title": "Register User (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p12-register.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787726182E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262892559",
    "duration": "6:31",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:35:26.182Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:30.508Z"
    }
  },
  {
    "_id": "5ac3e902b9773a0014e29f48",
    "slug": "notetaking-note-author-rights-part2",
    "title": "Note Author Rights - Part 2 (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p29-authorization-test.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788610485E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893884",
    "duration": "4:03",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:50:10.485Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:16:21.378Z"
    }
  },
  {
    "_id": "5a7271ccb736b600141cd22d",
    "slug": "default-props-in-react",
    "title": "Default Props in React",
    "subTitle": "What if you forget to pass props into a component? No worries Default Props can help. Lets learn how",
    "thumbnail": "react/react12-defaultprops.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517449676215E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-default-props",
    "videoSource": "//player.vimeo.com/video/253695045",
    "duration": "1:27",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:47:56.215Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T21:26:03.355Z"
    },
    "updatedMsec": 1.522877163355E+12
  },
  {
    "_id": "5b881eb6c665e40014cad612",
    "slug": "vscode-overview",
    "title": "Overview of the VS Code Text Editor",
    "subTitle": "Learn whats so special about a Text Editor and learn some handy features they have.",
    "createdIso": {
      "$date": "2018-08-30T16:43:34.35Z"
    },
    "createdMsec": 1.53564741435E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286971681",
    "duration": "4:57",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2022-05-19T21:08:13.625Z"
    },
    "updatedMsec": 1.54117860556E+12,
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<h2>Video Transcript</h2>\n\n<body>\n    <h3>Lesson 2: Overview of the VS Code Text Editor</h3>\n    <p> Now that you have <a href=\"https://www.google.com/chrome/\"><strong>Google\n          Chrome</strong></a> and <a href=\"https://code.visualstudio.com/download\"><strong>VS\n          Code</strong></a> installed, I want to give you a quick overview of VS\n      code. The thing is that when you are a new developer, and you download\n      this software called VS Code or any text editor, they come with a lot of\n      options, and it can be overwhelming. So in this video, I want to make you\n      comfortable with a code editor like VS Code. </p>\n    <p> Now I want to tell you that a text editor is actually a very fancy\n      software on the surface, but it is very simple in the background. The\n      number one reason we use a text editor is that because it has something\n      called <em>Syntax Highlighting</em>. </p>\n    <p> So let's say, if I go to the <a href=\"https://code.visualstudio.com/\">VS\n        Code website</a> and I go over here, you see some code has been written\n      here, and it has different colors. That means it automatically highlights\n      the code parts, so it is easier for the developer to read. You just write\n      the code and it automatically makes it into different colors. </p>\n    <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/htmlcss2/2-text-editor-overview/vs-code-syntax-highligthing.jpg\"\n\n      alt=\" Syntax Highlighting\">\n    <p> The second thing the text editor has, it has some <em>help text</em>.\n      So let’s say if you are writing certain code, it is going to give you the\n      different options that you can write along the way as you are typing. So\n      as you are typing something just like in Google. Let’s say you go to\n      Google.com. And you are doing a search, I write, 'make', and it just\n      gives/suggests to me these helpful texts. So that is another feature that\n      a text editor has. </p>\n    <p> So these are the two primary reasons we use a code editor, or else we\n      can write code in any kind of software. We do not have to have a code\n      editor. So that is the number one reason I want to tell you why we use a\n      code editor. </p>\n    <p> The second thing that I want to get you familiar with the VS Code is\n      that it has something called color themes. So if you select different\n      themes, you can change the color of how your code editor looks. I like to\n      stick with the default, so I am going to stick with my default colors. </p>\n    <p> Another thing I want to show you is that it has a lot of options here.\n      So, for the most part, we are going to be using just the Explorer section\n      over here when we have a lot of code, a lot of different files. It can\n      help us explore those files, just the way on our computer. Let us say I\n      create a folder over here. If I open this folder where I go to the <code>ilovecoding\n        video</code> folder, all these folders that we have, show those files. </p>\n    <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/htmlcss2/2-text-editor-overview/vscode-file-explorer.jpg\"\n\n      alt=\"File Explorer\">\n    <p> So let's say in a project I have this project folder. I create the\n      folders like <code>first-page</code> and I import drag and drop this over\n      here. It is going to basically show that in the <strong>Explorer</strong>\n      section, you see the <code><strong>FIRST-PAGE</strong></code> over here,\n      and now I can simply add files. So that is a <code>filea.js</code>, let's\n      say if you are making a JavaScript file and I can just right-click and do\n      the same thing, let's say <code>index.html</code>. And I can make more\n      files here. </p>\n    <p> So if I create these files over here and I open my folder, you will see\n      those files have been created in that particular project folder. So we\n      call this a project folder and we import or drag and drop this project\n      folder in our VS code and we can simply browse that over here. If you want\n      to organize that into folders, I can just create a folder over here. And I\n      can sub-organize these files if I want to drag this over here. I can just\n      move this particular file inside this folder. So if I go inside the\n      folder, you see this file. So basically, that is what a coder editor is.\n      It is just simply the syntax highlighting and stuff like that. </p>\n    <p> Now it has other advanced features as well, but it does not matter. The\n      point of the matter is that it is just a tool to facilitate a developer’s\n      job. And if it gets very overwhelming, just ignore those features. Just\n      like right now when I was playing around with this file, this particular\n      thing opened up. Do not worry about it. I am just going to close it, that\n      is all. We do not need it. </p>\n    <p> One more thing I want to tell you about the VS Code is that they are\n      constantly upgrading it. So if your VS Code looks slightly different,\n      maybe the colors are different. They\n      usually have a purple here. Do not worry about it. They are just\n      keeping on upgrading it. Some options, some icons just look different. I\n      have certain extensions installed. So extensions are over here. So you may\n      have a different extension preinstalled. I may have some different\n      extensions installed. That is why it looks slightly different. </p>\n    <p> But the fact of the matter is that you just focus on the code that is\n      being written, and you are going to be all fine. So with that said, let us\n      start in our next video by creating our first web page. Talk to you in the\n      next video. </p>\n  </body>"
  },
  {
    "_id": "5afaeb276be0670014043bef",
    "slug": "setstate-callback",
    "title": "Understanding setState a little more",
    "subTitle": "",
    "thumbnail": "react-native/21-2-setstate-callback.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393639671E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269249721",
    "duration": "3:49",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:13:59.671Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5a72722db736b600141cd22e",
    "slug": "react-component-lifecycle-part1",
    "title": "The React Component Lifecycle - Part 1",
    "subTitle": "Learn how React works and keeps everything in sync",
    "thumbnail": "react/react13-lifecycle-1.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517449773656E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/253695088",
    "duration": "4:03",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:49:33.656Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:47:36.039Z"
    },
    "updatedMsec": 1.522864056039E+12
  },
  {
    "_id": "5afae8fa6be0670014043be6",
    "slug": "creating-button",
    "title": "Creating a Button in React Native",
    "subTitle": "",
    "thumbnail": "react-native/15-button.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393082893E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269246370",
    "duration": "5:04",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:04:42.893Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5a74a65d22183100147c5dbe",
    "slug": "project-song-search-app-part1",
    "title": "Project: Building a Song Search App with React - Part 1",
    "subTitle": "Learn how to build a fully functional song search app with React. We will leverage the iTunes API to find song",
    "thumbnail": "react/react21-project-song-search.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517594205279E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-project-song-search/tree/0-initial",
    "videoSource": "//player.vimeo.com/video/254001742",
    "duration": "3:58",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:56:45.279Z"
    },
    "technology": [
      "React"
    ],
    "topic": [
      "React",
      "Front-End",
      "Project"
    ],
    "updatedIso": {
      "$date": "2018-06-18T21:36:43.404Z"
    },
    "updatedMsec": 1.529357803405E+12
  },
  {
    "_id": "5ab019c40288fc00145e24c9",
    "slug": "organizing-data-part1",
    "title": "How to Organize Data in a Database - Part 1",
    "subTitle": "",
    "thumbnail": "mongodb/mongodb-2-how-db-works-1.jpg",
    "bodyContent": "",
    "createdMsec": 1.521490372211E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260483396",
    "duration": "2:51",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:12:52.21Z"
    },
    "technology": [
      "Database",
      ""
    ],
    "topic": [
      "Database"
    ],
    "updatedIso": {
      "$date": "2018-03-19T20:17:04.81Z"
    },
    "updatedMsec": 1.52149062481E+12
  },
  {
    "_id": "5afaecd96be0670014043bf5",
    "slug": "scrollview",
    "title": "Adding scrolling capability in a React Native app",
    "subTitle": "",
    "thumbnail": "react-native/27-1-scrollview.jpg",
    "bodyContent": "",
    "createdMsec": 1.526394073862E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269259565",
    "duration": "2:37",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:21:13.862Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5b37b08bd14d27001482d252",
    "slug": "css-intro",
    "title": "Make your websites pretty with CSS",
    "subTitle": "Learn the basics of CSS - The technology that helps make websites look beautiful",
    "demoUrl": "http://awesome-site.netlify.com",
    "createdIso": {
      "$date": "2018-06-30T16:32:11.326Z"
    },
    "createdMsec": 1.530376331326E+12,
    "updatedIso": {
      "$date": "2018-06-30T16:33:31.764Z"
    },
    "updatedMsec": 1.530376411764E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "277724183",
    "duration": "10:01",
    "access": 0,
    "technology": [
      "CSS"
    ],
    "topic": [
      "CSS",
      "Email Course"
    ]
  },
  {
    "_id": "5a727495b736b600141cd234",
    "slug": "children-prop-in-react",
    "title": "The Special `children` prop in React",
    "subTitle": "Learn about the 'children' prop in React, and how it can be used to create flexible layouts",
    "thumbnail": "react/react17-children-prop.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517450389071E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-children-prop",
    "videoSource": "//player.vimeo.com/video/253696280",
    "duration": "3:24",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:59:49.071Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T21:54:59.672Z"
    },
    "updatedMsec": 1.522878899672E+12
  },
  {
    "_id": "5ab034cb0288fc00145e24db",
    "slug": "using-nodemon-expressjs",
    "title": "Using Nodemon to Auto Restart Express.js app",
    "subTitle": "",
    "thumbnail": "express/express-7-nodemon.jpg",
    "bodyContent": "",
    "createdMsec": 1.521497291598E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260486332",
    "duration": "1:33",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:08:11.598Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ],
    "updatedIso": {
      "$date": "2019-02-13T18:17:21.32Z"
    }
  },
  {
    "_id": "5a74a58122183100147c5dbc",
    "slug": "project-building-a-timer-app-with-react-part5",
    "title": "Project: Building a Timer App with React - Part 5",
    "subTitle": "Let's build a practical Timer App with React.",
    "thumbnail": "react/react18-project-timer.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517593985295E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-project-timer",
    "videoSource": "//player.vimeo.com/video/253886916",
    "duration": "3:40",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:53:05.295Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T22:06:55.694Z"
    },
    "updatedMsec": 1.522879615694E+12
  },
  {
    "_id": "5ab01f6f0288fc00145e24d3",
    "slug": "mongodb-gui",
    "title": "Using a GUI to work with MongoDB",
    "subTitle": "",
    "thumbnail": "mongodb/mongodb-12-gui.jpg",
    "bodyContent": "",
    "createdMsec": 1.521491823895E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260485257",
    "duration": "1:36",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:37:03.895Z"
    },
    "technology": [
      "Database"
    ],
    "topic": [
      "Database"
    ]
  },
  {
    "_id": "5b881e43c665e40014cad611",
    "slug": "tools-html-css-course",
    "title": "Tools you need for the HTML/CSS course",
    "subTitle": "You will need a modern browser and a text-editor too get started. See my recommended tools in the lesson.",
    "createdIso": {
      "$date": "2018-08-30T16:41:39.715Z"
    },
    "createdMsec": 1.535647299715E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286971646",
    "duration": "1:59",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>2 must-have tools:</h3>\n<p>One Modern Browser:&nbsp;</p>\n<ul>\n  <li><a href=\"https://wwwgoogle.com/chrome/\">Google Chrome Browser</a> (Must have)</li>\n</ul>\n<p>One Text Editor:</p>\n<ul>\n  <li><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a> (Highly Recommended)</li>\n  <li><a href=\"https://www.sublimetext.com/\">Sublime Text</a></li>\n  <li><a href=\"https://atom.io/\">Atom Editor</a></li>\n  <li><a href=\"https://www.jetbrains.com/webstorm/\">Web Storm</a></li>\n  <li><a href=\"https://notepad-plus-plus.org/\">Notepad++</a></li>\n  <li><a href=\"http://brackets.io/\">Brackets Editor</a></li>\n</ul>\n\n<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<body>\n    <h2>Lesson 1: Tools you need for the HTML/CSS course</h2>\n    <p>\n        For this course, you will need two pieces of software. The first is going to be a modern browser. I highly recommend that you <a href=\"https://www.google.com/chrome/\">download Google Chrome</a> because probably it is the best browser out there. But more importantly, it comes with a very handy set of tools called the Chrome developer tools. So you can go to the menu > more tools, there is something called developer tools. We are going to use these toolsets throughout our course in the later stage. So that’s very important.\n    </p>\n\n    <p>\n        The next thing you will need is a text editor or sometimes also called the code editor. This is a piece of software where you write your code. There are many code editors or text editors out there. The one I highly\n        recommend, we are going to be using in our course is called <a href=\"https://code.visualstudio.com/\">VS\n            Code</a>, or for the full form, it is called Visual\n        Studio Code. It is by Microsoft. It is a free tool, and it’s pretty awesome. You don’t just use the VS Code for\n        HTML and CSS; you can use it to code different languages, e.g., C #, Python, JavaScript, and many others. It is available on Mac, Linux, and Windows, so you are all set for that.\n    </p>\n\n    <p>\n        If you prefer a different code editor, there are many other options. Another good one is <a\n            href=\"https://www.sublimetext.com/\">Sublime Text</a>. It is a\n        paid one. They have a free trial. There is another one by <a href=\"https://github.com/\">Github</a>. It is called\n        the <a href=\"https://atom.io/\">Atom Editor</a>. Another one\n        which is a paid one, which is very popular as well is called <a href=\"https://www.jetbrains.com/webstorm/\">Web\n            Storm</a>. You try out <a href=\"https://notepad-plus-plus.org/\">Notepad ++</a> and <a\n            href=\"http://brackets.io/\">Brackets</a> as\n        well. But you need one of those code editors. They all work pretty well. But I like the VS Code. It is very\n        popular. So download Google Chrome and a text editor like VS Code, and I am going to talk to you in the next\n        lesson/video.\n    </p>\n\n\n\n\n\n\n</body>",
    "updatedIso": {
      "$date": "2021-03-30T15:11:34.212Z"
    },
    "updatedMsec": 1.541177331336E+12
  },
  {
    "_id": "5b88358ec665e40014cad62d",
    "slug": "css-id-selector",
    "title": "CSS id selector (# hash sign)",
    "subTitle": "Target element by its ID attribute. See how.",
    "createdIso": {
      "$date": "2018-08-30T18:21:02.829Z"
    },
    "createdMsec": 1.535653262829E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104113",
    "duration": "4:20",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:15:28.571Z"
    },
    "updatedMsec": 1.54117972665E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/29-30-basic-selectors",
    "sourceUrl": "source/htmlcss2/29-30-basic-selectors.zip"
  },
  {
    "_id": "5afae8cc6be0670014043be5",
    "slug": "organizing-files",
    "title": "Organizing files in a React Native project",
    "subTitle": "",
    "thumbnail": "react-native/14-organizing-files.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393036715E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269245828",
    "duration": "7:16",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:03:56.715Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5ab035830288fc00145e24de",
    "slug": "expressjs-http-methods",
    "title": "Working with HTTP Methods in Express.js",
    "subTitle": "",
    "thumbnail": "express/express-10-http-methods.jpg",
    "bodyContent": "",
    "createdMsec": 1.521497475445E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260487140",
    "duration": "4:37",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:11:15.445Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5afaed6f6be0670014043bf7",
    "slug": "flatlist",
    "title": "Using FlatList in React Native to show content - Part 1",
    "subTitle": "",
    "thumbnail": "react-native/28-flastlist.jpg",
    "bodyContent": "",
    "createdMsec": 1.526394223337E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269264273",
    "duration": "7:29",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:23:43.337Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T10:55:57.149Z"
    },
    "updatedMsec": 1.52646815715E+12
  },
  {
    "_id": "5ab019eb0288fc00145e24ca",
    "slug": "organizing-data-part2",
    "title": "How to Organize Data in a Database - Part 2",
    "subTitle": "",
    "thumbnail": "mongodb/mongodb-3-how-db-works-2.jpg",
    "bodyContent": "",
    "createdMsec": 1.521490411457E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260483394",
    "duration": "4:18",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:13:31.457Z"
    },
    "technology": [
      "Database",
      ""
    ],
    "topic": [
      "Database"
    ],
    "updatedIso": {
      "$date": "2018-03-19T20:19:50.05Z"
    },
    "updatedMsec": 1.52149079005E+12
  },
  {
    "_id": "5ab036760288fc00145e24e2",
    "slug": "expressjs-query-params",
    "title": "Working with Query Parameters in Express.js",
    "subTitle": "",
    "thumbnail": "express/express-14-query-params.jpg",
    "bodyContent": "",
    "createdMsec": 1.52149771822E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260488130",
    "duration": "4:48",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:15:18.22Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ]
  },
  {
    "_id": "5ac3e38db9773a0014e29f32",
    "slug": "notetaking-validate-input-create-note",
    "title": "Validating input when creating note (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p7-validation.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787213737E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262891849",
    "duration": "6:14",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:26:53.737Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:18.818Z"
    }
  },
  {
    "_id": "5a74a51322183100147c5db8",
    "slug": "project-building-a-timer-app-with-react-part1",
    "title": "Project: Building a Timer App with React - Part 1",
    "subTitle": "Let's build a practical Timer App with React.",
    "thumbnail": "react/react18-project-timer.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517593875822E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-project-timer/tree/0-initial",
    "videoSource": "//player.vimeo.com/video/253886141",
    "duration": "5:02",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:51:15.822Z"
    },
    "technology": [
      "React"
    ],
    "topic": [
      "React",
      "Front-End",
      "Project"
    ],
    "updatedIso": {
      "$date": "2018-06-18T21:16:24.513Z"
    },
    "updatedMsec": 1.529356584513E+12
  },
  {
    "_id": "5b8834e2c665e40014cad627",
    "slug": "video-audio",
    "title": "Using <video> and <audio> elements",
    "subTitle": "Add custom videos and audio to your webpage. Set them to autoplay, add controls and more.",
    "createdIso": {
      "$date": "2018-08-30T18:18:10.324Z"
    },
    "createdMsec": 1.535653090324E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287103655",
    "duration": "5:56",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:13:25.959Z"
    },
    "updatedMsec": 1.541179209122E+12,
    "bodyContent": "<h3>Resources</h3><ul>\n  <li><a href=\"https://developermozilla.org/enUS/docs/Web/HTML/Element/video\">&lt;video&gt; Reference on Mozilla</a></li>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio\">&lt;audio&gt; Reference on Mozilla</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/23-video-audio",
    "sourceUrl": "source/htmlcss2/23-video-audio.zip"
  },
  {
    "_id": "5a727587b736b600141cd236",
    "slug": "react-router-links",
    "title": "React-Router: Linking Pages within a React App",
    "subTitle": "Learn how to use the 'react-router' library to link webpages within our React app",
    "thumbnail": "react/react19-react-router-link.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517450631607E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-router",
    "videoSource": "//player.vimeo.com/video/253696504",
    "duration": "1:48",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T02:03:51.607Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T22:09:59.408Z"
    },
    "updatedMsec": 1.522879799408E+12
  },
  {
    "_id": "5ab034fb0288fc00145e24dc",
    "slug": "how-expressjs-works",
    "title": "Understanding How Express.js works",
    "subTitle": "",
    "thumbnail": "express/express-8-what-happened.jpg",
    "bodyContent": "",
    "createdMsec": 1.521497339786E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260486342",
    "duration": "8:18",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:08:59.786Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ],
    "updatedIso": {
      "$date": "2019-02-13T18:17:28.89Z"
    }
  },
  {
    "_id": "5afae9316be0670014043be7",
    "slug": "react-native-custom-button-1",
    "title": "Creating Custom Buttons in React Native - Part 1",
    "subTitle": "",
    "thumbnail": "react-native/16-1-button.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393137947E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269246847",
    "duration": "5:12",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:05:37.947Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:27:02.813Z"
    },
    "updatedMsec": 1.526470022813E+12
  },
  {
    "_id": "5afae2b86be0670014043bda",
    "slug": "installing-android-tools-on-mac-for-react-native-part-5",
    "title": "Installing Android tools on Mac for React Native - Part 5",
    "subTitle": "",
    "thumbnail": "react-native/5-5-path.jpg",
    "bodyContent": "",
    "createdMsec": 1.526391480047E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243330",
    "duration": "2:07",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:38:00.047Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:26:28.663Z"
    },
    "updatedMsec": 1.526469988663E+12
  },
  {
    "_id": "5afb64d46be0670014043bfa",
    "slug": "text-input",
    "title": "Creating Text Input Fields in React Native",
    "subTitle": "",
    "thumbnail": "react-native/31-textinput.jpg",
    "bodyContent": "",
    "createdMsec": 1.526424788571E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269255245",
    "duration": "6:52",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T22:53:08.571Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T10:59:49.045Z"
    },
    "updatedMsec": 1.526468389045E+12
  },
  {
    "_id": "5ac3e43cb9773a0014e29f36",
    "slug": "notetaking-validate-input-update-note",
    "title": "Validating input when updating note (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p11-update-validation.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787388026E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262892536",
    "duration": "5:11",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:29:48.026Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:28.23Z"
    }
  },
  {
    "_id": "5ac3e969b9773a0014e29f4a",
    "slug": "notetaking-going-live-app",
    "title": "Going Live: Using Heroku to host our app (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p31-heroku.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788713276E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893958",
    "duration": "9:48",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:51:53.276Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:17:23.64Z"
    }
  },
  {
    "_id": "5b37b466d14d27001482d255",
    "slug": "js-intro-calc",
    "title": "Basics of JavaScript - Adding Intelligence",
    "subTitle": "Learn the basics of JavaScript in a way that its going to make sense this time. In this video we will have JavaScript do a simple calculation",
    "demoUrl": "http://awesome-site.netlify.com/calc.html",
    "createdIso": {
      "$date": "2018-06-30T16:48:38.593Z"
    },
    "createdMsec": 1.530377318593E+12,
    "updatedIso": {
      "$date": "2018-06-30T18:49:06.625Z"
    },
    "updatedMsec": 1.530384546625E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "277794409",
    "duration": "10:41",
    "access": 0,
    "technology": [
      "Javascript"
    ],
    "topic": [
      "Javascript",
      "Email Course"
    ]
  },
  {
    "_id": "5afb756c07ff3d0014610ff2",
    "slug": "crypto-price-checker-styling-the-app",
    "title": "Crypto Price Checker: Styling the app",
    "subTitle": "",
    "thumbnail": "react-native/49-crypto-styling.jpg",
    "bodyContent": "",
    "createdMsec": 1.526429036372E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269744426",
    "duration": "3:25",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-16T00:03:56.372Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:02:40.554Z"
    },
    "updatedMsec": 1.526468560554E+12
  },
  {
    "_id": "5b37b281d14d27001482d253",
    "slug": "js-intro",
    "title": "Basics of JavaScript - Part 1",
    "subTitle": "Learn the basics of JavaScript in a way that its going to make sense this time.",
    "demoUrl": "http://awesome-site.netlify.com/play.html",
    "createdIso": {
      "$date": "2018-06-30T16:40:33.334Z"
    },
    "createdMsec": 1.530376833335E+12,
    "updatedIso": {
      "$date": "2018-06-30T16:52:49.565Z"
    },
    "updatedMsec": 1.530377569565E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "277792145",
    "duration": "9:13",
    "access": 0,
    "technology": [
      "Javascript"
    ],
    "topic": [
      "Javascript",
      "Email Course"
    ],
    "bodyContent": "<div class=\"col12\">\nThis is part 1 of the lesson<br />\n<a class=\"btn btn-primary btn-lg\"  href=\"https://ilovecodingorg/lessons/js-intro-part2\">Go to part 2 of this lesson</a>\n</div>"
  },
  {
    "_id": "5afae29c6be0670014043bd9",
    "slug": "installing-android-tools-on-mac-for-react-native-part-4",
    "title": "Installing Android tools on Mac for React Native - Part 4",
    "subTitle": "",
    "thumbnail": "react-native/5-4-android-sdk.jpg",
    "bodyContent": "",
    "createdMsec": 1.526391452174E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243246",
    "duration": "2:40",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:37:32.174Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:26:23.153Z"
    },
    "updatedMsec": 1.526469983153E+12
  },
  {
    "_id": "5afaea8d6be0670014043bec",
    "slug": "class-method-this-keyword",
    "title": "Class methods & 'this' keyword in React",
    "subTitle": "",
    "thumbnail": "react-native/19-class-method-n-this.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393485581E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269745104",
    "duration": "6:31",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:11:25.581Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T10:52:49.612Z"
    },
    "updatedMsec": 1.526467969612E+12
  },
  {
    "_id": "5a74a55322183100147c5dba",
    "slug": "project-building-a-timer-app-with-react-part3",
    "title": "Project: Building a Timer App with React - Part 3",
    "subTitle": "Let's build a practical Timer App with React.",
    "thumbnail": "react/react18-project-timer.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517593939108E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/253886527",
    "duration": "6:12",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:52:19.108Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:48:37.518Z"
    },
    "updatedMsec": 1.522864117518E+12
  },
  {
    "_id": "5afaec806be0670014043bf3",
    "slug": "react-lifecycle-unmount",
    "title": "The React Lifecylce when component Unmounts",
    "subTitle": "",
    "thumbnail": "react-native/25-lifecycle-unmount.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393984327E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269251226",
    "duration": "3:34",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:19:44.327Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afb6fc007ff3d0014610fec",
    "slug": "crypto-price-checker-project-setup",
    "title": "Crypto Price Checker: Project setup",
    "subTitle": "",
    "thumbnail": "react-native/45-crypto-setup.jpg",
    "bodyContent": "",
    "createdMsec": 1.526427584045E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269745017",
    "duration": "3:11",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:39:44.045Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afb75e107ff3d0014610ff6",
    "slug": "crypto-price-checker-showing-the-loading-indicator",
    "title": "Crypto Price Checker: Showing the loading indicator",
    "subTitle": "",
    "thumbnail": "react-native/53-crypto-loading.jpg",
    "bodyContent": "",
    "createdMsec": 1.526429153262E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269277207",
    "duration": "3:04",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-16T00:05:53.262Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5b882602c665e40014cad61f",
    "slug": "html-list",
    "title": "Making lists in HTML via <ul>, <ol> and <li> elements",
    "subTitle": "Lear to make numbered (ordered) or bulleted (unordered) lists in HTML.",
    "createdIso": {
      "$date": "2018-08-30T17:14:42.154Z"
    },
    "createdMsec": 1.535649282154E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972509",
    "duration": "5:36",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:11:51.674Z"
    },
    "updatedMsec": 1.54117892192E+12,
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/15-list",
    "sourceUrl": "source/htmlcss2/15-list.zip"
  },
  {
    "_id": "5b8825a5c665e40014cad61b",
    "slug": "h1-i-strong",
    "title": "The  <h1>...<h6>, <i> and <strong> elements",
    "subTitle": "These elements help us format our text in our webpage",
    "createdIso": {
      "$date": "2018-08-30T17:13:09.055Z"
    },
    "createdMsec": 1.535649189055E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972329",
    "duration": "5:18",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-03-24T19:54:11.34Z"
    },
    "updatedMsec": 1.541178848612E+12,
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<h2>Video Lesson Transcript</h2>\n\n<p>So far we were just understanding the basics. Now things are going to get easier, because now we only need to look at the different elements that we have. We will be covering 4 elements in this lesson, and then we will be looking at the rest.</p>\n\n<h3>From &lt;h1&gt; to &lt;h6&gt;</h3>\n\n<p>One of the very important elements in HTML is the <code>&lt;h1&gt;</code> all the way to <code>&lt;h6&gt;</code> elements. <strong>h1</strong> stands for header one, so it's the main header for a page. For example if you are reading a book, the main title for that particular chapter, consider that to be <code>&lt;h1&gt;</code>, and a sub header could be an <code>&lt;h2&gt;</code>, and so on uptill <code>&lt;h6&gt;</code>. Say that I am writing an \"about me\" page:</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      This is my first page\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;\n    Hi my name is Aziz\n    &lt;/h1&gt;\n    &lt;p&gt;\n      Hi this is my first para\n    &lt;/p&gt;\n    &lt;p&gt;\n      this is the second para\n    &lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>And as result:</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/h1-6-i-strong/h1-element-usage.jpg\" class=\"img-fluid border w-75\" alt=\"usage of the <h1> element\">\n\n<p>By doing that, you can see automatically that just because I mentioned <code>&lt;h1&gt;</code>, it is a very big text.</p>\n\n<p>Now if I want to write a sub-header, that's going to be <code>&lt;h2&gt;</code>. So we can simply put it under the <code>&lt;h1&gt;</code>.</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      This is my first page\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;\n    Hi my name is Aziz\n    &lt;/h1&gt;\n    &lt;h2&gt;\n    This is my bio page\n    &lt;/h2&gt;\n    &lt;p&gt;\n      Hi this is my first para\n    &lt;/p&gt;\n    &lt;p&gt;\n      this is the second para\n    &lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre> <img src=\"//a.ilovecoding.org/img/htmlcss2/h1-6-i-strong/h2-element-usage.jpg\" class=\"img-fluid border w-75\" alt=\"usage of the <h2> element\">\n\n<p>And you can see that the <code>&lt;h2&gt;</code> text is slightly smaller, and I can do the same thing all the way from <code>&lt;h1&gt;</code> to <code>&lt;h6&gt;</code> which are valid tags in HTML.</p>\n\n<p>I am gonna simply replicate this code, so for this you can do <kbd>alt</kbd> + <kbd>shift</kbd> + <kbd>↓</kbd> for duplicating the lines, so I can simply rename them.</p>\n\n<p>There is another handy shortcut in <em>Visual Studio Code</em>. I can simply select some text and do <kbd>command</kbd> + <kbd>D</kbd> (<kbd>Ctrl</kbd> + <kbd>D</kbd> on Windows), and it's going to select both tag names for example. Let me show you what I mean:</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/h1-6-i-strong/vs-shortcut-example.jpg\" class=\"img-fluid w-75\" alt=\"example of usage of the 'command' + 'D' shortcut\">\n\n<p>This way I can simply edit both of them together, like such:</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/h1-6-i-strong/editing-tags.jpg\" class=\"img-fluid w-75\" alt=\"editing the tags with the help of the 'command' + 'D' shortcut\">\n\n<p>Pretty handy, right? And that's the beauty of a good text editor. Others are good as well: <strong>Sublime Text</strong> introduced, I believe, this particular shortcut, and <em>Visual Studio Code</em> has copied that.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/h1-6-i-strong/h1-to-h6.jpg\" class=\"img-fluid border w-75\" alt=\"Using all the 6 heading tags\">\n\n<p>If you save and refresh, you will see all our headings from <code>&lt;h1&gt;</code> to <code>&lt;h6&gt;</code>. These are different tags, with different automatic formatting of the text and it's sizes.</p>\n\n<p>That's very handy when you are writing multiple content, you can format them differently.</p>\n\n<h3>The &lt;strong&gt; and &lt;i&gt; elements</h3>\n\n<p>Next, let's see if you want to make your text <em>italic</em> or <strong>bold</strong>, you are going to use the <code>&lt;i&gt;</code> or the <code>&lt;strong&gt;</code> element.</p>\n\n<p>Let's say that you have the following two paragraphs in your code:</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      This is my first page\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;\n      Hi my name is Aziz &lt;\n     /h1&gt;\n    &lt;h2&gt;\n      This is my bio page\n    &lt;/h2&gt;\n    &lt;p&gt;\n      Hi this is my first para\n    &lt;/p&gt;\n    &lt;p&gt;\n      this is the &lt;em&gt;second&lt;/em&gt; para\n    &lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>For this, we want to make the word \"<em>second</em>\" from the second paragraph italic.</p>\n\n<p>So for this we simply put the word <em>second</em> inside the <code>&lt;i&gt;</code> element.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/h1-6-i-strong/i-element-usage.jpg\" class=\"img-fluid border w-75\" alt=\"example of usage of the <i> element\">\n\n<p>Save, refresh, and you will see that this is italic now.</p>\n\n<p>If we want to make the word \"<em>first</em>\" from the first paragraph bold, we can simply wrap the <code>&lt;strong&gt;</code> element around it.</p>This is our code so far: <pre class=\"prettyprint precode linenums:15\">&lt;p&gt;\n  Hi this is my &lt;strong&gt;first&lt;/strong&gt; para\n&lt;/p&gt;\n&lt;p&gt;\n  this is the &lt;i&gt;second&lt;/i&gt; para\n&lt;/p&gt;\n</pre> <img src=\"//a.ilovecoding.org/img/htmlcss2/h1-6-i-strong/strong-and-i.jpg\" class=\"img-fluid border w-75\" alt=\"using <strong> and <i> elements\">\n\n<p>Save, refresh, and you will see that the word \"first\" is now bold.</p>\n\n<p>Now if you want to make the word \"<em>this</em>\" italic and bold, you can use <strong>both</strong> of these elements.</p>\n\n<pre class=\"prettyprint precode linenums:15\">&lt;p&gt;\n  Hi &lt;strong&gt;&lt;i&gt;this&lt;/i&gt;&lt;/strong&gt; is my &lt;strong&gt;first&lt;/strong&gt; para\n&lt;/p&gt;\n&lt;p&gt;\n  this is the &lt;i&gt;second&lt;/i&gt; para\n&lt;/p&gt;\n</pre> <img src=\"//a.ilovecoding.org/img/htmlcss2/h1-6-i-strong/using-both-strong-and-i.jpg\" class=\"img-fluid border w-75\" alt=\"Using both <strong> and <i> elements at the same time\">\n\n<p>You can see that this is bold, and also italic. So notice the way I am doing this; the <code>&lt;strong&gt;</code> is the outer element, and inside there is a nested <code>&lt;i&gt;</code> element, and inside it we have the child for the <code>&lt;i&gt;</code>, which is the word \"this\".</p>\n\n<p class=\"alert alert-info\">This particular format that I am doing is very important. HTML is very hierarchical, so it's <strong>nested</strong>.</p>\n\n<p>Of course one element can have multiple children, for example if I have some text like this:</p>\n\n<pre class=\"prettyprint precode linenums:15\">&lt;p&gt;\n  Hi &lt;strong&gt;&lt;i&gt;this&lt;/i&gt; something else &lt;/strong&gt; is my &lt;strong&gt;first&lt;/strong&gt; para\n&lt;/p&gt;\n&lt;p&gt;\n  this is the &lt;i&gt;second&lt;/i&gt; para\n&lt;/p&gt;\n</pre>\n  \n<p>you will notice that the <strong>\"something else\"</strong> is bold, but only the <strong><i>\"this\"</i></strong> is italic and bold.</p>\n\n<p>It may be very difficult for you to read right now what code I wrote, that's why formatting the code comes in very handy, so I am just going to format this with the <strong>indent</strong> format.</p>\n\n<pre class=\"prettyprint precode linenums:15\">&lt;p&gt;\n  Hi\n  &lt;strong&gt;\n    &lt;i&gt;this&lt;/i&gt;\n    something else\n  &lt;/strong&gt; is my &lt;strong&gt;first&lt;/strong&gt; para\n&lt;/p&gt;\n&lt;p&gt;\n  this is the &lt;i&gt;second&lt;/i&gt; para\n&lt;/p&gt;\n</pre>\n\n<p>You see, now it's more obvious, so that's how you do it.</p>\n\n<p>In the next lesson we are going to learn more about the <code>&lt;a&gt;</code>, <code>&lt;div&gt;</code>, and <code>&lt;span&gt;</code>elements. Now you already know about <code>&lt;h1&gt;</code> to <code>&lt;h6&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;i&gt;</code>, and <code>&lt;strong&gt;</code>.</p>\n\n<p>I will talk to you in the next lesson.</p>\n",
    "demoUrl": "demo/htmlcss2/11-h1-i-strong",
    "sourceUrl": "source/htmlcss2/11-h1-i-strong.zip"
  },
  {
    "_id": "5b881f26c665e40014cad618",
    "slug": "common-elements-cheatsheet",
    "title": "Common HTML Elements (Cheatsheet included)",
    "subTitle": "HTML has seemingly endless HTML elements - here are the most common ones you need to know.",
    "createdIso": {
      "$date": "2018-08-30T16:45:26.663Z"
    },
    "createdMsec": 1.535647526663E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286971946",
    "duration": "3:26",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<h3>Video Transcript</h3>\n\n<p>So far you have been writing HTML elements but one question may arise is that <strong>How do I remember all of these elements?</strong> That is a great question since there are many of them.</p>\n\n<a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img src=\"//a.ilovecoding.org/img/htmlcss2/common-elements/commonly-used-html.jpg\" class=\"img-fluid border w-75\" alt=\"Commonly used HTML elements\"></a>\n\n<p>As you can see above, In the cheat sheet provided, you have a section with the <strong>most commonly used HTML elements</strong>.</p>\n\n<p>In this course, we are going to go through all of them, and just with these elements, you are going to have enough knowledge to make fancy websites.</p>\n\n<p>Besides this <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">HTML Cheatsheet</a>, there are two additional resources I want to share with you:</p>\n\n<h2>Useful references</h2>\n\n<h3>Mozilla</h3>\n\n<p>Besides the cheat sheets provided if you want even more information, just google for <em>\"HTML reference\"</em>.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/common-elements/mozilla-reference-link.jpg\" class=\"img-fluid border w-75\" alt=\"Link on Google for the Mozilla HTML reference\">\n\n<p>You'll find the third result to be the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\"><strong>Mozilla HTML elements reference</strong></a>, so just ignore all the previous ones.</p>\n\n<p>Basically, <strong>Mozilla</strong> is the same organization that created the <strong>Firefox browser</strong>. They are also collecting a lot of information and building a great reference of many things related to technology and web development, including <strong>JavaScript</strong>, <strong>HTML</strong>, <strong>CSS</strong>, and others as well.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/common-elements/mozilla-doc-website.jpg\" class=\"img-fluid border w-75\" alt=\"Interface of Mozilla documentation website\">\n\n<p>If you simply scroll down after accessing the page, you'll be able to see the different elements that you can use in HTML as displayed above. There is information about the <code>&lt;html&gt;</code> element, <code>&lt;link&gt;</code>, <code>&lt;meta&gt;</code>, <code>&lt;title&gt;</code>, <code>&lt;style&gt;</code>, <code>&lt;body&gt;</code>, and many others organized by different sections of usage.</p>\n\n<p>Of course, right now it may not make a lot of sense to you but as you finish the course all of this is going to make sense, and you can navigate through different explanations on the elements and have a pretty handy example of use of that element. But worry about it right now, it is just a reference that you can use it later.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/common-elements/viewing-article-element.jpg\" class=\"img-fluid border w-75\" alt=\"Viewing the article element as an example\">\n\n<p>After clicking any element that you want to know some information about, you'll be able to see the code of a very handy example of how to use that element, and what it's going to do.</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\">Mozilla HTML Reference</a> is a very handy resource that you should bookmark.</p>\n\n<p>One important rules I want to emphasis on is:</p>\n\n<blockquote class=\"blockquote\">\n    Do not want to commit to memory anything that can be looked up in a book.\n    <footer class=\"blockquote-footer\">\n        Albert Einstein\n    </footer>\n</blockquote>\n\n<p>...and this same concept applies for HTML and any other coding language that you are learning. You do not want to memorize these things. I have never memorized it. Whenever I want to look up something I simply google it, and look at the authentic sources just like <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\">Mozilla Documentation</a> or some other website depending on the technology that I'm looking into.</p>\n\n<h3>Stack Overflow</h3>\n<p>Another very handy resource to know about is <a href=\"https://stackoverflow.com/\">Stack Overflow</a>. <a href=\"https://stackoverflow.com/\">Stack Overflow</a> is a question and answer website for developers, and it's another great reference that you can use.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/common-elements/stackoverflow-link.jpg\" class=\"img-fluid border w-75\" alt=\"Link of Stackoverflow website\">\n\n<p>You can look for your questions directly in the search box of the website as shown above in the results, or you can google for <em>\"stackoverflow\"</em> and the question that you have.</p>\n\n<p>Let's say that you have a question about the HTML paragraph tag, this is how you should search on Google to see the results from Stack Overflow:</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/common-elements/google-question-stackoverflow.jpg\" class=\"img-fluid border w-75\" alt=\"Googling for stackoverflow question\">\n\n<p>Do not attempt to memorize it, these concepts are automatically going to ingest in your brain the more you use it. The more you practice, the more it will become second nature.</p>\n\n<p>That's pretty much it, I will talk to you in the next lesson.</p>\n",
    "updatedIso": {
      "$date": "2019-03-17T01:41:54.109Z"
    },
    "updatedMsec": 1.541178811598E+12
  },
  {
    "_id": "5ab01de40288fc00145e24ce",
    "slug": "install-mongodb-mac-brew",
    "title": "Installing MongoDB on a mac with homebrew",
    "subTitle": "",
    "thumbnail": "mongodb/mongodb-7-install-brew.jpg",
    "bodyContent": "",
    "createdMsec": 1.521491428378E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260483695",
    "duration": "4:10",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:30:28.378Z"
    },
    "technology": [
      "Database"
    ],
    "topic": [
      "Database"
    ]
  },
  {
    "_id": "5ab035430288fc00145e24dd",
    "slug": "express-middlewares",
    "title": "Understanding Middlewares in Express.js",
    "subTitle": "",
    "thumbnail": "express/express-9-middleware.jpg",
    "bodyContent": "",
    "createdMsec": 1.521497411302E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260486924",
    "duration": "5:15",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T22:10:11.302Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End"
    ],
    "updatedIso": {
      "$date": "2019-02-13T18:16:32.269Z"
    }
  },
  {
    "_id": "5ac3e3dbb9773a0014e29f34",
    "slug": "notetaking-delete-note",
    "title": "Delete Note (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p9-delete-notes.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787291943E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262892338",
    "duration": "4:01",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:28:11.943Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:24.033Z"
    }
  },
  {
    "_id": "5a74a56d22183100147c5dbb",
    "slug": "project-building-a-timer-app-with-react-part4",
    "title": "Project: Building a Timer App with React - Part 4",
    "subTitle": "Let's build a practical Timer App with React.",
    "thumbnail": "react/react18-project-timer.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517593965327E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/253886726",
    "duration": "7:49",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:52:45.327Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-09-12T13:59:19.882Z"
    },
    "updatedMsec": 1.536760759883E+12
  },
  {
    "_id": "5afadad8364a340014b75d06",
    "slug": "prerequisites-react-native",
    "title": "Prerequisites to React Native",
    "subTitle": "",
    "thumbnail": "react-native/1-prerequisite.jpg",
    "bodyContent": "",
    "createdMsec": 1.526389464483E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269242819",
    "duration": "2:48",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:04:24.483Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afaebeb6be0670014043bf1",
    "slug": "react-lifecycle-state-change",
    "title": "The React Lifecylce when State changes",
    "subTitle": "",
    "thumbnail": "react-native/23-lifecycle-state.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393835091E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269250435",
    "duration": "6:00",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:17:15.09Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5a7273cfb736b600141cd232",
    "slug": "working-with-lists-in-react",
    "title": "Working with Lists in React",
    "subTitle": "Learn how to work with lists of items in React",
    "thumbnail": "react/react14-list.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517450191878E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-list",
    "videoSource": "//player.vimeo.com/video/253695418",
    "duration": "12:48",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:56:31.878Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T21:42:28.604Z"
    },
    "updatedMsec": 1.522878148604E+12
  },
  {
    "_id": "5afb6fdd07ff3d0014610fed",
    "slug": "crypto-price-checker-setting-up-project-files",
    "title": "Crypto Price Checker: Setting up project files",
    "subTitle": "",
    "thumbnail": "react-native/46-crypto-project-files.jpg",
    "bodyContent": "",
    "createdMsec": 1.526427613928E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269740860",
    "duration": "5:07",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:40:13.927Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5b881f05c665e40014cad615",
    "slug": "what-html-looks-like",
    "title": "What does HTML look like?",
    "subTitle": "Lets look at the basic building blocks of HTML.",
    "createdIso": {
      "$date": "2018-08-30T16:44:53.961Z"
    },
    "createdMsec": 1.535647493961E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286971808",
    "duration": "2:46",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:02:36.546Z"
    },
    "updatedMsec": 1.541178629581E+12
  },
  {
    "_id": "5b37b00010a28c7cec9f25f6",
    "slug": "html-live",
    "title": "Websites, HTML and Putting Your Website Live",
    "subTitle": "This is going to be a jam-packed lesson. We will see how websites are made, we'll learn a little HTML and we will put our website live on the internet; all while using the tools that professional developers use.",
    "demoUrl": "http://awesome-site.netlify.com",
    "createdIso": {
      "$date": "2018-06-30T03:23:53.754Z"
    },
    "createdMsec": 1.530329033755E+12,
    "updatedIso": {
      "$date": "2018-06-30T03:54:40.754Z"
    },
    "updatedMsec": 1.530330880754E+12,
    "level": 0.0,
    "active": true,
    "enabled": true,
    "videoSource": "277691278",
    "duration": "15:25",
    "access": 0,
    "technology": [
      "HTML"
    ],
    "topic": [
      "Email Course",
      "HTML"
    ],
    "bodyContent": "<div class=\"col12\">\n<h2>Resources</h2>\n<ul>\n<li>\n    <a href=\"https://codevisualstudio.com/\">VS Code</a>\n</li>\n<li>\n    <a href=\"https://netlify.com/\">Netlify</a>\n</li>\n</ul>\n</div>"
  },
  {
    "_id": "5afaed956be0670014043bf8",
    "slug": "flatlist-2",
    "title": "Using FlatList in React Native to show content - Part 2",
    "subTitle": "",
    "thumbnail": "react-native/29-flastlist-more.jpg",
    "bodyContent": "",
    "createdMsec": 1.526394261815E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269267764",
    "duration": "3:05",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:24:21.814Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T10:55:41.48Z"
    },
    "updatedMsec": 1.526468141481E+12
  },
  {
    "_id": "5afb65706be0670014043bfd",
    "slug": "platform-2",
    "title": "Have different behavior on iOS & Android with React Native - Part 2",
    "subTitle": "",
    "thumbnail": "react-native/34-platform-files.jpg",
    "bodyContent": "",
    "createdMsec": 1.526424944313E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269265842",
    "duration": "4:56",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T22:55:44.313Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5b881f42c665e40014cad61a",
    "slug": "html-basic-markup",
    "title": "Basic Markup of HTML",
    "subTitle": "All webpages on the internet has this basic markup. Lets see what this markup looks like.",
    "createdIso": {
      "$date": "2018-08-30T16:45:54.308Z"
    },
    "createdMsec": 1.535647554308E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972028",
    "duration": "5:18",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-03-24T19:54:00.683Z"
    },
    "updatedMsec": 1.541178834721E+12,
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<h2>Video Lesson Transcript</h2>\n\n<h3>The &lt;!DOCTYPE html&gt; Element</h3>\n\n<p>Now let's write our first HTML page with the proper format, which is the basic markup of every HTML page. So we are going to start off by typing the <code>&lt;!DOCTYPE html&gt;</code>. Basically, the <em>DOCTYPE</em> tells the browser that \"Hey browser, process my HTML with the latest version of HTML, which is HTML5\". So the browser knows whatever code it read, it's going to be read the latest format.</p>\n\n<p>HTML has multiple versions and subversions, but the latest one is now HTML5. So basically if you have an older website, it's going to have a different number version mentioned in the <code>&lt;!DOCTYPE&gt;</code>. But since HTML5 is very common now, we are going to use it with the <code>&lt;!DOCTYPE html&gt;</code> and it will tell the browser to use the latest version.</p>\n\n<p>So let's remove our previous code and write this particular element.</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n</pre>\n\n<p>Before we move further, notice that this is a very special element, it does not have a <em>/</em> (slash) for closing the element, and it also has an <code>!</code> (exclamation point) at the beginning. This is an unique exception, there is no other element like such in HTML. With that said, let's start with our normal HTML now.</p>\n\n<h3>The Basics</h3>\n\n<p>So we start off putting our <code>&lt;html&gt;</code> element first, with a <strong>mandatory</strong> attribute called <code>lang</code>. \"lang\" stands for <strong>language</strong>, which is the language that this HTML document is written in. For this value we put <em>\"en\"</em>, for English.</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    \n&lt;/html&gt;\n</pre>\n\n<p>Similarly when there is an opening tag, it will always have a closing tag, which is <code>&lt;/html&gt;</code>. And inside this HTML we need two children only, nothing else. These are the <code>&lt;head&gt;</code>, and the <code>&lt;body&gt;</code>.</p>\n\n<h3>The &lt;title&gt; element</h3>\n\n<p>As you already know from our previous lesson, whatever the <code>&lt;body&gt;</code> element has inside, will show up on the page, and anything inside the <code>&lt;head&gt;</code> are basically options for that entire web page.</p>\n\n<p>One important element for an HTML document, is the <code>&lt;title&gt;</code>. In this element we define the title of this page, so let's say that my page title is \"This is my first page\".</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      This is my first page\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n        \n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>This is the result:</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/basic-markup/title-element-usage.jpg\" class=\"img-fluid border w-75\" alt=\"usage of <title> element\">\n\n<p>Notice that what we exactly wrote in the code shows up in the title area.</p>\n\n<p>This area is very important. Let's say if you Google \"<em>anything here</em>\".</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/basic-markup/google-search-for-title.jpg\" class=\"img-fluid border w-75\" alt=\"searching on Google a random text to check the title of the page\">\n\n<p>Over here you can see that the description for one of the Google results is <em>\"Scratch Studio - add anything here!\"</em>.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/basic-markup/page-title.jpg\" class=\"img-fluid border w-75\" alt=\"The title of the page from the google results\">\n\n<p>If you go to that page, you can see that <em>\"Scratch Studio - add anything here!\"</em> is actually the <strong>title</strong> of that page. It's not mentioned anywhere else on the page and there is no other text like such, it's only in that section shown above.</p>\n\n<p>Search engines put a lot of emphasis on what the title of the page is. And whatever it is, it's going to show up in the search engines per page. So every HTMl page is treated separately by your web servers, and also Google.</p>\n\n<p>Google does not index web sites, it actually indexes pages, one at the time. So you want to make sure that your title is very relevant, when you are writing HTML pages.</p>\n\n<h3>Elements inside the &lt;body&gt;</h3>\n\n<p>Moving further, let's make two paragraphs inside our <code>&lt;body&gt;</code> element. For this we simply use the <code>&lt;p&gt;</code> tags, and write some text between them, like so:</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      This is my first page\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;\n      Hi this is my first para\n    &lt;/p&gt;\n    &lt;p&gt;\n      this is the second para\n    &lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>The result looks like this:</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/basic-markup/p-element-usage.jpg\" class=\"img-fluid border\" alt=\"usage of <p> element\">\n\n<p>And you can see that the first and second paragraphs are created.</p>\n\n<p>Notice that there is a natural space in between the paragraphs, and the reason is that when you are wrapping multiple elements with the <code>&lt;p&gt;</code> separately, the paragraph element is going to create a natural space.</p>\n\n<p>Different elements have different attributes, and they treat the content differently. That's why we have multiple elements, and they all treat the content slightly differently.</p>\n\n<p>With that said, we have completed most of the understanding of how HTML works and it's basic elements. You learned what the name of the page should be, how to write elements, what the basic markup of the content should be, and now the rest are just details which we will cover one at the time and create beautiful pages.</p>\n\n<p>I will talk to you in the next lesson.</p>",
    "demoUrl": "demo/htmlcss2/10-basic-markup",
    "sourceUrl": "source/htmlcss2/10-basic-markup.zip"
  },
  {
    "_id": "5ac3e3bbb9773a0014e29f33",
    "slug": "notetaking-get-note",
    "title": "Get Note (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p8-find-notes.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787259462E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262892059",
    "duration": "5:54",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:27:39.462Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:21.804Z"
    }
  },
  {
    "_id": "5a74a68422183100147c5dbf",
    "slug": "project-song-search-app-part2",
    "title": "Project: Building a Song Search App with React - Part 2",
    "subTitle": "Learn how to build a fully functional song search app with React. We'll integrate our app with the iTunes API to find song",
    "thumbnail": "react/react21-project-song-search.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517594244193E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/254001836",
    "duration": "8:26",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:57:24.193Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End",
      "Project"
    ],
    "updatedIso": {
      "$date": "2018-04-04T17:49:40.176Z"
    },
    "updatedMsec": 1.522864180176E+12
  },
  {
    "_id": "5ac3e808b9773a0014e29f43",
    "slug": "notetaking-passportjs-check-user",
    "title": "Passport.js: Check User (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p24-passport-check-user.jpg",
    "bodyContent": "",
    "createdMsec": 1.52278836037E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893720",
    "duration": "2:47",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:46:00.37Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:16:04.826Z"
    }
  },
  {
    "_id": "5ab01a1b0288fc00145e24cb",
    "slug": "organizing-data-part3",
    "title": "How to Organize Data in a Database - Part 3",
    "subTitle": "",
    "thumbnail": "mongodb/mongodb-4-how-db-works-3.jpg",
    "bodyContent": "",
    "createdMsec": 1.521490459965E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260483465",
    "duration": "2:46",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:14:19.965Z"
    },
    "technology": [
      "Database",
      ""
    ],
    "topic": [
      "Database"
    ],
    "updatedIso": {
      "$date": "2018-03-19T20:18:03.412Z"
    },
    "updatedMsec": 1.521490683412E+12
  },
  {
    "_id": "5ac3e7bcb9773a0014e29f41",
    "slug": "notetaking-passportjs-config",
    "title": "Passport.js: Config (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p22-passport-config.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788284211E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893638",
    "duration": "3:56",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:44:44.211Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:53.974Z"
    }
  },
  {
    "_id": "5ac3e82fb9773a0014e29f44",
    "slug": "notetaking-passportjs-refactor",
    "title": "Passport.js: Refactor Code (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p25-passport-refactor.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788399291E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893744",
    "duration": "3:14",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:46:39.291Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:16:08.491Z"
    }
  },
  {
    "_id": "5afb69da07ff3d0014610fe7",
    "slug": "react-navigation-passing-params-to-screens",
    "title": "React-Navigation: Passing params to screens",
    "subTitle": "",
    "thumbnail": "react-native/40-react-navigation-params.jpg",
    "bodyContent": "",
    "createdMsec": 1.526426074248E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269273629",
    "duration": "5:08",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:14:34.248Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afb69ae07ff3d0014610fe6",
    "slug": "react-navigation-understanding-the-stack",
    "title": "React-Navigation: Understanding the Stack",
    "subTitle": "",
    "thumbnail": "react-native/39-react-navigation-stack.jpg",
    "bodyContent": "",
    "createdMsec": 1.526426030067E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269273028",
    "duration": "2:40",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:13:50.065Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5afae8116be0670014043be3",
    "slug": "styling-react-native-app",
    "title": "Styling your React Native App - Part 1",
    "subTitle": "",
    "thumbnail": "react-native/13-1-styles.jpg",
    "bodyContent": "",
    "createdMsec": 1.526392849525E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269245300",
    "duration": "3:28",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:00:49.525Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T10:50:31.033Z"
    },
    "updatedMsec": 1.526467831033E+12
  },
  {
    "_id": "5b8825dcc665e40014cad61c",
    "slug": "anchor-element",
    "title": "Learn to link webpages via the anchor <a> element",
    "subTitle": "Link your webpages with internal and external pages - on the internet.",
    "createdIso": {
      "$date": "2018-08-30T17:14:04.856Z"
    },
    "createdMsec": 1.535649244856E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972388",
    "duration": "4:04",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-03-24T19:54:33.296Z"
    },
    "updatedMsec": 1.541178861465E+12,
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<h2>Video Lesson Transcript</h2>\n\n<p>All right, now we are going to learn about a new element, called <code>&lt;a&gt;</code> element or <strong>anchor</strong> element. This is used basically to link one page to another, so let's do that.</p>\n\n<h3>The <code>&lt;a&gt;</code> Anchor Element</h3>\n\n<p>So over here I am going to simply remove a lot of the previous code we did, so our page is simple. It's easier for us to read the code.</p>\n\n<p>I am going to simply create an <code>&lt;a&gt;</code> element, and inside I am going to put some text as children. For the text I am gonna to say \"Click me please\".</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      This is my first page\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hi My name is Aziz&lt;/h1&gt;\n    &lt;a href=\"\"&gt;Click me please&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>Now you notice that when I created this element, <em>VS Code</em> automatically pre-populated this particular attribute called <code>href</code>.</p>\n\n<p>Now basically what happens is that whenever some user clicks on this particular text, this page is going to go to whatever is mentioned in the <code>href</code> attribute.</p>\n\n<p>So let's say if you want to go to <em>Google.com</em>, you are going to simply put \"https://www.google.com\" as a value of the <code>href</code> attributre like such:</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      This is my first page\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hi My name is Aziz&lt;/h1&gt;\n    &lt;a href=\"https://www.google.com\"&gt;Click me please&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>Save, refresh, and you see that the link is over here.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/linking-a/a-element-usage.jpg\" class=\"img-fluid border w-75\" alt=\"Example of usage of the <a> element\">\n\n<p>Now if I hover over the text, I will see on my footer that it says the link, which is <em>google.com</em>. When you click the link, you will see the loading sign, and now it goes to <em>google.com</em>.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/linking-a/clicking-a-element.jpg\" class=\"img-fluid border w-75\" alt=\"Result after clicking the <a> element\">\n\n<p>Simple as that.</p>\n\n<h3>The <code>target</code> Attribute</h3>\n\n<p>Now this element has multiple options; let's say if I want to open this particular URL a new tab or a new window, not the same page. There is an option for that, which is called <code>target</code>.</p>\n\n<p>So I do <code>target=\"\"</code>, and the value you want to provide is <code>_blank</code>, like such:</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      This is my first page\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hi My name is Aziz&lt;/h1&gt;\n    &lt;a target=\"_blank\" href=\"https://www.google.com\"&gt;Click me please&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>Now when you do that you refresh, and when you click the link you will see that it opens in a new tab.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/linking-a/after-click-target-attr.jpg\" class=\"img-fluid border w-75\" alt=\"Result after clicking the <a> element with the '_blank' value for the target\">\n\n<p>This is very handy. Let's say if you have a web site, and you want to link to external pages for example <strong>Google</strong>.</p>\n\n<p>So let's say you are on your home page which is your personal web site, and you want to link to an external page; that is when this thing comes handy, and you do not want people to leave your web site.</p>\n\n<p>This is actually not a good practice to make all these links like that, but it's an option you have.</p>\n\n<h3>Internal Links</h3>\n\n<p>Now one more thing that I want to tell you, is that you cannot just link from the element to external pages, but it can also be internal pages of your web site.</p>\n\n<p>So let's say I am going to create a new page inside our web site. I am going to just simply create an <em>about</em> page. I am going to simply write some basic HTML.</p>\n\n<p>I am going to basically just copy the previous code from (<em>index.html</em>) and paste it in our <em>about</em> page. The title is going to be <em>\"about\"</em>, and I am going to put an <code>&lt;h1&gt;</code> with the text <em>\"this is my about page\"</em>.</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      About\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;This is my about page&lt;/h1&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>And now if I want to link from the home page to the about one, I can simply create another link.</p>\n\n<p>I am going to mention the name of that location where this particular page lives. So since this page called <em>about</em> and it's in the same directory as the <em>index</em> page, I can simply put in <em>about.html</em>, and for the text I can say <em>\"Go to about\"</em>.</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      About\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;This is my about page&lt;/h1&gt;\n\n    &lt;a href=\"about.html\"&gt;Go to about&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>Save, refresh, and now you see that link is over here.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/linking-a/internally-linking-pages.jpg\" class=\"img-fluid border w-75\" alt=\"Internally linking pages with the <a> element\">\n\n<p>Now, if I click this link it'll go to the <em>About</em> page, and from the <em>About</em> page we need to go back to the <em>Home</em> page.</p>\n\n<p>So I am going to create a link that directs to <em>\"index.html\"</em>, and for the text I am going to say <em>\"Go to home\"</em>.</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      About\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;This is my about page&lt;/h1&gt;\n    &lt;a href=\"index.html\"&gt;Go to home&lt;/a&gt; \n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n  \n<p>Save, refresh, and now <em>\"Go to home\"</em> goes over here:</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/linking-a/go-to-home.jpg\" class=\"img-fluid border w-75\" alt=\"Anchor link from the 'about' to the 'home' page\">\n\n<p>So that's pretty much it for this video about linking via the <code>&lt;a&gt;</code> element, and now in the next video I am going to tell you a little bit more about this <code>href</code> linking strategy.</p>\n\n<p>All right, I am going to talk to you in the next video.</p>",
    "demoUrl": "demo/htmlcss2/12-link",
    "sourceUrl": "source/htmlcss2/12-link.zip"
  },
  {
    "_id": "5afaec556be0670014043bf2",
    "slug": "react-lifecycle-props-change",
    "title": "The React Lifecylce when Props changes",
    "subTitle": "",
    "thumbnail": "react-native/24-lifecycle-props.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393941137E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269250846",
    "duration": "5:39",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:19:01.137Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5a7272e2b736b600141cd231",
    "slug": "react-component-lifecycle-part4",
    "title": "The React Component Lifecycle - Part 4",
    "subTitle": "Learn what happens within a React component when Props changes",
    "thumbnail": "react/react13-lifecycle-4.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517449954593E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-lifecycle/tree/props-change",
    "videoSource": "//player.vimeo.com/video/253695265",
    "duration": "6:30",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T01:52:34.593Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T21:37:18.299Z"
    },
    "updatedMsec": 1.522877838299E+12
  },
  {
    "_id": "5b883545c665e40014cad629",
    "slug": "intro-css",
    "title": "Intro to CSS - Making the webpages beautiful",
    "subTitle": "CSS is the language that beautifies our HTML web pages. Lets learn its basics.",
    "createdIso": {
      "$date": "2018-08-30T18:19:49.457Z"
    },
    "createdMsec": 1.535653189457E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287103790",
    "duration": "4:22",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:14:22.563Z"
    },
    "updatedMsec": 1.541180189463E+12,
    "demoUrl": "",
    "sourceUrl": ""
  },
  {
    "_id": "5ab01eaa0288fc00145e24d1",
    "slug": "mongodb-update-docs",
    "title": "Updating Documents with MongoDB",
    "subTitle": "",
    "thumbnail": "mongodb/mongodb-10-update.jpg",
    "bodyContent": "",
    "createdMsec": 1.521491626073E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260484784",
    "duration": "6:51",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:33:46.073Z"
    },
    "technology": [
      "Database"
    ],
    "topic": [
      "Database"
    ]
  },
  {
    "_id": "5ab01e180288fc00145e24cf",
    "slug": "install-mongodb-mac-manually",
    "title": "Installing MongoDB on a mac - Manually",
    "subTitle": "",
    "thumbnail": "mongodb/mongodb-8-install-manual.jpg",
    "bodyContent": "",
    "createdMsec": 1.521491480826E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "",
    "videoSource": "//player.vimeo.com/video/260484102",
    "duration": "4:13",
    "access": 0,
    "createdIso": {
      "$date": "2018-03-19T20:31:20.826Z"
    },
    "technology": [
      "Database"
    ],
    "topic": [
      "Database"
    ]
  },
  {
    "_id": "5ac3e790b9773a0014e29f40",
    "slug": "notetaking-passportjs-intro",
    "title": "Passport.js: Intro (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p21-passport-intro.jpg",
    "bodyContent": "",
    "createdMsec": 1.522788240522E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893628",
    "duration": "2:36",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:44:00.522Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:51.301Z"
    }
  },
  {
    "_id": "5afae1946be0670014043bd5",
    "slug": "installing-ios-tools-on-mac-for-react-native-part-2",
    "title": "Installing iOS tools on Mac for React Native - Part 2",
    "subTitle": "",
    "thumbnail": "react-native/4-2-xcode.jpg",
    "bodyContent": "",
    "createdMsec": 1.526391188934E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269243030",
    "duration": "1:24",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:33:08.934Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:25:52.297Z"
    },
    "updatedMsec": 1.526469952297E+12
  },
  {
    "_id": "5afaea546be0670014043beb",
    "slug": "class-based-components",
    "title": "Creating a Class-based React component",
    "subTitle": "",
    "thumbnail": "react-native/18-class-components.jpg",
    "bodyContent": "",
    "createdMsec": 1.526393428145E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269248776",
    "duration": "5:24",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T14:10:28.145Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5ac3e8e4b9773a0014e29f47",
    "slug": "notetaking-note-author-rights-part1",
    "title": "Note Author Rights - Part 1 (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p28-authorization.jpg",
    "bodyContent": "",
    "createdMsec": 1.52278858096E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893842",
    "duration": "7:04",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:49:40.959Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:16:18.578Z"
    }
  },
  {
    "_id": "5afb701e07ff3d0014610fef",
    "slug": "crypto-price-checker-getting-different-crypto-price-from-api",
    "title": "Crypto Price Checker: Getting different crypto price from API",
    "subTitle": "",
    "thumbnail": "react-native/48-1-crypto-getting-different-prices.jpg",
    "bodyContent": "",
    "createdMsec": 1.526427678776E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269741216",
    "duration": "4:26",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T23:41:18.776Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5b881ed9c665e40014cad613",
    "slug": "first-webpage",
    "title": "Code your first webpage",
    "subTitle": "Code your very first web page. Learn about file formats, plus how the browser reads your files.",
    "createdIso": {
      "$date": "2018-08-30T16:44:09.884Z"
    },
    "createdMsec": 1.535647449884E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286971711",
    "duration": "3:59",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "demoUrl": "demo/htmlcss2/3-first-webpage",
    "sourceUrl": "source/htmlcss2/3-first-webpage.zip",
    "updatedIso": {
      "$date": "2022-05-23T20:40:35.339Z"
    },
    "updatedMsec": 1.541178610982E+12,
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<h2>Video Transcript</h2>\n\n\n\n  <body>\n    <h3>Lesson 3: Code Your First Web Page</h3>\n    <p> Okay, okay, okay! In this video, we are going to create our first <strong>HTML</strong>\n      page. So let's get started. I am going to go on my desktop. Create a\n      folder, and I am just going to call it <code>my first</code> or <code>first-page</code>.\n      Alright, I am going to drag and drop this folder, and VS Code is going to\n      restart and put our folder over here.</p>\n    <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/htmlcss2/3-first-webpage/drag-and-drop.jpg\"\n\n      alt=\"Drag Folder in VS\">\n    <p>I am going to minimize this so I do not have to see all that different\n      text. So over here, I am going to create our first page. I am going to\n      call it anything. I can call it <code>home.html</code>. I can call it <code>aziz.html</code>,\n      and I can call it whatever. But for a standard for the web, the first page\n      of a website is always called<span style=\"font-family: monospace;\"> </span><strong><code>index</code></strong>,\n      so I am just going to call it <code>index.html</code>. </p>\n    <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/htmlcss2/3-first-webpage/create-first-page.jpg\"\n\n      alt=\" Create First Page\">\n    <p> Now, we are calling it <code>.html</code> because it is the extension\n      of that particular file. Just like in the world of computers, when you\n      create a file, which is a music file, you will have a <code>song.mp4</code>\n      or <code>mp3</code>. <code>mp3</code> is for audio, and <code>mp4</code>\n      is for videos. For word documents, it is <code>.docx</code>. There are\n      different extensions of the file that tell the computer that this is the\n      file format. Similarly, when we are creating our HTML page, the extension\n      for that page will be either <code>.htm</code> or <code>.html</code>.\n      These are the standard for an HTML file. </p>\n    <p> So, I just created my first file called <code>index.html</code>. Hit\n      enter and that file has been created. Now, VS Code has this handy feature\n      that I can actually zoom in. So if I do <strong>command + +</strong> or\n      just keep on doing <strong>+</strong>, it is actually going to zoom in.\n      So I am going just to zoom in so it is easier for you to see. And I have a\n      certain extension installed, so I am going to make it full screen, so it\n      is easier for you to read.</p>\n    <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/htmlcss2/3-first-webpage/zoom-in.jpg\"\n\n      alt=\"Zoom In\">\n    <p> I am going to close this welcome thing. Now, I am going to start writing\n      some code. Actually. I am not going to write some code. I am just going to\n      write some regular text. So I am going to say, ‘Hi, this is my first\n      website.’ Alright, save, and now I want to see this page. </p>\n    <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/htmlcss2/3-first-webpage/first-web-page.jpg\"\n\n      alt=\" First web page\">\n    <p> So, I am going to go to my <code>first-page</code> folder. This is my <code>index.html</code>\n      page, and I am simply going to open it in Google Chrome. So I am going to\n      drag and drop it. Or I can actually double-click it, as well. Alright, it\n      does not matter. So that is open. And you see that our first page has been\n      created. This is my first website. Now, I know this looks pretty simple,\n      but that is the point I want to tell you is that <em>HTML is a very\n        forgiving language!</em></p>\n    <p> That means that even when we did not write any HTML, this is just text,\n      and we open that file in the browser. The browser knows how to render\n      that, which simply said, \"okay, this is some text. I do not know how to\n      interpret it, and I am just going to throw it on the page.\" And that is\n      what it does.</p>\n    <p>I want to tell you is how to create your first web page, how to name the\n      extensions. And also, if you simply write some gibberish text and you keep\n      blabbering around. It is going to print it on the page. Simply save, and I\n      go over here, and I refresh. It is going to put it on the page. </p>\n    <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/htmlcss2/3-first-webpage/webpage-refresh.jpg\"\n\n      alt=\" First web page\">\n    <p> So with that said, you have simply created your first simple, little\n      website. If you want to launch a website, you can just say ‘Coming Soon’\n      and launch it on the Internet. So every time you save, you have to come\n      and refresh over here. And that is where you see your changes. So with\n      that, you have created your first little web page. But in the\n      next video, we are going to go official and start learning the actual HTML\n      language and its syntax. Talk to you in the next video. </p>\n  </body>\n\n"
  },
  {
    "_id": "5a74a49522183100147c5db6",
    "slug": "what-is-jsx",
    "title": "What is JSX",
    "subTitle": "What is JSX and why we write HTML like syntax in JavaScript",
    "thumbnail": "react/react16-jsx.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517593749337E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-jsx",
    "videoSource": "//player.vimeo.com/video/253885060",
    "duration": "3:55",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-02T17:49:09.335Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-07T17:17:56.608Z"
    },
    "updatedMsec": 1.522878614703E+12
  },
  {
    "_id": "5afb753f07ff3d0014610ff1",
    "slug": "crypto-price-checker-getting-different-crypto-prices-from-api-continued",
    "title": "Crypto Price Checker: Getting different crypto prices from API (...continued)",
    "subTitle": "",
    "thumbnail": "react-native/48-2-crypto-getting-different-prices.jpg",
    "bodyContent": "",
    "createdMsec": 1.526428991683E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269741994",
    "duration": "3:12",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-16T00:03:11.683Z"
    },
    "technology": [
      "React,React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ]
  },
  {
    "_id": "5a7275d1b736b600141cd237",
    "slug": "react-router-advanced-routes",
    "title": "React-Router: Making Dynamic and Nested Pages in a React App",
    "subTitle": "Learn how to use the 'react-router' library to make nested routes and dynamic routes in our React app",
    "thumbnail": "react/react19-react-router-nested-routes.png",
    "demoUrl": "",
    "bodyContent": "",
    "createdMsec": 1.517450705224E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/react-router",
    "videoSource": "//player.vimeo.com/video/253696559",
    "duration": "5:16",
    "access": 0,
    "createdIso": {
      "$date": "2018-02-01T02:05:05.224Z"
    },
    "technology": [
      "React.js"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2018-04-04T22:10:22.712Z"
    },
    "updatedMsec": 1.522879822712E+12
  },
  {
    "_id": "5ac3e2bab9773a0014e29f30",
    "slug": "notetaking-setting-schema-model",
    "title": "Setting Schema & Model (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p5-schema-model.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787002829E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/262891805",
    "duration": "5:45",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:23:22.829Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2018-04-03T20:54:36.335Z"
    },
    "updatedMsec": 1.522788876335E+12
  },
  {
    "_id": "5ac3e64bb9773a0014e29f3a",
    "slug": "notetaking-password-protection-hashing",
    "title": "Password Protection - hashing (Note Taking App)",
    "subTitle": "",
    "thumbnail": "express-p/express-p15-password-hash.jpg",
    "bodyContent": "",
    "createdMsec": 1.522787915266E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "sourceUrl": "https://github.com/iLoveCodingOrg/notetaking-express",
    "videoSource": "//player.vimeo.com/video/262893076",
    "duration": "7:31",
    "access": 0,
    "createdIso": {
      "$date": "2018-04-03T20:38:35.266Z"
    },
    "technology": [
      "Express.js"
    ],
    "topic": [
      "Back-End",
      "Project",
      "Web API"
    ],
    "updatedIso": {
      "$date": "2019-03-04T18:15:36.691Z"
    },
    "updatedMsec": 1.522788820783E+12
  },
  {
    "_id": "5b881f31c665e40014cad619",
    "slug": "html-forgiving",
    "title": "HTML is a forgiving language",
    "subTitle": "Your code will work even if you write incorrect code - but it has limits. Lets see.",
    "createdIso": {
      "$date": "2018-08-30T16:45:37.094Z"
    },
    "createdMsec": 1.535647537095E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286971989",
    "duration": "3:47",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-03-24T17:48:16.727Z"
    },
    "updatedMsec": 1.541178822075E+12,
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<h2>Video Lesson Transcript</h2>\n<p>Now one important fact that I want to mention to you, is that HTML is a very <em>forgiving</em> language. That means that if you break the syntax and if you write incorrect code let's say by avoiding the closing <code>&lt;/p&gt;</code> tag and miss the closing <code>&lt;/span&gt;</code> tag, this is how it should look.</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;p id=\"first-para\" class=\"info\"&gt;\n  This is the text          for the paragraph.\n  &lt;br /&gt;\n  &lt;br /&gt;\n  &lt;hr /&gt;\n\n\n\n  &lt;span id=\"whatever\" class=\"something else\"&gt;\n    this is some more text\n  &lt;/span&gt;\n  &lt;span&gt;\n    sadjalsdkjsa\n</pre> <img src=\"//a.ilovecoding.org/img/htmlcss2/forgiving-lang/broken-html-example.jpg\" class=\"img-fluid border w-75\" alt=\"result of a broken HTML code\">\n\n<p>Sometimes it is going to totally break, but sometimes is going to simply work. Right here I am missing the two closing tags, but still it's working.</p>\n\n<p>So that's what I want to mention to you, that HTML is a very forgiving language. That means that when the browser reads the code, it tries it's best to understand it. And even if it's broken, it's gonna try to make sense of it, and render something on the screen to the best of it's knowledge.</p>\n\n<p>With that said, I'm gonna right-click, and inspect the <code>&lt;p&gt;</code> element. Basically you've learned that the inspect feature will open all the code in the elements tab in the <em>Chrome Developer Tools</em>, and you immediately see that this is not the code that we wrote.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/forgiving-lang/inspecting-broken-html.jpg\" class=\"img-fluid border w-75\" alt=\"inspecting the broken HTML code\">\n\n<p>We never wrote the <code>&lt;html&gt;</code> element, neither the <code>&lt;head&gt;</code> or the <code>&lt;body&gt;</code> elements, we just wrote the code that goes inside the <code>&lt;body&gt;</code>.</p>\n\n<p>So where is the rest of the code coming from? And that is what goes on to say that HTML is a very forgiving language. The browser interprets our code and fills in the gaps to make the webpage appear on the screen. Now, this does not mean that it's okay to make mistakes. It only means that a lot of times you may have made a mistake and you will not see an error on the screen.</p>\n\n<h3>Proper format of an HTML document</h3>\n\n<p>Now you see that so far you wrote all of these HTML elements, and these are the elements that shows up on the page.</p>\n\n<p>But, the proper way to write an HTML page, is to have this particular basic markup.</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      page title goes here\n    &lt;/title&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    page content goes here\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>You write an &lt;html&gt; element, and inside it you have two elements: the &lt;head&gt;, and the &lt;body&gt; elements.</p>\n\n<h3>&lt;body&gt;</h3>\n\n<p>The &lt;body&gt; one, will have everything that is shown in this area:</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/forgiving-lang/body-area.jpg\" class=\"img-fluid border w-75\" alt=\"Showing <body> area in the page\">\n\n<p>This white area is the <code>&lt;body&gt;</code> of the HTML page.</p>\n\n<h3>&lt;head&gt;</h3>\n\n<p>in the <code>&lt;head&gt;</code> area, you write let's say the <code>&lt;title&gt;</code>. This is just one option, there are many others as well, but this is one of the thing that you write in the <code>&lt;head&gt;</code> section.</p>\n\n<p>What is <code>&lt;head&gt;</code>? It is the section which is like the options for the web page.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/forgiving-lang/page-title.jpg\" class=\"img-fluid border w-75\" alt=\"showing the title of the page\">\n\n<p>Where it says \"<em>index.html</em>\", you want to mention the title for that page, so you're going to put it inside the <code>&lt;title&gt;</code> element, and everything that you want to show <strong>inside</strong> that particular page, will go inside the <code>&lt;body&gt;</code> area.</p>\n\n<h3>Explaining the code from the inspector</h3>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/forgiving-lang/viewing-inspector-code.jpg\" class=\"img-fluid border w-75\" alt=\"seeing the code from the inspector\">\n\n<p>Now with that said, you can see over here that the browser is smart enough to think \"hey, these are some <code>&lt;p&gt;</code>, <code>&lt;hr&gt;</code>, and <code>&lt;span&gt;</code>, it looks like they fit inside the <code>&lt;body&gt;</code> area\". So it just puts it automatically inside the <code>&lt;body&gt;</code> element. Smart enough, right?</p>\n\n<p>Even though HTML is a forgiving language, if you break the rules too much, your code will not work in the way that you expect. So always be careful writing code, indent your code pretty well so it is easier for you to read, so you can have the proper result that you are expecting.</p>With that said, in the next lesson, we are going to go over this basic markup, and you're going to know basically the things that you need to know about HTML to get started. In the rest of the tutorials we are going to be focusing on the different elements one by one, and after that, we are going to get into the CSS.<p></p>\n\n<p>So that's pretty much it for this lesson, I'll talk to you in the next.</p>"
  },
  {
    "_id": "5afae10a6be0670014043bd4",
    "slug": "installing-ios-tools-on-mac-for-react-native-part-1",
    "title": "Installing iOS tools on Mac for React Native - Part 1",
    "subTitle": "",
    "thumbnail": "react-native/4-1-cli.jpg",
    "bodyContent": "",
    "createdMsec": 1.52639105074E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "sourceUrl": "N/A",
    "videoSource": "//player.vimeo.com/video/269242979",
    "duration": "3:25",
    "access": 0,
    "createdIso": {
      "$date": "2018-05-15T13:30:50.74Z"
    },
    "technology": [
      "React",
      "React-Native"
    ],
    "topic": [
      "Mobile Apps"
    ],
    "updatedIso": {
      "$date": "2018-05-16T11:25:44.532Z"
    },
    "updatedMsec": 1.526469944533E+12
  },
  {
    "_id": "5b8825e8c665e40014cad61d",
    "slug": "relative-vs-absolute-paths",
    "title": "Relative vs Absolute Paths - linking continued",
    "subTitle": "See the difference between two kinds of paths. relative and absolute paths",
    "createdIso": {
      "$date": "2018-08-30T17:14:16.524Z"
    },
    "createdMsec": 1.535649256524E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972424",
    "duration": "5:50",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "demoUrl": "demo/htmlcss2/13-relative-link",
    "sourceUrl": "source/htmlcss2/13-relative-link.zip",
    "updatedIso": {
      "$date": "2019-03-24T19:55:24.783Z"
    },
    "updatedMsec": 1.541178886962E+12,
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<h2>Video Lesson Transcript</h2>\n\n<h3>Relative Path</h3>\n\n<p>Now let's say you have a very big website with a lot of pages. So let's suppose that there is an <strong>About</strong>, and a <strong>Portfolio</strong> page, there is a sub portfolio, and there are projects.</p>\n\n<p>There is so much going on, what should you do? You should organize your pages inside <strong>folders</strong>.</p>\n\n<p>You are going to create a folder called <strong>projects</strong>. Let's say you want to display projects of yours to different people right?</p>\n\n<p>So inside \"projects\" I am just going to create a folder, and you have multiple pages for these projects. So let's name a file \"<em>clienta.html</em>\" for client A information, \"<em>clientb.html</em>\" for a different client, and so forth.</p>\n\n<p>Code for <code>clienta.html</code>:</p>\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      Client A\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Client A&lt;/h1&gt;\n    &lt;a href=\"index.html\"&gt;Go to home&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>Code for <code>clienta.html</code>:</p>\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      Client B\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Client B&lt;/h1&gt;\n    &lt;a href=\"index.html\"&gt;Go to home&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>You have these two pages, but we want to link to these pages, let's say from the home page. So I am going to go to the home page, and what do we do to link it to pages which are inside a folder?</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;  \n    &lt;title&gt;\n      Client B  \n    &lt;/title&gt;  \n  &lt;/head&gt;  \n  &lt;body&gt;  \n    &lt;h1&gt;Hi My name is Aziz&lt;/h1&gt;  \n    &lt;a target=\"_blank\" href=\"https://www.google.com\"&gt;Click me please&lt;/a&gt; \n\n    &lt;a href=\"about.html\"&gt;Go to about&lt;/a&gt;  \n    &lt;a href=\"clienta.html\"&gt;Go to Client A&lt;/a&gt;  \n    &lt;a href=\"clientb.html\"&gt;Go to Client B&lt;/a&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt;  \n</pre>\n\n<p>So for the text of the link we can simply put in \"Client A\" and \"Client B\", and for the <code>href</code> we can put <code>clienta.html</code>, and <code>clientb.html</code>.</p>\n\n<p>Let's see what happens when I refresh:</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/relative-path/relative-link.jpg\" class=\"img-fluid border w-75\" alt=\"Using a relative anchor link\">\n\n<p>When I click over here, it says \"<em>Your file was not found</em>\".</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/relative-path/relative-path-error.jpg\" class=\"img-fluid border w-75\" alt=\"Error using relative path\">\n\n<p>And the reason for that is because when you are linking files or pages, you want to mention the <strong>location</strong> of that particular file, <strong>relative</strong> to the page you are on.</p>\n\n<p>Now what does that mean? That means that this page <em>index.html</em> and all the other files, are <strong>inside</strong> this <em>first-page</em> folder.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/relative-path/files.jpg\" class=\"img-fluid w-75\" alt=\"All the files inside the 'first-page' folder\">\n\n<p>Right now if you want to link from the <em>index.html</em> to the <em>projects</em> folder and inside it the <em>clienta.html</em> file. You want to mention that from this <em>index.html</em> page go to the projects folder, \"<em>/</em>\" (slash) inside the <em>clienta.html</em>. Like such:</p>\n\n<pre class=\"prettyprint precode linenums:12\"> \n    &lt;a href=\"about.html\"&gt;Go to about&lt;/a&gt;\n    &lt;a href=\"projects/clienta.html\"&gt;Go to Client A&lt;/a&gt;\n    &lt;a href=\"projects/clientb.html\"&gt;Go to Client B&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>Just do the same thing for \"Client B\", and now let's see if it works.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/relative-path/correct-relative-path.jpg\" class=\"img-fluid border w-75\" alt=\"result after clicking a correct relative link\">\n\n<p>And you see \"Client A\" shows up.</p>\n\n<h3>Going back from a sub-folder</h3>\n\n<p>Now the next thing that I want to tell you, is if from <em>clienta.html</em> which is a sub page, you want to go \"up\" a level and go back to <em>index.html</em>. How do you do that?</p>\n\n<pre class=\"prettyprint precode linenums:9\">    &lt;h1&gt;Client B&lt;/h1&gt;  \n    &lt;a href=\"index.html\"&gt;Go to home&lt;/a&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt;  \n</pre>\n\n<p>This link is not going to work, because it actually says to go to <em>index.html</em>. So from this page which is <em>clientb.html</em>, relative from this, you want to go up one folder, to the <em>first-page</em> folder and inside it, the <em>index.html</em> is there.</p>\n<p></p>\n\n<p>So if you want to go up one folder, you always do <em>../</em> (dot, dot, and slash).</p>\n\n<pre class=\"prettyprint precode linenums:9\">    &lt;h1&gt;Client B&lt;/h1&gt;  \n    &lt;a href=\"../index.html\"&gt;Go to home&lt;/a&gt;  \n  &lt;/body&gt;  \n&lt;/html&gt;  \n</pre>\n\n<p>That tells you ok, wherever you are from, in our case <em>clientb.html</em>, go not in this folder, but up one folder.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/relative-path/folder-structure.jpg\" class=\"img-fluid border w-75\" alt=\"showing the structure of the project pages\">\n\n<p>So as you can see folder structure, that's our application.</p>\n\n<p>So if I save, and I do the same thing in <em>Client A</em> as well because it's in a sub-folder.</p>\n\n<pre class=\"prettyprint precode linenums:9\">    &lt;h1&gt;Client A&lt;/h1&gt;\n    &lt;a href=\"../index.html\"&gt;Go to home&lt;/a&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>And now if I click over here it's actually going to go up one folder to the right location of <em>index.html</em>. So that's how you link via the <code>&lt;a&gt;</code> element.</p>\n\n<h3>The difference between Relative and Absolute path</h3>\n\n<p>The URLs which are relative to a particular location, are called <strong>relative</strong> paths.</p>\n\n<p>The links which are directly going to a particular location like this particular URL: <code>&lt;a target=\"_blank\" href=\"https://www.google.com\"&gt;Click me please&lt;/a&gt;</code> is not relative.</p>\n\n<p>These are called <strong>absolute</strong> paths, because they have the absolute location to an URL.</p>\n\n<p>So let's say if you want to link to <em>iLoveCoding</em>, and to a sub-page like this: <code>&lt;a target=\"_blank\" href=\"https://ilovecoding.com/pages/about.html\"&gt;Click me please&lt;/a&gt;</code>\n</p>\n\n<p>This is an <strong>absolute</strong> path&nbsp;because this has the absolute location where you want to go, it's not a relative location.</p>\n\n<pre class=\"prettyprint precode linenums:12\"> \n    &lt;a href=\"about.html\"&gt;Go to about&lt;/a&gt;  \n    &lt;a href=\"projects/clienta.html\"&gt;Go to Client A&lt;/a&gt;  \n    &lt;a href=\"projects/clientb.html\"&gt;Go to Client B&lt;/a&gt;   \n</pre>\n\n<p>The above are relative locations. Now the browser is smart enough to distinguish between absolute and relative paths. Paths that start with <code>http</code>, or <code>https</code> are absolute paths, everything else is treated as a relative path.</p>\n\n<p>All right. so that's pretty much it for this video, I am going to talk to you in the next.</p>"
  },
  {
    "_id": "5b882642c665e40014cad624",
    "slug": "meta-elements-continued",
    "title": "<meta> description and keyword elements for SEO",
    "subTitle": "See two handy meta elements properties that help search-engines list your webpages correctly.",
    "createdIso": {
      "$date": "2018-08-30T17:15:46.812Z"
    },
    "createdMsec": 1.535649346812E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972682",
    "duration": "3:33",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:13:00.681Z"
    },
    "updatedMsec": 1.541179546627E+12
  },
  {
    "_id": "5b8855f3c665e40014cad63c",
    "slug": "border-style",
    "title": "CSS border style",
    "subTitle": "See the different CSS border styles - 'double', 'dotted' and more.",
    "createdIso": {
      "$date": "2018-08-30T20:39:15.05Z"
    },
    "createdMsec": 1.53566155505E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105322",
    "duration": "2:05",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:25:13.504Z"
    },
    "updatedMsec": 1.536089387449E+12,
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://github.com/iLoveCodingOrg/csscheatsheet\">CSS Cheatsheet on Github</a></li>\n  <li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">CSS Cheatsheet (PDF)</a></li>\n</ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b8825f6c665e40014cad61e",
    "slug": "div-span",
    "title": "<div> and <span> elements",
    "subTitle": "The <div> and <span> elements although simple, are the most widely used HTML elements. Lets get familiar with them.",
    "createdIso": {
      "$date": "2018-08-30T17:14:30.266Z"
    },
    "createdMsec": 1.535649270266E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "286972470",
    "duration": "6:36",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-03-24T19:51:18.701Z"
    },
    "updatedMsec": 1.541178903582E+12,
    "bodyContent": "<div class=\"alert alert-info\">😇<b>Important:</b> This course is <b>FREE</b> and always will be 🙌. <i> Feel free to share it with friends.</i> 🎁</div><h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul><p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>\n\n<h3>The &lt;div&gt; Element</h3>\n\n<p>One of the most commonly used elements, is actually the <code>&lt;div&gt;</code> element.</p>\n\n<p>The <strong>\"div\"</strong> element stands for \"division\", which basically means that you organize your different pieces of your HTML inside it's own container.</p>\n\n<p>So \"division\" or <code>&lt;div&gt;</code> is simply a container, it's a generic container element. It has no special properties but one. Let's take a look at it right now.</p>\n\n<p>So we are in our web page, and let's say I am making a web page for myself, and I want to organize this web page in different sections.</p>\n\n<p>So let's say I have a section for my background, one for my professional life, and one section for my personal life and underneath each of these sections I may have multiple paragraphs, and some text about each of these sections.</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      This is my first page\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hi My name is Aziz&lt;/h1&gt;\n    &lt;h2&gt;Background&lt;/h2&gt;\n    &lt;p&gt;sadjalsdjlkds&lt;/p&gt;\n    &lt;p&gt;skdjalsdkjasldj&lt;/p&gt;\n    &lt;h2&gt;Professional&lt;/h2&gt;\n    &lt;p&gt;sdjalsdjlkjds&lt;/p&gt;\n    &lt;p&gt;skdjalsdkjasldj&lt;/p&gt;\n    &lt;h2&gt;Personal&lt;/h2&gt;\n    &lt;p&gt;sdjalsdjlkjds&lt;/p&gt;\n    &lt;p&gt;skdjalsdkjasldj&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>When I save and refresh, I see this:</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/div-span/sections-example.jpeg\" class=\"img-fluid border w-75\" alt=\"creating multiple sections without div\">\n\n<p>Now if you look at the code, the code is not easy to read. It's not organized, so we need to make organize each of these sections separately.</p>\n\n<p>To do that, we are going to put each of sections inside their own <code>&lt;div&gt;</code> element, so here's how you do that. I am going to take the following code:</p>\n\n<pre class=\"prettyprint precode linenums:12\">    &lt;h2&gt;Background&lt;/h2&gt;\n    &lt;p&gt;sadjalsdjlkds&lt;/p&gt;\n    &lt;p&gt;skdjalsdkjasldj&lt;/p&gt; \n</pre>\n\n<p>The above section (the background and the paragraphs) and wrap it inside a <code>&lt;div&gt;</code> element. Like such:</p>\n\n<pre class=\"prettyprint precode linenums:10\">    &lt;div&gt;\n      &lt;h2&gt;Background&lt;/h2&gt;\n      &lt;p&gt;sadjalsdjlkds&lt;/p&gt;\n      &lt;p&gt;skdjalsdkjasldj&lt;/p&gt;\n    &lt;/div&gt;\n</pre>\n\n<p>So now the two benefits are that it's easier to read because I know this is one section, and I am going to do the same thing over here for the second and third sections as well:</p>\n\n<pre class=\"prettyprint precode linenums:1\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;title&gt;\n      This is my first page\n    &lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hi My name is Aziz&lt;/h1&gt;\n\n    &lt;div&gt;\n      &lt;h2&gt;Background&lt;/h2&gt;\n      &lt;p&gt;sadjalsdjlkds&lt;/p&gt;\n      &lt;p&gt;skdjalsdkjasldj&lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n      &lt;h2&gt;Professional&lt;/h2&gt;\n      &lt;p&gt;sadjalsdjlkds&lt;/p&gt;\n      &lt;p&gt;skdjalsdkjasldj&lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n      &lt;h2&gt;Personal&lt;/h2&gt;\n      &lt;p&gt;sadjalsdjlkds&lt;/p&gt;\n      &lt;p&gt;skdjalsdkjasldj&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>Each one of these are now individual sections.</p>\n\n<p>The significance of organizing this in a section, is not for readability; it's actually when we get to the CSS section of our website or of this course, we are going to see that when we have these sections we can actually use the CSS techniques to actually have advanced layouts.</p>\n\n<p>So if I save this and refresh, it's going to have no difference because <code>&lt;div&gt;</code> is a generic element, I have already told you it's just a generic container.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/div-span/before-inspecting-h2.jpg\" class=\"img-fluid border w-75\" alt=\"results before we inspect the <h2> element\">\n\n<p>Just to show you what is happening in the background, when I am right-click on the word \"Background\" and click \"Inspect\", it's actually going to open the \"Developer tools\" and highlight this particular element (The element of the word \"Background\").</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/div-span/after-inspecting-h2.jpg\" class=\"img-fluid border w-75\" alt=\"results after we inspect the <h2> element\">\n\n<p>You will see the background element is highlighted, and all of it's different spacing has been highlighted as well when I hover right there.</p>\n\n<p>So if I click over here, you will see that this entire blue area is highlighted, because this div element has all of these three things inside.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/div-span/inspecting-div.jpg\" class=\"img-fluid border w-75\" alt=\"Inspecting the <div> element\">\n\n<h3>The Special Property of &lt;div&gt;</h3>\n\n<p>Now one more thing, is that the special property of a div element, is that it takes up all the horizontal real estate that it can find, so it takes up all of this space.</p>\n\n<p>It does not let the second \"Professional\" <code>&lt;div&gt;</code> element to be on the right hand side; it's actually blocking the entire right hand side.</p>\n\n<p>So that's why it's actually containing all of it's information, and taking up all the horizontal real estate.</p>\n\n<p>So that is the property of a <code>&lt;div&gt;</code> element; not just organizing things in a container, but also taking up all the horizontal real estate.</p>\n\n<p>Now this will become again very powerful and helpful when we get to the CSS section, where we can do advanced layout.</p>\n\n<p>So until then wait along and just think of the <code>&lt;div&gt;</code> element as just a generic container.</p>\n\n<h3>The &lt;span&gt; Element</h3>\n\n<p>Now a close brother to the div element, is actually the <code>&lt;span&gt;</code> element.</p>\n\n<p>The <code>&lt;span&gt;</code> is also used as a generic container, but the difference is that where the <code>&lt;div&gt;</code> element takes up all the horizontal real estate, the <code>&lt;span&gt;</code> element only takes up the space that it needs.</p>\n\n<p>The <code>&lt;span&gt;</code> element is typically used within a paragraph. Let's say I have a big paragraph over here in the background section.</p>\n\n<pre class=\"prettyprint precode linenums:10\">    &lt;div&gt;\n      &lt;h2&gt;Background&lt;/h2&gt;\n      &lt;p&gt;\n        sadjalsdjlkds sadjalsdjlkds\n        sadjalsdjlkds sadjalsdjlkds\n        sadjalsdjlkds sadjalsdjlkds\n        sadjalsdjlkds sadjalsdjlkds\n\n        special text\n      &lt;/p&gt;\n      &lt;p&gt;skdjalsdkjasldj&lt;/p&gt;\n    &lt;/div&gt;\n</pre>\n\n<p>Let's say there is some \"special text\" over here, and we want to give it some some special attention.</p>\n\n<p>So what are we going to do is we are going to wrap in this particular \"special text\" inside the <code>&lt;span&gt;</code> element like such:</p>\n\n<pre class=\"prettyprint precode linenums:10\">    &lt;div&gt;\n      &lt;h2&gt;Background&lt;/h2&gt;\n      &lt;p&gt;\n        sadjalsdjlkds sadjalsdjlkds\n        sadjalsdjlkds sadjalsdjlkds\n        sadjalsdjlkds sadjalsdjlkds\n        sadjalsdjlkds sadjalsdjlkds\n        &lt;span&gt;special text&lt;/span&gt;\n      &lt;/p&gt;\n      &lt;p&gt;skdjalsdkjasldj&lt;/p&gt;\n    &lt;/div&gt;\n</pre>\n\n<p>Save, refresh, and you see all of this text is here, but this \"special text\" is like within the same line, It's actually not taking up all the horizontal space.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/div-span/special-text.jpg\" class=\"img-fluid border w-75\" alt=\"showing the special text within the paragraph\">\n\n<p>So just to prove the point there can be more text over here, I can just put some more text after it.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/div-span/text-after-special-text.jpg\" class=\"img-fluid border w-75\" alt=\"showing some text after the special text\">\n\n<p>And you see the rest of the text is over here, and the \"special text\" just does not expand it's limits, it only takes up the space it needs.</p>\n\n<p>And just to prove that point, I can right-click and inspect, and you see the <code>&lt;span&gt;</code> element gets highlighted just to show that this element is taking up this much space.</p>\n\n<img src=\"//a.ilovecoding.org/img/htmlcss2/div-span/inspecting-span.jpg\" class=\"img-fluid border w-75\" alt=\"Inspecting the <span> element\">\n\n<p>Now the significance of the <code>&lt;span&gt;</code> element will also become very evident to you when we get to the CSS section.</p>\n\n<p>Until then you just know that <code>&lt;div&gt;</code> and <code>&lt;span&gt;</code> elements are generic containers; <code>&lt;div&gt;</code> takes up all the horizontal speed real-estate that it has, and <code>&lt;span&gt;</code> only takes up space inline within the line space that it needs.</p>\n\n<p>Until then, I will talk to you in the next lesson.</p>",
    "demoUrl": "demo/htmlcss2/14-div-span",
    "sourceUrl": "source/htmlcss2/14-div-span.zip"
  },
  {
    "_id": "5b885627c665e40014cad640",
    "slug": "div-span-display",
    "title": "<div> vs <span> the real difference",
    "subTitle": "Lets take an in-depth look at the difference between the <div> and <span> element. An advanced look into understanding how elements control space.",
    "createdIso": {
      "$date": "2018-08-30T20:40:07.447Z"
    },
    "createdMsec": 1.535661607447E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "287105923",
    "duration": "4:36",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "demoUrl": "demo/htmlcss2/48-div-span-display",
    "sourceUrl": "source/htmlcss2/48-div-span-display.zip",
    "updatedIso": {
      "$date": "2019-02-16T04:25:27.613Z"
    },
    "updatedMsec": 1.541180004793E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b885668c665e40014cad643",
    "slug": "overflow-visibility-display",
    "title": "Hide content with `overflow`, `visibility` and `display` property",
    "subTitle": "There are a few ways to hide content of a webpage. See how these properties can help us do that.",
    "createdIso": {
      "$date": "2018-08-30T20:41:12.441Z"
    },
    "createdMsec": 1.535661672441E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104728",
    "duration": "3:36",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:25:42.105Z"
    },
    "updatedMsec": 1.541180211031E+12
  },
  {
    "_id": "5b885691c665e40014cad646",
    "slug": "blog-design-2",
    "title": "Project: Blog Design (Part 2/7) - Layout the HTML",
    "subTitle": "Lesson 2/7 of Project Blog Design",
    "createdIso": {
      "$date": "2018-08-30T20:41:53.082Z"
    },
    "createdMsec": 1.535661713082E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105035",
    "duration": "9:09",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:25:55.753Z"
    },
    "updatedMsec": 1.541180214698E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5bce0379fad501001360042d",
    "slug": "spread-operator",
    "title": "Spread Operator '...' in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:06:01.129Z"
    },
    "createdMsec": 1.540227961129E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296117230",
    "duration": "5:00",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:55:58.392Z"
    },
    "updatedMsec": 1.541184958392E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce03c4fad5010013600432",
    "slug": "dom",
    "title": "DOM: Document Object Model",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:07:16.522Z"
    },
    "createdMsec": 1.540228036522E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296117759",
    "duration": "4:47",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2019-02-21T19:36:18.917Z"
    },
    "updatedMsec": 1.541184963096E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce03e6fad5010013600435",
    "slug": "dom-classlist",
    "title": "Modify element class(es)",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:07:50.822Z"
    },
    "createdMsec": 1.540228070822E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296117966",
    "duration": "4:17",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:56:06.446Z"
    },
    "updatedMsec": 1.541184966446E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5b88433ec665e40014cad635",
    "slug": "multiple-class-code-comments",
    "title": "Apply multiple CSS classes + write notes with code comments",
    "subTitle": "Multiple CSS classes can be applied to one element. See how. Plus learn how to write notes within your code with CSS code comments.",
    "createdIso": {
      "$date": "2018-08-30T19:19:26.269Z"
    },
    "createdMsec": 1.535656766269E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105043",
    "duration": "2:59",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "demoUrl": "demo/htmlcss2/37-multiple-class-code-comments",
    "sourceUrl": "source/htmlcss2/37-multiple-class-code-comments.zip",
    "updatedIso": {
      "$date": "2019-02-16T04:24:35.713Z"
    },
    "updatedMsec": 1.541180199212E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b88558bc665e40014cad639",
    "slug": "sizing-units-rem",
    "title": "Common CSS Units - (rem)",
    "subTitle": "Learning how 'rem' unit works in CSS and when to use it.",
    "createdIso": {
      "$date": "2018-08-30T20:37:31.938Z"
    },
    "createdMsec": 1.535661451938E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105966",
    "duration": "2:39",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:25:02.13Z"
    },
    "updatedMsec": 1.54117985399E+12
  },
  {
    "_id": "5b8855d9c665e40014cad63b",
    "slug": "css-border",
    "title": "CSS border property",
    "subTitle": "Add border to HTML elements with the `border` property.",
    "createdIso": {
      "$date": "2018-08-30T20:38:49.775Z"
    },
    "createdMsec": 1.535661529775E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105148",
    "duration": "4:00",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:25:10.191Z"
    },
    "updatedMsec": 1.541179868176E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b8856e0c665e40014cad64b",
    "slug": "blog-design-7",
    "title": "Project: Blog Design (Part 7/7) - Additional Pages",
    "subTitle": "Lesson 7/7 of Project Blog Design",
    "createdIso": {
      "$date": "2018-08-30T20:43:12.46Z"
    },
    "createdMsec": 1.53566179246E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105716",
    "duration": "5:13",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:26:26.639Z"
    },
    "updatedMsec": 1.541180218574E+12,
    "demoUrl": "demo/htmlcss2/59-additional-pages",
    "sourceUrl": "source/htmlcss2/59-additional-pages.zip",
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b8856eac665e40014cad64c",
    "slug": "css-position",
    "title": "'position' - Control element position within your page",
    "subTitle": "You can freely move your elements with the `position` CSS property. See how in this lesson.",
    "createdIso": {
      "$date": "2018-08-30T20:43:22.8Z"
    },
    "createdMsec": 1.5356618028E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105912",
    "duration": "8:10",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:26:32.087Z"
    },
    "updatedMsec": 1.541180220308E+12,
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://wwww3schools.com/css/css_positioning.asp\">CSS Position Reference on w3schools</a></li>\n</ul>\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/60-position",
    "sourceUrl": "source/htmlcss2/60-position.zip"
  },
  {
    "_id": "5bce02bafad5010013600425",
    "slug": "settimeout-cleartimeout",
    "title": "'setTimeout' & 'clearTimeout'",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:02:50.41Z"
    },
    "createdMsec": 1.54022777041E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296114972",
    "duration": "1:25",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:55:49.52Z"
    },
    "updatedMsec": 1.54118494952E+12
  },
  {
    "_id": "5bce0383fad501001360042e",
    "slug": "function-default-values",
    "title": "Default values of function parameters",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:06:11.862Z"
    },
    "createdMsec": 1.540227971862E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296117569",
    "duration": "4:56",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:55:59.294Z"
    },
    "updatedMsec": 1.541184959294E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5b884303c665e40014cad630",
    "slug": "comma-specific-selectors",
    "title": "Using multiple selectors together (using comma and more)",
    "subTitle": "Multiple selectors can be used together to hyper target elements. See how in this lesson.",
    "createdIso": {
      "$date": "2018-08-30T19:18:27.753Z"
    },
    "createdMsec": 1.535656707753E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104540",
    "duration": "4:40",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:15:36.404Z"
    },
    "updatedMsec": 1.541180196642E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/32-comma-specific-selectors",
    "sourceUrl": "source/htmlcss2/32-comma-specific-selectors.zip"
  },
  {
    "_id": "5b885753c665e40014cad651",
    "slug": "tables",
    "title": "<table> Making tables in HTML",
    "subTitle": "Learn the different elements used to build tables in HTML.",
    "createdIso": {
      "$date": "2018-08-30T20:45:07.955Z"
    },
    "createdMsec": 1.535661907955E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287110961",
    "duration": "5:32",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-23T20:21:32.85Z"
    },
    "updatedMsec": 1.541180228138E+12,
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table\">&lt;table&gt; reference on Mozilla<table></table></a></li>\n  <li><a href=\"https://www.w3schools.com/html/html_tables.asp\">&lt;table&gt; reference on w3schools</a></li>\n</ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/65-66-table",
    "sourceUrl": "source/htmlcss2/65-66-table.zip"
  },
  {
    "_id": "5bcdfb85fad50100136003f6",
    "slug": "js-background",
    "title": "History and Background of JavaScript",
    "subTitle": "Discover the little known background and history of JavaScript. This will help put things into perspective and clarify many misconceptions.",
    "createdIso": {
      "$date": "2018-10-22T16:32:05.349Z"
    },
    "createdMsec": 1.54022592535E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "294446158",
    "duration": "8:06",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:57:41.226Z"
    },
    "updatedMsec": 1.541185061227E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce0022fad501001360041d",
    "slug": "switch",
    "title": "Switch statements in JavaScript",
    "subTitle": "Switch statements are logical statements in JavaScript that help us run certain code only when a condition is met. Switch statement are a close sibling of if/else statement. Lets see how to use them.",
    "createdIso": {
      "$date": "2018-10-22T16:51:46.39Z"
    },
    "createdMsec": 1.54022710639E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295898085",
    "duration": "5:26",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:53:25.21Z"
    },
    "updatedMsec": 1.54118480521E+12
  },
  {
    "_id": "5bce02ccfad5010013600426",
    "slug": "eventloop",
    "title": "Call Stack, Event Loop and Message Queue - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:03:08.052Z"
    },
    "createdMsec": 1.540227788052E+12,
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "296115016",
    "duration": "5:25",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-14T16:05:09.039Z"
    },
    "updatedMsec": 1.542211509083E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce0360fad501001360042b",
    "slug": "function-arguments",
    "title": "Special 'arguments' keyword in a function",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:05:36.062Z"
    },
    "createdMsec": 1.540227936062E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296116434",
    "duration": "3:56",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-14T16:05:35.906Z"
    },
    "updatedMsec": 1.542211535906E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce0437fad501001360043c",
    "slug": "todolist-app-3",
    "title": "Project: To-Do List App with Vanilla JavaScript - Part 3",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:09:11.451Z"
    },
    "createdMsec": 1.540228151451E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296118334",
    "duration": "4:28",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2019-06-10T20:26:08.816Z"
    },
    "updatedMsec": 1.541185002479E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/project-js-todo/tree/1-add-submit-button",
    "demoUrl": "https://ilctodolist-1.netlify.com"
  },
  {
    "_id": "5b884331c665e40014cad634",
    "slug": "css-colors",
    "title": "Colors in CSS",
    "subTitle": "Learn the three color systems and how to use them. Plus some handy trips on color selection and preview.",
    "createdIso": {
      "$date": "2018-08-30T19:19:13.115Z"
    },
    "createdMsec": 1.535656753115E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104661",
    "duration": "3:19",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:24:32.447Z"
    },
    "updatedMsec": 1.541179814632E+12,
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://github.com/iLoveCodingOrg/csscheatsheet\"></a><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color\">CSS Color Reference on Mozilla</a></li>\n</ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b88434cc665e40014cad636",
    "slug": "fonts",
    "title": "Fonts: Change & add custom fonts",
    "subTitle": "Learn to change fonts of targeted elements + learn how to install custom fancy fonts on your website.",
    "createdIso": {
      "$date": "2018-08-30T19:19:40.273Z"
    },
    "createdMsec": 1.535656780273E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105185",
    "duration": "6:20",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://github.com/iLoveCodingOrg/csscheatsheet\"></a><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color\"></a><a href=\"https://fonts.google.com/\">Google Fonts</a></li>\n</ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:24:39.855Z"
    },
    "updatedMsec": 1.541180201674E+12,
    "demoUrl": "demo/htmlcss2/38-fonts",
    "sourceUrl": "source/htmlcss2/38-fonts.zip"
  },
  {
    "_id": "5b885673c665e40014cad644",
    "slug": "clearfix",
    "title": "Clearfix: Hack to fix webpage spacing issue",
    "subTitle": "There is a common problem in HTML when making advance layouts that parent elements act abnormally. This lesson explains the problem and shows you the solution as well.",
    "createdIso": {
      "$date": "2018-08-30T20:41:23.12Z"
    },
    "createdMsec": 1.53566168312E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104835",
    "duration": "3:51",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://stackoverflowcom/questions/12783064/whydoes-overflow-hidden-have-the-unexpected-side-effect-of-growing-in-height-t/12783114#12783114\">Why clear parent element works unexpectedly - overflow: hidden hack</a></li><li><a href=\"https://css-tricks.com/all-about-floats/#article-header-id-4\">3 ways to \"Clearfix\"</a><a href=\"https://css-tricks.com/all-about-floats/#article-header-id-4\"></a></li>\n</ul>\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:25:45.139Z"
    },
    "updatedMsec": 1.541180212535E+12,
    "demoUrl": "demo/htmlcss2/52-clearfix",
    "sourceUrl": "source/htmlcss2/52-clearfix.zip"
  },
  {
    "_id": "5b88578fc665e40014cad656",
    "slug": "css-libraries",
    "title": "Using external CSS libraries in your projects",
    "subTitle": "There are virtually endless amount of CSS libraries on the internet - They provide pre-built CSS classes to make your website elements beautiful. Lets see how to find and use these libraries.",
    "createdIso": {
      "$date": "2018-08-30T20:46:07.516Z"
    },
    "createdMsec": 1.535661967516E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "288048979",
    "duration": "6:42",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:27:48.262Z"
    },
    "updatedMsec": 1.54118023839E+12,
    "bodyContent": "<h3>Resources</h3><ul><li><a href=\"http://cssdbco/\">CSSDB.co</a></li><li><a href=\"https://github.com/search?q=css+libraries\">Github \"CSS libraries\" search</a></li><li><a href=\"https://daneden.github.io/animate.css/\">animate.css</a></li><li><a href=\"https://fontawesome.com/\">Font Awesome</a></li><li><a href=\"https://una.im/CSSgram/\">CSSgram</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/70-css-libraries",
    "sourceUrl": "source/htmlcss2/70-css-libraries.zip"
  },
  {
    "_id": "5bcdfb64fad50100136003f5",
    "slug": "js-tools",
    "title": "Tool you will need",
    "subTitle": "Tools you will need for the Learn JavaScript Correctly course",
    "createdIso": {
      "$date": "2018-10-22T16:31:32.395Z"
    },
    "createdMsec": 1.540225892396E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "294443216",
    "duration": "2:25",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-27T03:28:44.016Z"
    },
    "updatedMsec": 1.543289324016E+12
  },
  {
    "_id": "5bcdfe5bfad5010013600401",
    "slug": "array",
    "title": "Intro to Arrays in JavaScript",
    "subTitle": "Array is simply a collection of values. Thats it! Although simple, Array is a very powerful type in JavaScript. Lets look at them in practice in this lesson.",
    "createdIso": {
      "$date": "2018-10-22T16:44:11.407Z"
    },
    "createdMsec": 1.540226651407E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295887728",
    "duration": "4:54",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:13.074Z"
    },
    "updatedMsec": 1.541185033074E+12
  },
  {
    "_id": "5bcdff69fad501001360040f",
    "slug": "lexical-environment",
    "title": "Lexical Environment (Lexical scope) in JavaScript",
    "subTitle": "Lexical Environment is the physical location where a function or variable is declared. Lets learn its implication on our code.",
    "createdIso": {
      "$date": "2018-10-22T16:48:41.251Z"
    },
    "createdMsec": 1.540226921251E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295898497",
    "duration": "6:00",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:43:38.316Z"
    },
    "updatedMsec": 1.541184218316E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bcdfff1fad501001360041a",
    "slug": "operator-associativity",
    "title": "Operator Associativity in JavaScript",
    "subTitle": "Given multiple operators of the same precedence are used in an expression, the operator associativity determines in which direction the processing will happen (left-to-right / right-to-left).",
    "createdIso": {
      "$date": "2018-10-22T16:50:57.533Z"
    },
    "createdMsec": 1.540227057533E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295897558",
    "duration": "4:12",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:53:05.474Z"
    },
    "updatedMsec": 1.541184785474E+12
  },
  {
    "_id": "5bce0495fad5010013600443",
    "slug": "todolist-hw",
    "title": "To-Do List App Homework - Solution",
    "createdIso": {
      "$date": "2018-10-22T17:10:45.522Z"
    },
    "createdMsec": 1.540228245523E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296131367",
    "duration": "4:03",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2019-06-10T20:35:12.987Z"
    },
    "updatedMsec": 1.541185017595E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/project-js-todo/tree/8-hw-prevent-empty-field",
    "demoUrl": "https://ilctodolist-8.netlify.com"
  },
  {
    "_id": "5bd0d1a9c80e1e0013cd2c3a",
    "slug": "todolist-app-10",
    "title": "Project: To-Do List App with Vanilla JavaScript - Part 10",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:10:34.396Z"
    },
    "createdMsec": 1.540228234913E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296951997",
    "duration": "4:09",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2019-06-02T19:39:28.144Z"
    },
    "updatedMsec": 1.541185015522E+12,
    "sourceUrl": "https://github.com/iLoveCodingOrg/project-js-todo/tree/7-submit-on-enter-complete"
  },
  {
    "_id": "5b885735c665e40014cad64f",
    "slug": "css-priority",
    "title": "CSS Priority Order",
    "subTitle": "In case multiple CSS properties are being applied on an element, this is the priority in which they will be applied.",
    "createdIso": {
      "$date": "2018-08-30T20:44:37.47Z"
    },
    "createdMsec": 1.53566187747E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287110801",
    "duration": "6:04",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:26:51.012Z"
    },
    "updatedMsec": 1.541180225335E+12,
    "bodyContent": "<h3>Resources</h3><ul><li><a href=\"https://stackoverflowcom/questions/1637343/whatare-the-priorities-among-css-selectors\">CSS Priority Order</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/63-css-priority",
    "sourceUrl": "source/htmlcss2/63-css-priority.zip"
  },
  {
    "_id": "5b885784c665e40014cad655",
    "slug": "html-forms-continued",
    "title": "Creating form - continued",
    "subTitle": "More about forms and related elements.",
    "createdIso": {
      "$date": "2018-08-30T20:45:56.962Z"
    },
    "createdMsec": 1.535661956962E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "288048912",
    "duration": "6:41",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:27:29.788Z"
    },
    "updatedMsec": 1.541180236679E+12,
    "bodyContent": "<h3>Resources</h3><ul><li><a href=\"https://developermozilla.org/enUS/docs/Web/HTML/Element#Forms\">Form elements on Mozilla</a></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\">&lt;input&gt; elements on Mozilla</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/69-form-continued",
    "sourceUrl": "source/htmlcss2/69-form-continued.zip"
  },
  {
    "_id": "5bcdfb9ffad50100136003f8",
    "slug": "text-editors",
    "title": "Quick intro to text-editors and VS Code",
    "subTitle": "Do not be overwhelmed with text-editors. They are very simple at its core. Get a quick intro to text-editors and VS Code in this lesson.",
    "createdIso": {
      "$date": "2018-10-22T16:32:31.855Z"
    },
    "createdMsec": 1.540225951855E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "294443162",
    "duration": "4:14",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript",
      "vscode"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:43.313Z"
    },
    "updatedMsec": 1.541185063313E+12
  },
  {
    "_id": "5bcdfebbfad5010013600404",
    "slug": "function",
    "title": "Intro to Functions in JavaScript - Part 1",
    "subTitle": "A function is a special type in JavaScript that hold a bunch of instructions. Lets learn its basic building blocks and where they are used.",
    "createdIso": {
      "$date": "2018-10-22T16:45:47.548Z"
    },
    "createdMsec": 1.540226747548E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295888457",
    "duration": "6:02",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:23.411Z"
    },
    "updatedMsec": 1.541185043411E+12
  },
  {
    "_id": "5bcdfef8fad5010013600408",
    "slug": "project-age-calc",
    "title": "Project: Simple Age Calculator",
    "subTitle": "Let's make a simple app that calculates our age, at any given year.",
    "createdIso": {
      "$date": "2018-10-22T16:46:48.456Z"
    },
    "createdMsec": 1.540226808456E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295891139",
    "duration": "6:02",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2019-06-10T20:37:54.71Z"
    },
    "updatedMsec": 1.541185047602E+12,
    "sourceUrl": "https://github.com/NoorSyed23/simple-age-calculator",
    "demoUrl": "https://simpleagecalculator.netlify.com"
  },
  {
    "_id": "5bcdff12fad501001360040a",
    "slug": "declaration-initialization-hoisting",
    "title": "Hoisting: How and when variables are created.",
    "subTitle": "Learn the about the two phases of processing the JavaScript engine goes through. Phase 1: Creation, Phase 2: Execution. Plus learn about the concept of 'hoisting'.",
    "createdIso": {
      "$date": "2018-10-22T16:47:14.818Z"
    },
    "createdMsec": 1.540226834818E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296206161",
    "duration": "7:01",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:29.747Z"
    },
    "updatedMsec": 1.541185049747E+12
  },
  {
    "_id": "5bce0005fad501001360041c",
    "slug": "ternary-operator",
    "title": "Ternary Operator in JavaScript",
    "subTitle": "Like and if/else statement, the Ternary operator also helps us run certain code when a condition is met. However ternary operator is used in simple scenarios.",
    "createdIso": {
      "$date": "2018-10-22T16:51:17.95Z"
    },
    "createdMsec": 1.54022707795E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295897918",
    "duration": "2:47",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:50:15.722Z"
    },
    "updatedMsec": 1.541184615722E+12
  },
  {
    "_id": "5bce0265fad501001360041f",
    "slug": "for-loop-2",
    "title": "For loop in JavaScript - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:01:25.292Z"
    },
    "createdMsec": 1.540227685292E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296112986",
    "duration": "5:21",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:52:27.241Z"
    },
    "updatedMsec": 1.541184747241E+12
  },
  {
    "_id": "5bce0392fad501001360042f",
    "slug": "by-reference-value",
    "title": "By Reference, by value",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:06:26.275Z"
    },
    "createdMsec": 1.540227986275E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "294447516",
    "duration": "7:49",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2019-05-24T18:16:52.371Z"
    },
    "updatedMsec": 1.541184959727E+12
  },
  {
    "_id": "5b884327c665e40014cad633",
    "slug": "chrome-dev-tools",
    "title": "Chrome Developer Tools - Intro",
    "subTitle": "Chrome Developer Tools are a Godsend for front-end developer. Lets see how it helps us dissect our code, find problems so we can solve them.",
    "createdIso": {
      "$date": "2018-08-30T19:19:03.041Z"
    },
    "createdMsec": 1.535656743041E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287106113",
    "duration": "6:43",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:24:28.601Z"
    },
    "updatedMsec": 1.54117980595E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b8856c1c665e40014cad649",
    "slug": "blog-design-5",
    "title": "Project: Blog Design (Part 5/7) - Styling sidebar",
    "subTitle": "Lesson 5/7 of Project Blog Design",
    "createdIso": {
      "$date": "2018-08-30T20:42:41.399Z"
    },
    "createdMsec": 1.535661761399E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105513",
    "duration": "3:10",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:26:09.718Z"
    },
    "updatedMsec": 1.541180217279E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b885711c665e40014cad64d",
    "slug": "position-absolute",
    "title": "Project: Coupon (using `absolute` & `relative` position)",
    "subTitle": "Learn how position absolute can be used to freely place elements on page.",
    "createdIso": {
      "$date": "2018-08-30T20:44:01.349Z"
    },
    "createdMsec": 1.535661841349E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287110710",
    "duration": "5:21",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:26:39.108Z"
    },
    "updatedMsec": 1.541180221029E+12,
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://wwww3schools.com/css/css_positioning.asp\">CSS Position Reference on w3schools</a></li>\n</ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/61-position-absolute",
    "sourceUrl": "source/htmlcss2/61-position-absolute.zip"
  },
  {
    "_id": "5bcdfe51fad5010013600400",
    "slug": "dynamic-vs-static-type",
    "title": "Dynamic vs. Static Type Languages",
    "subTitle": "Learn the difference between a Dynamically-Typed language and a Statically-Typed language. They are complicated looking words, but they are simple concepts.",
    "createdIso": {
      "$date": "2018-10-22T16:44:00.97Z"
    },
    "createdMsec": 1.54022664097E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295887586",
    "duration": "2:02",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:11.611Z"
    },
    "updatedMsec": 1.541185031611E+12
  },
  {
    "_id": "5bcdff59fad501001360040e",
    "slug": "scope-chain",
    "title": "Scope Chain: The hierarchy of scope.",
    "subTitle": "Inner scope has access to the variables in the outer scope. This hierarchy of scope is called the scope chain.",
    "createdIso": {
      "$date": "2018-10-22T16:48:25.492Z"
    },
    "createdMsec": 1.540226905492E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295893123",
    "duration": "3:45",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:39.109Z"
    },
    "updatedMsec": 1.541185059109E+12
  },
  {
    "_id": "5bcdfe0efad50100136003fc",
    "slug": "js-objects",
    "title": "Intro to Objects in JavaScript",
    "subTitle": "Objects are the most powerful Type in JavaScript. Let's see how to use them.",
    "createdIso": {
      "$date": "2018-10-22T16:42:54.037Z"
    },
    "createdMsec": 1.540226574038E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295885219",
    "duration": "5:24",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:48.195Z"
    },
    "updatedMsec": 1.541185068195E+12
  },
  {
    "_id": "5bcdffb8fad5010013600415",
    "slug": "double-equal",
    "title": "Double Equal '==' Operator",
    "subTitle": "Double equal operator compares two values, and checks if they are same after coercion.",
    "createdIso": {
      "$date": "2018-10-22T16:50:00.144Z"
    },
    "createdMsec": 1.540227000144E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295895952",
    "duration": "4:31",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:49:24.236Z"
    },
    "updatedMsec": 1.541184564236E+12
  },
  {
    "_id": "5bcdffdbfad5010013600418",
    "slug": "operator-increment-decrement",
    "title": "Increment '++' and Decrement '--' operators",
    "subTitle": "Increment '++' and decrement '--' operators, add 1 or subtract 1 respectively.",
    "createdIso": {
      "$date": "2018-10-22T16:50:35.941Z"
    },
    "createdMsec": 1.540227035941E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295896888",
    "duration": "2:35",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:49:33.069Z"
    },
    "updatedMsec": 1.541184573069E+12
  },
  {
    "_id": "5bce02a6fad5010013600424",
    "slug": "setinterval-clearinterval",
    "title": "'setInterval' & 'clearInterval'",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:02:30.495Z"
    },
    "createdMsec": 1.540227750496E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296114827",
    "duration": "3:40",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:54:13.668Z"
    },
    "updatedMsec": 1.541184853668E+12
  },
  {
    "_id": "5bce03fbfad5010013600437",
    "slug": "remove-node",
    "title": "Remove Node from DOM",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:08:11.813Z"
    },
    "createdMsec": 1.540228091813E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296118082",
    "duration": "5:02",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:56:27.068Z"
    },
    "updatedMsec": 1.541184987068E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce0415fad5010013600439",
    "slug": "dom-event-remove",
    "title": "Removing event listeners from DOM",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:08:37.003Z"
    },
    "createdMsec": 1.540228117003E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296118200",
    "duration": "6:56",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:56:37.176Z"
    },
    "updatedMsec": 1.541184997176E+12
  },
  {
    "_id": "5bce0443fad501001360043d",
    "slug": "todolist-app-4",
    "title": "Project: To-Do List App with Vanilla JavaScript - Part 4",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:09:23.082Z"
    },
    "createdMsec": 1.540228163082E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296119234",
    "duration": "6:51",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2019-06-10T20:27:26.464Z"
    },
    "updatedMsec": 1.541185004221E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/project-js-todo/tree/2-list",
    "demoUrl": "https://ilctodolist-2.netlify.com"
  },
  {
    "_id": "5bec3aad9b376b0013455f8c",
    "slug": "events-hw",
    "title": "More on Events + Homework",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:09:33.711Z"
    },
    "createdMsec": 1.542208173711E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:18:54.133Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298907898",
    "duration": "1:28",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5b88431bc665e40014cad632",
    "slug": "pseudo-selectors",
    "title": "Pseudo Selectors (:visited: :hover :active :focus)",
    "subTitle": "Elements can have different state like hover, active etc. Style your elements differently depending on the element state.",
    "createdIso": {
      "$date": "2018-08-30T19:18:51.011Z"
    },
    "createdMsec": 1.535656731011E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104845",
    "duration": "6:04",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:15:41.918Z"
    },
    "updatedMsec": 1.541179795086E+12,
    "demoUrl": "demo/htmlcss2/34-pseudo-selectors",
    "sourceUrl": "source/htmlcss2/34-pseudo-selectors.zip"
  },
  {
    "_id": "5b88576dc665e40014cad653",
    "slug": "iframe",
    "title": "<iframe> Embedding other webpages in your webpage",
    "subTitle": "Have you seem youtube videos or maps embedded on pages - its done via the <iframe> element.",
    "createdIso": {
      "$date": "2018-08-30T20:45:33.64Z"
    },
    "createdMsec": 1.53566193364E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287111061",
    "duration": "4:16",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>Resources</h3><ul><li><a href=\"https://developermozilla.org/enUS/docs/Web/HTML/Element/iframe\">&lt;iframe&gt; element on Mozilla</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:27:15.28Z"
    },
    "updatedMsec": 1.541180230311E+12,
    "demoUrl": "demo/htmlcss2/67-iframe",
    "sourceUrl": "source/htmlcss2/67-iframe.zip"
  },
  {
    "_id": "5bcdfed9fad5010013600406",
    "slug": "function-3",
    "title": "Intro to Functions in JavaScript - Part 3",
    "subTitle": "A function is a special type in JavaScript that hold a bunch of instructions. Lets learn its basic building blocks and where they are used.",
    "createdIso": {
      "$date": "2018-10-22T16:46:17.206Z"
    },
    "createdMsec": 1.540226777208E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295889899",
    "duration": "5:40",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:25.519Z"
    },
    "updatedMsec": 1.541185045519E+12
  },
  {
    "_id": "5bcdffe6fad5010013600419",
    "slug": "operator-precedence",
    "title": "Operator Precedence in JavaScript",
    "subTitle": "Given one expression has multiple operators used, the operator precedence determines which operator is going to be processed first.",
    "createdIso": {
      "$date": "2018-10-22T16:50:46.246Z"
    },
    "createdMsec": 1.540227046246E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295897030",
    "duration": "4:01",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:49:40.494Z"
    },
    "updatedMsec": 1.541184580495E+12
  },
  {
    "_id": "5bce03f2fad5010013600436",
    "slug": "dom-create-node",
    "title": "Create Node/Elements for the DOM",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:08:02.297Z"
    },
    "createdMsec": 1.540228082297E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296118014",
    "duration": "6:37",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:56:18.107Z"
    },
    "updatedMsec": 1.541184978107E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5b88559ac665e40014cad63a",
    "slug": "margin-padding",
    "title": "CSS Margin and Padding",
    "subTitle": "The CSS properties of margin and padding help us control the spacing within and between elements. This is the stepping stone to making websites look pretty - finally.",
    "createdIso": {
      "$date": "2018-08-30T20:37:46.677Z"
    },
    "createdMsec": 1.535661466677E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104853",
    "duration": "9:49",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:25:05.71Z"
    },
    "updatedMsec": 1.541179861371E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/42-margin-padding",
    "sourceUrl": "source/htmlcss2/42-margin-padding.zip"
  },
  {
    "_id": "5bec3a1e9b376b0013455f8a",
    "slug": "clear-tasks",
    "title": "Clear all tasks",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:07:10.211Z"
    },
    "createdMsec": 1.542208030211E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:18:16.741Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298906312",
    "duration": "3:09",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedMsec": 1.542208070328E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bcdfe43fad50100136003ff",
    "slug": "js-vocabulary",
    "title": "Basic Vocabulary in JavaScript",
    "subTitle": "Learn the basic terminologies used to describe concepts in JavaScript. These are fancy looking words, but they are very simple once you understand them.",
    "createdIso": {
      "$date": "2018-10-22T16:43:47.258Z"
    },
    "createdMsec": 1.540226627258E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295886817",
    "duration": "6:40",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:09.655Z"
    },
    "updatedMsec": 1.541185029655E+12
  },
  {
    "_id": "5bcdfe1ffad50100136003fd",
    "slug": "variables-dot-brackets",
    "title": "Creating Variables and accessing values",
    "subTitle": "Lets see how to create variables in JavaScript. Plus learn how to use the Dot and Brackets operator to access value from objects.",
    "createdIso": {
      "$date": "2018-10-22T16:43:11.699Z"
    },
    "createdMsec": 1.540226591699E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295885848",
    "duration": "5:59",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:49.978Z"
    },
    "updatedMsec": 1.541185069978E+12
  },
  {
    "_id": "5b88567ec665e40014cad645",
    "slug": "blog-design",
    "title": "Project: Blog Design - Create beautiful looking website",
    "subTitle": "In the project we will make a beautiful blog design from scratch using pure HTML and CSS. All hand coded. This is how professional design websites. Lesson 1/7 of Project Blog Design.",
    "createdIso": {
      "$date": "2018-08-30T20:41:34.349Z"
    },
    "createdMsec": 1.535661694349E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104937",
    "duration": "5:20",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:25:49.535Z"
    },
    "updatedMsec": 1.541180213835E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5bcdffc2fad5010013600416",
    "slug": "operator-comparison",
    "title": "Comparison Operators in JavaScript",
    "subTitle": "Comparison Operators compare two values and checks for different conditions. Lets see how and when to use them.",
    "createdIso": {
      "$date": "2018-10-22T16:50:10.926Z"
    },
    "createdMsec": 1.540227010927E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295896335",
    "duration": "2:39",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:49:26.995Z"
    },
    "updatedMsec": 1.541184566995E+12
  },
  {
    "_id": "5bcdffcefad5010013600417",
    "slug": "operator-conversion",
    "title": "Conversion Operators in JavaScript",
    "subTitle": "Conversion operators are used to convert one type into another.",
    "createdIso": {
      "$date": "2018-10-22T16:50:22.804Z"
    },
    "createdMsec": 1.540227022804E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295896561",
    "duration": "4:42",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:49:30.038Z"
    },
    "updatedMsec": 1.541184570038E+12
  },
  {
    "_id": "5bce033dfad5010013600428",
    "slug": "eventloop-3",
    "title": "Call Stack, Event Loop and Message Queue - Part 3",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:05:01.41Z"
    },
    "createdMsec": 1.54022790141E+12,
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "296116856",
    "duration": "6:37",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-14T16:05:26.308Z"
    },
    "updatedMsec": 1.542211526308E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce0467fad5010013600440",
    "slug": "todolist-app-7",
    "title": "Project: To-Do List App with Vanilla JavaScript - Part 7",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:09:59.548Z"
    },
    "createdMsec": 1.540228199548E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296120405",
    "duration": "4:16",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2019-06-10T20:29:57.36Z"
    },
    "updatedMsec": 1.541185009687E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/project-js-todo/tree/4-delete-btn-functional",
    "demoUrl": "https://ilctodolist-4.netlify.com"
  },
  {
    "_id": "5bce036efad501001360042c",
    "slug": "arguments-string-merger",
    "title": "Using 'arguments' in a function",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:05:50.422Z"
    },
    "createdMsec": 1.540227950422E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296116999",
    "duration": "3:45",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-14T16:05:40.88Z"
    },
    "updatedMsec": 1.54221154088E+12
  },
  {
    "_id": "5bce04acfad5010013600445",
    "slug": "event-bubble-2",
    "title": "Event Bubbling in DOM - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:11:08.029Z"
    },
    "createdMsec": 1.540228268029E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296131494",
    "duration": "5:32",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:57:07.262Z"
    },
    "updatedMsec": 1.541185027262E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce0288fad5010013600422",
    "slug": "var-let-const",
    "title": "Creating variables with 'var', 'let' & 'const'",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:02:00.042Z"
    },
    "createdMsec": 1.540227720042E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296113872",
    "duration": "4:52",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:53:52.429Z"
    },
    "updatedMsec": 1.541184832429E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bcdfeeafad5010013600407",
    "slug": "object-function-method",
    "title": "Deeper Realizations on Object, function and method",
    "subTitle": "Becoming a good developer is all about understanding things at its core. With our basic knowledge so far, lets recognize some deeper sides of JavaScript.",
    "createdIso": {
      "$date": "2018-10-22T16:46:34.858Z"
    },
    "createdMsec": 1.540226794858E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295890508",
    "duration": "5:30",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:26.478Z"
    },
    "updatedMsec": 1.541185046478E+12
  },
  {
    "_id": "5bec3ac59b376b0013455f8d",
    "slug": "global",
    "title": "Global Scope: Avoiding Pitfalls - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:09:56.999Z"
    },
    "createdMsec": 1.542208197E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:21:55.244Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298908015",
    "duration": "3:23",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce0291fad5010013600423",
    "slug": "const",
    "title": "More on 'const'",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:02:09.876Z"
    },
    "createdMsec": 1.540227729877E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296114695",
    "duration": "2:40",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:54:05.437Z"
    },
    "updatedMsec": 1.541184845437E+12
  },
  {
    "_id": "5b88560cc665e40014cad63e",
    "slug": "box-sizing",
    "title": "Use 'box-sizing' for more control on element sizing",
    "subTitle": "box-sizing can add more predictability on the size of your elements. See how.",
    "createdIso": {
      "$date": "2018-08-30T20:39:40.881Z"
    },
    "createdMsec": 1.535661580881E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105416",
    "duration": "3:43",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "demoUrl": "demo/htmlcss2/46-box-sizing",
    "sourceUrl": "source/htmlcss2/46-box-sizing.zip",
    "updatedIso": {
      "$date": "2019-02-16T04:25:20.898Z"
    },
    "updatedMsec": 1.541179893629E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5bec3af99b376b0013455f8e",
    "slug": "global-2",
    "title": "Global Scope: Avoiding Pitfalls - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:10:49.633Z"
    },
    "createdMsec": 1.542208249633E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:21:57.128Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298908344",
    "duration": "5:56",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5b8856d3c665e40014cad64a",
    "slug": "blog-design-6",
    "title": "Project: Blog Design (Part 6/7) - Styling articles",
    "subTitle": "Lesson 6/7 of Project Blog Design",
    "createdIso": {
      "$date": "2018-08-30T20:42:59.618Z"
    },
    "createdMsec": 1.535661779618E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105650",
    "duration": "2:17",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:26:18.026Z"
    },
    "updatedMsec": 1.541180217855E+12,
    "demoUrl": "demo/htmlcss2/58-article",
    "sourceUrl": "source/htmlcss2/58-article.zip",
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b885726c665e40014cad64e",
    "slug": "flexbox-grid",
    "title": "CSS Flexbox & CSS Grid - More layout methods",
    "subTitle": "CSS has additional set of layout properties called CSS Flexbox and CSS Grid. Lets discuss them in this lesson.",
    "createdIso": {
      "$date": "2018-08-30T20:44:22.555Z"
    },
    "createdMsec": 1.535661862555E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287110769",
    "duration": "3:02",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:26:44.744Z"
    },
    "updatedMsec": 1.541180223353E+12,
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://developermozilla.org/enUS/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox\">CSS Flexbox Guide</a></li>\n  <li><a href=\"https://css-tricks.com/snippets/css/a-guide-to-flexbox/\">CSS Flexbox Reference</a></li>\n  <li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Basic_Concepts_of_Grid_Layout\">CSS Grid Guide</a></li>\n  <li><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\">CSS Grid Reference</a></li>\n</ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "",
    "sourceUrl": ""
  },
  {
    "_id": "5b885748c665e40014cad650",
    "slug": "codepen-htmlcheatsheet",
    "title": "Additional Resources - Codepen + HTML Cheatsheet",
    "subTitle": "CSS can be fun - Here are a few resources to see whats possible.",
    "createdIso": {
      "$date": "2018-08-30T20:44:56.199Z"
    },
    "createdMsec": 1.535661896199E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287110879",
    "duration": "5:18",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>Resources</h3><ul><li><a href=\"https://codepenio/\">CodePen.io</a></li><li><a href=\"https://htmlcheatsheet.com/css/\">CSS interactive cheatsheet</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:26:56.759Z"
    },
    "updatedMsec": 1.541180226306E+12,
    "demoUrl": "",
    "sourceUrl": ""
  },
  {
    "_id": "5bcdff84fad5010013600411",
    "slug": "operator-arithmetic",
    "title": "Arithmetic Operators in JavaScript",
    "subTitle": "+ - / % ** are arithmetic operators in JavaScript. Lets learn how to use them.",
    "createdIso": {
      "$date": "2018-10-22T16:49:08.711Z"
    },
    "createdMsec": 1.540226948711E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296231745",
    "duration": "5:46",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:50:38.1Z"
    },
    "updatedMsec": 1.5411846381E+12
  },
  {
    "_id": "5bcdfbadfad50100136003f9",
    "slug": "js-setup",
    "title": "Project Setup",
    "subTitle": "Project setup instructions for the 'Learn JavaScript Correctly Course'",
    "createdIso": {
      "$date": "2018-10-22T16:32:45.499Z"
    },
    "createdMsec": 1.540225965499E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "294443135",
    "duration": "2:34",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:44.275Z"
    },
    "updatedMsec": 1.541185064275E+12
  },
  {
    "_id": "5bcdff9efad5010013600413",
    "slug": "operator-logical",
    "title": "Logical Operators in JavaScript",
    "subTitle": "Logical operators help us make decisions based on a given condition. Let's see how and when to use them.",
    "createdIso": {
      "$date": "2018-10-22T16:49:34.328Z"
    },
    "createdMsec": 1.540226974328E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295894888",
    "duration": "5:59",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:50:58.023Z"
    },
    "updatedMsec": 1.541184658023E+12
  },
  {
    "_id": "5bcdff91fad5010013600412",
    "slug": "operator-assignment",
    "title": "Assignment Operators in JavaScript",
    "subTitle": "One of the many assignment operators are used to  assign value to a variable in JavaScript. Lets learn about these assignment operators and how they differ.",
    "createdIso": {
      "$date": "2018-10-22T16:49:21.715Z"
    },
    "createdMsec": 1.540226961716E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295894560",
    "duration": "3:19",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:50:46.702Z"
    },
    "updatedMsec": 1.541184646702E+12
  },
  {
    "_id": "5bcdfffcfad501001360041b",
    "slug": "if-else",
    "title": "if else statement in JavaScript",
    "subTitle": "if-else statements are logical statements which help us run code only when certain conditions are met. Lets see how and when to use them.",
    "createdIso": {
      "$date": "2018-10-22T16:51:08.154Z"
    },
    "createdMsec": 1.540227068154E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296236994",
    "duration": "7:03",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:49:48.318Z"
    },
    "updatedMsec": 1.541184588319E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce042dfad501001360043b",
    "slug": "todolist-app-2",
    "title": "Project: To-Do List App with Vanilla JavaScript - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:09:01.012Z"
    },
    "createdMsec": 1.540228141012E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296118313",
    "duration": "2:01",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2019-06-10T20:23:49.612Z"
    },
    "updatedMsec": 1.541185000624E+12,
    "sourceUrl": "https://github.com/iLoveCodingOrg/project-js-todo/tree/0-start",
    "demoUrl": "https://ilctodolist-0.netlify.com"
  },
  {
    "_id": "5b884311c665e40014cad631",
    "slug": "css-combinators",
    "title": "CSS Combinators selectors (~ + > etc.)",
    "subTitle": "Hyper target elements with selector combinators",
    "createdIso": {
      "$date": "2018-08-30T19:18:41.415Z"
    },
    "createdMsec": 1.535656721415E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104625",
    "duration": "7:50",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:15:38.954Z"
    },
    "updatedMsec": 1.541180197917E+12,
    "demoUrl": "demo/htmlcss2/33-css-combinators",
    "sourceUrl": "source/htmlcss2/33-css-combinators.zip"
  },
  {
    "_id": "5b885618c665e40014cad63f",
    "slug": "border-radius",
    "title": "'border-radius' Curve borders and make custom shapes.",
    "subTitle": "Don't just round corners - make custom shapes with the 'border-radius' css property.",
    "createdIso": {
      "$date": "2018-08-30T20:39:52.923Z"
    },
    "createdMsec": 1.535661592923E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105665",
    "duration": "7:58",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://developermozilla.org/enUS/docs/Web/CSS/border-radius\">CSS `border-radius` reference on Mozilla</a></li>\n  <li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\"></a><a href=\"https://stackoverflow.com/questions/38493828/border-radius-with-division\">CSS `border-radius` values explained</a></li>\n</ul><img src=\"https://i.stack.imgur.com/FnIqF.png\" alt=\"enter image description here\"><p>Image referenced from <a href=\"https://stackoverflow.com/questions/38493828/border-radius-with-division\">https://stackoverflow.com/questions/38493828/border-radius-with-division</a></p><p><img src=\"https://a.ilovecoding.org/img/htmlcss2/border-radius.gif\" alt=\"border-radius cheatsheet\"><br></p>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:25:24.237Z"
    },
    "updatedMsec": 1.541179981997E+12,
    "demoUrl": "demo/htmlcss2/47-border-radius",
    "sourceUrl": "source/htmlcss2/47-border-radius.zip"
  },
  {
    "_id": "5bce0273fad5010013600420",
    "slug": "while-loop",
    "title": "While loop in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:01:39.173Z"
    },
    "createdMsec": 1.540227699174E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296113333",
    "duration": "4:15",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:52:46.894Z"
    },
    "updatedMsec": 1.541184766894E+12
  },
  {
    "_id": "5b88436fc665e40014cad638",
    "slug": "sizing-units",
    "title": "Common CSS Units - (px, em, rem, %)",
    "subTitle": "We can size our elements with different sizing units. Lets learn the most common units and how to use them.",
    "createdIso": {
      "$date": "2018-08-30T19:20:15.502Z"
    },
    "createdMsec": 1.535656815502E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105724",
    "duration": "7:01",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://github.com/iLoveCodingOrg/csscheatsheet\"></a><a href=\"https://www.w3schools.com/cssref/css_units.asp\">CSS Sizing Units on w3schools</a></li>\n</ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:24:48.094Z"
    },
    "updatedMsec": 1.541180205706E+12
  },
  {
    "_id": "5bce027efad5010013600421",
    "slug": "do-while",
    "title": "Do while loop in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:01:50.316Z"
    },
    "createdMsec": 1.540227710316E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296113668",
    "duration": "2:34",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:53:34.538Z"
    },
    "updatedMsec": 1.541184814538E+12
  },
  {
    "_id": "5bce0355fad501001360042a",
    "slug": "callback-function",
    "title": "Callback functions in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:05:24.976Z"
    },
    "createdMsec": 1.540227924976E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296116252",
    "duration": "2:23",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:55:55.753Z"
    },
    "updatedMsec": 1.541184955754E+12
  },
  {
    "_id": "5b8856a8c665e40014cad648",
    "slug": "blog-design-4",
    "title": "Project: Blog Design (Part 4/7) - Styling main and footer area",
    "subTitle": "Lesson 4/7 of Project Blog Design",
    "createdIso": {
      "$date": "2018-08-30T20:42:16.711Z"
    },
    "createdMsec": 1.535661736712E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105360",
    "duration": "4:02",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:26:05.715Z"
    },
    "updatedMsec": 1.541180216391E+12,
    "demoUrl": "demo/htmlcss2/56-main-footer",
    "sourceUrl": "source/htmlcss2/56-main-footer.zip",
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5bcdfbb9fad50100136003fa",
    "slug": "js-types",
    "title": "Types in JavaScript - Part 1",
    "subTitle": "Types are the foundation of JavaScript - Although very simple, they have immense power and depth. Lets learn them correctly from the ground up.",
    "createdIso": {
      "$date": "2018-10-22T16:32:56.99Z"
    },
    "createdMsec": 1.54022597699E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296203575",
    "duration": "6:17",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:57:45.421Z"
    },
    "updatedMsec": 1.541185065422E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bcdfde4fad50100136003fb",
    "slug": "js-types-2",
    "title": "Types in JavaScript - Part 2",
    "subTitle": "Types are the foundation of JavaScript - Although very simple, they have immense power and depth. Lets learn them correctly from the ground up.",
    "createdIso": {
      "$date": "2018-10-22T16:42:12.53Z"
    },
    "createdMsec": 1.54022653253E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296204705",
    "duration": "4:15",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:57:46.676Z"
    },
    "updatedMsec": 1.541185066676E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bcdfe9dfad5010013600402",
    "slug": "array-length",
    "title": "More on Arrays: Weird Parts and Length",
    "subTitle": "Checking Array length and looking at a scenario where the length returns incorrect value. Note: Good interview prep here.",
    "createdIso": {
      "$date": "2018-10-22T16:45:17.123Z"
    },
    "createdMsec": 1.540226717123E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295888085",
    "duration": "2:40",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:15.382Z"
    },
    "updatedMsec": 1.541185035382E+12
  },
  {
    "_id": "5bcdfecdfad5010013600405",
    "slug": "function-2",
    "title": "Intro to Functions in JavaScript - Part 2",
    "subTitle": "A function is a special type in JavaScript that hold a bunch of instructions. Lets learn its basic building blocks and where they are used.",
    "createdIso": {
      "$date": "2018-10-22T16:46:05.691Z"
    },
    "createdMsec": 1.540226765692E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295889125",
    "duration": "5:44",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2019-02-16T02:54:19.482Z"
    },
    "updatedMsec": 1.541185044481E+12
  },
  {
    "_id": "5bce03d3fad5010013600433",
    "slug": "dom-query",
    "title": "Query the DOM nodes",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:07:31.59Z"
    },
    "createdMsec": 1.54022805159E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296117840",
    "duration": "5:35",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:56:04.712Z"
    },
    "updatedMsec": 1.541184964715E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce03ddfad5010013600434",
    "slug": "dom-modify",
    "title": "Modify DOM nodes",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:07:41.078Z"
    },
    "createdMsec": 1.540228061078E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296117894",
    "duration": "6:30",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:56:05.514Z"
    },
    "updatedMsec": 1.541184965514E+12
  },
  {
    "_id": "5b8842f5c665e40014cad62f",
    "slug": "asterisk-selector",
    "title": "Select all elements with asterisk (*) selector",
    "subTitle": "At times you want all your elements to have certain CSS properties. Use the asterisk (*) selector for that.",
    "createdIso": {
      "$date": "2018-08-30T19:18:13.599Z"
    },
    "createdMsec": 1.5356566936E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287104493",
    "duration": "0:58",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:15:34.098Z"
    },
    "updatedMsec": 1.541179768076E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b885643c665e40014cad642",
    "slug": "float-clear",
    "title": "'float' & 'clear' property - Moving elements around.",
    "subTitle": "The 'float' and 'clear' help us move elements around within our webpage. See how it works in this lesson.",
    "createdIso": {
      "$date": "2018-08-30T20:40:35.753Z"
    },
    "createdMsec": 1.535661635753E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287106302",
    "duration": "4:38",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:25:38.774Z"
    },
    "updatedMsec": 1.54118020963E+12,
    "demoUrl": "demo/htmlcss2/50-float-clear",
    "sourceUrl": "source/htmlcss2/50-float-clear.zip",
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b88569bc665e40014cad647",
    "slug": "blog-design-3",
    "title": "Project: Blog Design (Part 3/7) - Styling the header",
    "subTitle": "Lesson 3/7 of Project Blog Design",
    "createdIso": {
      "$date": "2018-08-30T20:42:03.231Z"
    },
    "createdMsec": 1.535661723231E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105243",
    "duration": "4:01",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:26:01.203Z"
    },
    "updatedMsec": 1.541180215646E+12,
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b885761c665e40014cad652",
    "slug": "tables-continued",
    "title": "<table> Making tables in HTML continued",
    "subTitle": "Continue to learn about building tables in HTML.",
    "createdIso": {
      "$date": "2018-08-30T20:45:21.69Z"
    },
    "createdMsec": 1.53566192169E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287111027",
    "duration": "2:41",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://developermozilla.org/enUS/docs/Web/HTML/Element/table\">&lt;table&gt; reference on Mozilla<table></table></a></li>\n  <li><a href=\"https://www.w3schools.com/html/html_tables.asp\">&lt;table&gt; reference on w3schools</a></li>\n</ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:27:09.946Z"
    },
    "updatedMsec": 1.541180228653E+12,
    "demoUrl": "demo/htmlcss2/65-66-table",
    "sourceUrl": "source/htmlcss2/65-66-table.zip"
  },
  {
    "_id": "5b88577bc665e40014cad654",
    "slug": "html-forms",
    "title": "Creating forms and understanding how they work",
    "subTitle": "When you login and sign-up to websites, you are using form elements to enter and submit your information. Lets see how these forms are made.",
    "createdIso": {
      "$date": "2018-08-30T20:45:47.104Z"
    },
    "createdMsec": 1.535661947104E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "288048832",
    "duration": "11:17",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:27:21.591Z"
    },
    "updatedMsec": 1.541180232611E+12,
    "bodyContent": "<h3>Resources</h3><ul><li><a href=\"https://developermozilla.org/enUS/docs/Web/HTML/Element#Forms\">Form elements on Mozilla</a></li><li><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\">&lt;input&gt; elements on Mozilla</a></li></ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "demoUrl": "demo/htmlcss2/68-form",
    "sourceUrl": "source/htmlcss2/68-form.zip"
  },
  {
    "_id": "5bcdfeb0fad5010013600403",
    "slug": "array-type-checking",
    "title": "Type Checking Arrays",
    "subTitle": "There is a special feature in JavaScript that allows us to check the 'type' of an Array. Lets take a look here.",
    "createdIso": {
      "$date": "2018-10-22T16:45:36.312Z"
    },
    "createdMsec": 1.540226736312E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295888337",
    "duration": "1:25",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:19.913Z"
    },
    "updatedMsec": 1.541185039913E+12
  },
  {
    "_id": "5bce0332fad5010013600427",
    "slug": "eventloop-2",
    "title": "Call Stack, Event Loop and Message Queue - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:04:50.11Z"
    },
    "createdMsec": 1.54022789011E+12,
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "294445941",
    "duration": "4:41",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-14T16:05:30.317Z"
    },
    "updatedMsec": 1.542211530317E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce0422fad501001360043a",
    "slug": "todolist-app",
    "title": "Project: To-Do List App with Vanilla JavaScript - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:08:50.056Z"
    },
    "createdMsec": 1.540228130056E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296118272",
    "duration": "4:46",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2019-06-10T20:23:38.768Z"
    },
    "updatedMsec": 1.541184998642E+12,
    "thumbnail": "todolist-app.jpg",
    "sourceUrl": "https://github.com/iLoveCodingOrg/project-js-todo/tree/0-start",
    "demoUrl": "https://ilctodolist-0.netlify.com"
  },
  {
    "_id": "5bce0472fad5010013600441",
    "slug": "todolist-app-8",
    "title": "Project: To-Do List App with Vanilla JavaScript - Part 8",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:10:10.47Z"
    },
    "createdMsec": 1.54022821047E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296120960",
    "duration": "3:49",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2019-06-10T20:32:39.53Z"
    },
    "updatedMsec": 1.541185011948E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/project-js-todo/tree/5-clear-field",
    "demoUrl": "https://ilctodolist-5.netlify.com"
  },
  {
    "_id": "5bce048afad5010013600442",
    "slug": "todolist-app-9",
    "title": "Project: To-Do List App with Vanilla JavaScript - Part 9",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:10:34.912Z"
    },
    "createdMsec": 1.540228234913E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296131351",
    "duration": "5:17",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2019-06-10T20:34:00.497Z"
    },
    "updatedMsec": 1.541185013686E+12,
    "sourceUrl": "https://github.com/iLoveCodingOrg/project-js-todo/tree/6-submit-on-enter",
    "demoUrl": "https://ilctodolist-6.netlify.com"
  },
  {
    "_id": "5bec3a909b376b0013455f8b",
    "slug": "domcontentloaded",
    "title": "DomContentLoaded Event",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:09:04.321Z"
    },
    "createdMsec": 1.542208144323E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:18:41.75Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298907275",
    "duration": "7:30",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bcdfe2ffad50100136003fe",
    "slug": "typeof",
    "title": "Using the 'typeof' operator",
    "subTitle": "Use the 'typeof' operator to see whats the 'type' of a value or variable.",
    "createdIso": {
      "$date": "2018-10-22T16:43:26.998Z"
    },
    "createdMsec": 1.540226606998E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295886416",
    "duration": "4:03",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:51.591Z"
    },
    "updatedMsec": 1.541185071592E+12
  },
  {
    "_id": "5bcdff2cfad501001360040c",
    "slug": "js-scope",
    "title": "Scope in JavaScript - Part 1",
    "subTitle": "Scope are the limits in which a variable exists. Lets see how the concept of 'scope' gives us limitations and power.",
    "createdIso": {
      "$date": "2018-10-22T16:47:40.558Z"
    },
    "createdMsec": 1.540226860559E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295892431",
    "duration": "4:57",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:31.88Z"
    },
    "updatedMsec": 1.54118505188E+12
  },
  {
    "_id": "5bcdff3cfad501001360040d",
    "slug": "js-scope-2",
    "title": "Scope in JavaScript - Part 2",
    "subTitle": "Scope are the limits in which a variable exists. Lets see how the concept of 'scope' gives us limitations and power.",
    "createdIso": {
      "$date": "2018-10-22T16:47:56.62Z"
    },
    "createdMsec": 1.54022687662E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295892849",
    "duration": "3:02",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:38.227Z"
    },
    "updatedMsec": 1.541185058227E+12
  },
  {
    "_id": "5bce039cfad5010013600430",
    "slug": "browser-api",
    "title": "Browser API - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:06:36.011Z"
    },
    "createdMsec": 1.540227996012E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296117640",
    "duration": "4:03",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:56:01.491Z"
    },
    "updatedMsec": 1.541184961491E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce03b7fad5010013600431",
    "slug": "browser-api-2",
    "title": "Browser API - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:07:03.092Z"
    },
    "createdMsec": 1.540228023092E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296117671",
    "duration": "6:03",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:56:02.323Z"
    },
    "updatedMsec": 1.541184962323E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce0407fad5010013600438",
    "slug": "dom-event",
    "title": "Events: Adding event listeners to DOM",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:08:23.002Z"
    },
    "createdMsec": 1.540228103002E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296118133",
    "duration": "6:21",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:56:30.223Z"
    },
    "updatedMsec": 1.541184990223E+12
  },
  {
    "_id": "5bce0451fad501001360043e",
    "slug": "todolist-app-5",
    "title": "Project: To-Do List App with Vanilla JavaScript - Part 5",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:09:37.503Z"
    },
    "createdMsec": 1.540228177504E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296119771",
    "duration": "2:27",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:56:45.986Z"
    },
    "updatedMsec": 1.541185005986E+12
  },
  {
    "_id": "5bce04a1fad5010013600444",
    "slug": "event-bubble",
    "title": "Event Bubbling in DOM - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:10:57.276Z"
    },
    "createdMsec": 1.540228257276E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296131397",
    "duration": "2:50",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:56:59.498Z"
    },
    "updatedMsec": 1.541185019498E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5b884363c665e40014cad637",
    "slug": "background",
    "title": "Background CSS Property. Change color, images and more",
    "subTitle": "Learn how to style the background of any element with color and image.",
    "createdIso": {
      "$date": "2018-08-30T19:20:03.566Z"
    },
    "createdMsec": 1.535656803566E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105344",
    "duration": "7:39",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "bodyContent": "<h3>Resources</h3>\n<ul>\n  <li><a href=\"https://github.com/iLoveCodingOrg/csscheatsheet\"></a><a href=\"https://unsplash.com/\">Free images from&nbsp;Unsplash.com</a></li>\n</ul>\n\n<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "updatedIso": {
      "$date": "2019-02-16T04:24:43.744Z"
    },
    "updatedMsec": 1.541180203871E+12,
    "demoUrl": "demo/htmlcss2/39-background",
    "sourceUrl": "source/htmlcss2/39-background.zip"
  },
  {
    "_id": "5b885602c665e40014cad63d",
    "slug": "width-height-margin-auto",
    "title": "Size elements with 'width' and 'height' property",
    "subTitle": "Control element size with width/height property and position them in center of the element.",
    "createdIso": {
      "$date": "2018-08-30T20:39:30.227Z"
    },
    "createdMsec": 1.535661570227E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287105807",
    "duration": "3:21",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:25:16.247Z"
    },
    "updatedMsec": 1.541180207204E+12,
    "demoUrl": "demo/htmlcss2/45-width-height-margin-auto",
    "sourceUrl": "source/htmlcss2/45-width-height-margin-auto.zip",
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5bcdff05fad5010013600409",
    "slug": "function-statement-expression",
    "title": "Function Statement vs. Function Expression",
    "subTitle": "There are two flavors of writing a function. One is called Function Statement (a.k.a Function Declaration) and the other is called Function Expression. Lets see how they differ.",
    "createdIso": {
      "$date": "2018-10-22T16:47:01.034Z"
    },
    "createdMsec": 1.540226821034E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295891490",
    "duration": "3:58",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:28.655Z"
    },
    "updatedMsec": 1.541185048655E+12
  },
  {
    "_id": "5bcdff1efad501001360040b",
    "slug": "function-hoisting",
    "title": "Function Hoisting",
    "subTitle": "How does function hoisting work. Tip: Hoisting works differently on Function Statement and Function Expression.",
    "createdIso": {
      "$date": "2018-10-22T16:47:26.542Z"
    },
    "createdMsec": 1.540226846542E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "295891896",
    "duration": "4:52",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:57:30.776Z"
    },
    "updatedMsec": 1.541185050777E+12
  },
  {
    "_id": "5bcdffadfad5010013600414",
    "slug": "triple-equal",
    "title": "Triple Equal '===' operator",
    "subTitle": "Triple equal operator compare two values, and checks if the values are exactly the same.",
    "createdIso": {
      "$date": "2018-10-22T16:49:49.503Z"
    },
    "createdMsec": 1.540226989503E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "295895434",
    "duration": "6:23",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:51:03.149Z"
    },
    "updatedMsec": 1.541184663149E+12
  },
  {
    "_id": "5bcdff77fad5010013600410",
    "slug": "js-code-formatting",
    "title": "Code formatting and coding ethics",
    "subTitle": "Writing good code consists of two parts - Part 1: Writing concise and easy to understand logic; Part 2: Organizing and formating your code well (Presentation). This lesson is about the latter.",
    "createdIso": {
      "$date": "2018-10-22T16:48:55.662Z"
    },
    "createdMsec": 1.540226935662E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296206847",
    "duration": "6:31",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-02T18:50:33.696Z"
    },
    "updatedMsec": 1.541184633696E+12
  },
  {
    "_id": "5bce0253fad501001360041e",
    "slug": "for-loop",
    "title": "For loop in JavaScript - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:01:07.183Z"
    },
    "createdMsec": 1.540227667183E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "296109601",
    "duration": "6:54",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:52:07.971Z"
    },
    "updatedMsec": 1.541184727971E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bce0347fad5010013600429",
    "slug": "eventloop-4",
    "title": "Call Stack, Event Loop and Message Queue - Part 4",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:05:11.483Z"
    },
    "createdMsec": 1.540227911483E+12,
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "296115858",
    "duration": "3:39",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "updatedIso": {
      "$date": "2018-11-14T16:05:21.081Z"
    },
    "updatedMsec": 1.542211521082E+12
  },
  {
    "_id": "5b885639c665e40014cad641",
    "slug": "inline-block",
    "title": "Using 'display' property of CSS & 'inline-block'",
    "subTitle": "The hybrid of the 'block' and 'inline' value of 'display' property is 'inline-block'. See how it works.",
    "createdIso": {
      "$date": "2018-08-30T20:40:25.002Z"
    },
    "createdMsec": 1.535661625002E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "287106167",
    "duration": "3:19",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:25:32.035Z"
    },
    "updatedMsec": 1.541180091196E+12,
    "demoUrl": "demo/htmlcss2/49-inline-block",
    "sourceUrl": "source/htmlcss2/49-inline-block.zip",
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>"
  },
  {
    "_id": "5b933e98da088b00144aecad",
    "slug": "htmlcss-next",
    "title": "Conclusion and next steps",
    "subTitle": "Now that you have finished the HTML & CSS course, lets discuss the next steps in your journey",
    "thumbnail": "none",
    "bodyContent": "<h3>CSS Cheatsheet</h3><ul><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\">Download CSS Cheatsheet (PDF)</a></li><li><a href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\">Star CSS Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li>\n</ul>\n\n<h3>HTML Cheatsheet</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\">Download HTML Cheatsheet (PDF)</a></li>\n<li><a href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\">Star HTML Cheatsheet on Github</a></li>\n<li>Share HTML/CSS Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\">https://ilovecoding.org/blog/htmlcss-cheatsheet</a></li></ul>\n\n<p><a href=\"https://ilovecoding.org/blog/htmlcss-cheatsheet\"><img class=\"w-75\" src=\"//a.ilovecoding.org/thumb/htmlcss-cheatsheet.png\" alt=\"HTML CSS Cheatsheet thumb\"></a></p>",
    "createdIso": {
      "$date": "2018-09-08T03:14:32.088Z"
    },
    "createdMsec": 1.536376472088E+12,
    "level": 0,
    "active": true,
    "enabled": true,
    "videoSource": "288830701",
    "duration": "3:28",
    "access": 0,
    "technology": [
      "HTML/CSS"
    ],
    "topic": [
      "Front-End"
    ],
    "updatedIso": {
      "$date": "2019-02-16T04:27:54.116Z"
    },
    "updatedMsec": 1.541180240028E+12
  },
  {
    "_id": "5bcdfb94fad50100136003f7",
    "slug": "node-browser",
    "title": "Understanding Node.js and the browser",
    "subTitle": "Learn how JavaScript is used to build apps for the Front-End and Back-End both. This lesson will make things clear.",
    "createdIso": {
      "$date": "2018-10-22T16:32:20.012Z"
    },
    "createdMsec": 1.540225940012E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "294447664",
    "duration": "7:05",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2018-11-02T18:57:42.069Z"
    },
    "updatedMsec": 1.541185062069E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5c8fdb5cf8f82300141b5927",
    "slug": "interview-process",
    "title": "Complete Interview Process",
    "subTitle": "",
    "thumbnail": "",
    "demoUrl": "",
    "bodyContent": "",
    "createdIso": {
      "$date": "2019-03-18T17:54:36.222Z"
    },
    "level": 0,
    "sourceUrl": "",
    "videoSource": "none",
    "duration": "",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      ""
    ],
    "updatedIso": {
      "$date": "2019-03-18T17:54:44.956Z"
    }
  },
  {
    "_id": "5bce045dfad501001360043f",
    "slug": "todolist-app-6",
    "title": "Project: To-Do List App with Vanilla JavaScript - Part 6",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-10-22T17:09:49.009Z"
    },
    "createdMsec": 1.540228189009E+12,
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "296119974",
    "duration": "4:39",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedIso": {
      "$date": "2019-06-10T20:28:48.132Z"
    },
    "updatedMsec": 1.541185008043E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/project-js-todo/tree/3-delete-btn",
    "demoUrl": "https://ilctodolist-3.netlify.com"
  },
  {
    "_id": "5bec3c9c9b376b0013455fad",
    "slug": "fetch-countries",
    "title": "Project: Get list of Countries",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:17:48.891Z"
    },
    "createdMsec": 1.542208668891E+12,
    "updatedIso": {
      "$date": "2019-06-10T20:07:03.698Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299035410",
    "duration": "5:53",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "sourceUrl": "https://github.com/iLoveCodingOrg/get-population-by-country",
    "demoUrl": "https://getpopulation-0.netlify.com"
  },
  {
    "_id": "5c843ebfcededc0014e5de0f",
    "slug": "for",
    "title": "Who is iLoveCoding best suited for?",
    "subTitle": "",
    "thumbnail": "",
    "bodyContent": "<div class=\"video\"><iframe src=\"https://player.vimeo.com/video/311500173\" width=\"640\" height=\"360\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe></div>",
    "createdIso": {
      "$date": "2019-03-09T22:31:27.895Z"
    },
    "level": 0,
    "videoSource": "none",
    "duration": "2:30",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      "question"
    ],
    "updatedIso": {
      "$date": "2019-03-09T23:34:43.555Z"
    }
  },
  {
    "_id": "5bec3be99b376b0013455f9f",
    "slug": "array-filter",
    "title": ".filter() method of Array in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:14:49.14Z"
    },
    "createdMsec": 1.54220848914E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:13.955Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298996221",
    "duration": "7:31",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>Resources</h3><ul><li><a href=\"https://github.com/vega/vega/blob/master/docs/data/cars.json\"></a><a href=\"https://github.com/vega/vega/blob/master/docs/data/cars.json\" style=\"background-color: rgb(255, 255, 255); font-size: 0.9rem;\">Cars data used in this lesson</a><br></li></ul>\n\n<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5c843ed3cededc0014e5de10",
    "slug": "build",
    "title": "What will you build?",
    "subTitle": "Look at all the projects you will build with iLoveCoding",
    "thumbnail": "",
    "bodyContent": "<h2>Blog Design</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/1-blog.jpg\" alt=\"Blog Design\">\n<h2>Song Search App</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/10-song-search.jpg\" alt=\"Song Search App\">\n<h2>Book search app</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/11-book-search.jpg\" alt=\"Book search app\">\n<h2>Note Taking App with authentication</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/12-note-taking-app.jpg\" alt=\"Note Taking App with authentication\">\n<h2>Timer App</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/13-timer-app.jpg\" alt=\"Timer App\">\n<h2>Web Scrapper with Node.js</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/14-web-scrapper.jpg\" alt=\"Web Scrapper with Node.js\">\n<h2>Crypto Currency Price Checker Mobile App with React Native</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/15-crypto-currency-price.jpg\" alt=\"Crypto Currency Price Checker Mobile App with React Native\">\n<h2>Scroll Animation with Animate.css</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/16-scroll-animation.jpg\" alt=\"Scroll Animation with Animate.css\">\n<h2>Todo App with Pure JavaScript and DOM</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/2-todo.jpg\" alt=\"Todo App with Pure JavaScript and DOM\">\n<h2>Snake Game</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/3-snake.jpg\" alt=\"Snake Game\">\n<h2>Calculator App</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/4-calculator.jpg\" alt=\"Calculator App\">\n<h2>Photo Slider</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/5-photo-slider.jpg\" alt=\"Photo Slider\">\n<h2>Stop Watch App</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/6-stopwatch.jpg\" alt=\"Stop Watch App\">\n<h2>Accordion Feature</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/7-accordion.jpg\" alt=\"Accordion Feature\">\n<h2>Tab Feature</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/8-tab-functionality.jpg\" alt=\"Tab Feature\">\n<h2>Location Finder</h2>\n<img class=\"border img-fluid\" src=\"//a.ilovecoding.org/img/what-will-you-build/9-location-finder.jpg\" alt=\"Location Finder\">",
    "createdIso": {
      "$date": "2019-03-09T22:31:47.32Z"
    },
    "level": 0,
    "videoSource": "311500669",
    "duration": "2:54",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      "question"
    ],
    "updatedIso": {
      "$date": "2019-03-10T01:03:50.96Z"
    }
  },
  {
    "_id": "5c8fda97f8f82300141b5926",
    "slug": "interview-questions",
    "title": "Interview Questions",
    "subTitle": "",
    "thumbnail": "",
    "demoUrl": "",
    "bodyContent": "",
    "createdIso": {
      "$date": "2019-03-18T17:51:19.428Z"
    },
    "level": 0,
    "sourceUrl": "",
    "videoSource": "none",
    "duration": "",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      ""
    ]
  },
  {
    "_id": "5c900b52f8f82300141b592e",
    "slug": "fs-ideas",
    "title": "Full Stack App Ideas",
    "subTitle": "",
    "thumbnail": "",
    "demoUrl": "",
    "bodyContent": "",
    "createdIso": {
      "$date": "2019-03-18T21:19:14.49Z"
    },
    "level": 0,
    "sourceUrl": "",
    "videoSource": "",
    "duration": "",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      ""
    ]
  },
  {
    "_id": "5bee495ac284b1001335c931",
    "slug": "this",
    "title": "'this' - Understand the 'this' keyword once and for all - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-16T04:36:42.313Z"
    },
    "createdMsec": 1.542343002313E+12,
    "updatedIso": {
      "$date": "2018-11-16T04:35:34.91Z"
    },
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "301052346",
    "duration": "4:45",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ]
  },
  {
    "_id": "5c328b9e116a4c0014f142ce",
    "slug": "skill-roadmap",
    "title": "Complete Skill Roadmap: What should you learn and in what sequence",
    "subTitle": "In this lesson, you will see a complete roadmap on what skill, libraries, frameworks and tools you need to learn to become a job-ready Front-End and Full-Stack JavaScript developer. ",
    "createdIso": {
      "$date": "2019-01-06T23:13:34.791Z"
    },
    "level": 0,
    "videoSource": "308929884",
    "duration": "12:22",
    "access": 0,
    "technology": [],
    "topic": [
      "Core Training"
    ],
    "updatedIso": {
      "$date": "2019-04-17T00:55:21.396Z"
    },
    "bodyContent": "<h3>Resource</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/skill-roadmap/raw/master/skill-roadmap.pdf\">Skill Roadmap to Front-End and Full-Stack JavaScript Development (Download PDF)</a></li></ul><h3>Video Transcript</h3><p>Now comes the part where you get complete clarity and a complete roadmap that you can use to become a front end developer, a full stack developer and become job-ready, interview-ready, and portfolio-ready. So you are able to work in the workplace. So here is the chart that I've created for you. So it is a chart that has the skills and it has the timeline. So you already know by now that a front end developer is somebody who creates modern user interfaces for the web. So, what are the tools. What are the skills needed by a front-end developer. A front-end developer needs first and foremost to know how HTML and CSS work. Now HTML and CSS are not programming languages, they are coding languages but they are not programming languages. The difference is that a programming language would have some logical aspect of it. So let's say determining the logical flow, telling the computer if this happens do something do that. If a different situation happens do something else. So that's the logical instructional piece that a computer needs; And HTML and CSS have nothing to do with that, they have nothing to do with the logical aspect. HTML is a language that is used to make the skeleton off the websites and CSS is instruction style of writing code which is not logic but it's just a sheet of instructions that add color and advanced layout to a web page. So it's really the look and feel is determined by HTML and CSS.</p><p>So if you're going to make simple web sites you need to know HTML and CSS and iLoveCoding has a very comprehensive free course very detailed which cheatsheets and homeworks of how to learn HTML and CSS and make professional looking websites. Now once you know that that's the important piece you can not skip that piece it's important right. That issue once he has his course is better than many college level and paid courses and bootcamp courses there are people charging a thousand dollars for certain training and this course will give you that training, and it's free. You can check it out. It's you can check it out and you'll find it for yourself.</p><p>So once you have that particular training which is going to be very fast it's not a complicated subject but it has certain certain things that you need to learn. So after you know that then you're going to get into the programming phase and JavaScript as we have determined throughout your lessons that I've given you that JavaScript is the language for the web, and now language used in other areas as well.</p><p>So what you need to do is learn Javascript fundamentals so you know how programming works. You are able to think like a developer you are you are able to solve problems breakdown problem problems into logical pieces so you can build features for the web.</p><p>In our case so you learn JavaScript and then you learn how JavaScript is used in the browser. All right. So now you're using the layouts with HTML and CSS and you're using the functional aspect of JavaScript and working with the browser to actually create a modern user interfaces. So when you put these three pieces together HTML, CSS and&nbsp; JavaScript this. This combination will make you a front end developer because you're able to create these modern user interfaces. So once you know these three things you are job-ready, front-end developer of course you will have to create your portfolio items and put on your resume and you have to understand those concept concept and the nitty gritty details of Asian multi essence and JavaScript in a deep way. So you can answer those interview questions and iLoveCoding teaches you all of this. So it teaches you the details of let's say what a closure is very complicated looking bored but I make it simple so you can actually understand it and communicate it to your interview when those questions arises. So all of these concepts are covered in the JavaScript course and how the browser works and how DOM works.</p><p>Then since the world is becoming more modern and there are certain tools created in the in the world for enhancing the developer's ability to quickly create these applications there are many libraries created, so a library is a piece of software which kinda think of it like a power tool.</p><p>So that's like a hammer is a tool but let's say a drill machine is a power tool so it has certain features which can enhance the speed of a developer to do certain things. So a library is just a piece of software to speed up a developer job. So there is a very popular library out there called a React.js which is actually built on top of JavaScript HTML and CSS which actually makes it easy for developers to make modern applications. So I actually teach you in iLoveCoding these modern technologies as well so you don't just know the fundamentals which are extremely important. You can not skip the fundamentals you'll learn the fundamentals and then you learn the modern technologies which are relevant today. So you are more in-demand person in the marketplace so you can get your job quickly because these technologies are in demand today. So you're going to learn React.js and then the nitty gritty details and along the way over here it says \"core training\" and \"practice project\" so I give you the core details of the fundamentals and also I quickly translate those theories into practical projects. So you see OK. This is a complicated sounding word but it's not that complicated because explain it to you in a simple manner and then you apply that theory to you know all it's it's just oh it's it's called let's say \"prototype\" but it's just a simple property</p><p>That's what it is. Oh what is a method?, A method is just a function. What is a function? A function is just an instruction... of course I'm going to go I'm going to very quickly but explain these things in a simple manner throughout the course. So you know that the the theoretical bard and you know the practical part of it as well and that's the core, you can not just learn theory, you can and just when you were born your parents just do not give you instruction manual they actually showed you how things were done and that's how you learn through practice through actual application.</p><p>So when you know these these four areas HTML, CSS, JavaScript fundamentals, working with browser and working with a library like React.js which is very popular you are a job-ready front-end developer of course at the same time you will have to build your portfolio which I'm going to help you at. You're going to be practicing for your interviews and you're going to work on your resume. So you are actually able to you just don't have your skills you're able to translate that skilled and communicate your skills to an employer. So you know the skills but you have to show that you have the skills to do that through a resume a portfolio and applying for jobs and answering those questions in the interview.</p><p>The next part after you are a front end developer then you can actually build on top of that knowledge and become a full-stack developer, and what does a full-stack developer have? a full-stack developer knows what front-end does, He's a front-end developer plus knows how a backend application works. So I'll back an application can be built with Node.js. So remember I told you that JavaScript is now able to be used to make back in applications. So there is an environment of JavaScript called Node.js. So you're simply using the jobs for programming language in the Node.js environment and you are now able to make backend applications as well. So I have courses for Node.js and Express.js which is again a framework for framework/library of JavaScript that enables you to create these backend applications as well so you can control the data layer and then whereas all the data stored is stored in a database. So I show you there is a course on JavaScript how to work with MongoDB which is a name of a database. So how do you use a mongoDB to store your data in an organized manner so you know how to make a full application the user interface layer the backend data layer and also the database layer so you these are the three pieces which actually make a fully functional application.</p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">Think about Google. There is a user interface; there is a backend layer and there is a data layer where all that information is actually stored. Any application called dot com Amazon.com. Any any application you think about. There are always these three layers. So once you know all these three layers you are a full-stack developer and that's what you learn. I've broken it down for you.</span><br></p><p>You learn HTML, CSS, JavaScript fundamentals, working with DOM, modern libraries see your job-ready (React.js). You are going to be job-ready but is gonna be in demand so it's gonna be easy for you to get a job; Then you learn Node.js you learn Express.js for the data layer you learn MongoDB for the database then you're a full-stack developer.</p><p>Then you may say hey you know I want to make desktop applications and mobile applications as well, so remember I told you there are certain power tools that developers have created on top of JavaScript; So there is actually a library called Reactive-Native which when used which is power tool on top of JavaScript which when used will enable you to make mobile applications for Android and iOS as well. So I have a course on React Native where we actually create a cryptocurrency mobile app which you which you will enable you to learn how to use JavaScript and we need to actually launch mobile applications.</p><p>There is actually another framework out there called Electron which is a JavaScript framework so we're actually when you use JavaScript in combination with Electron you are able to make desktop applications.</p><p>So the Microsoft Editor application, the Atom Editor application, Slack desktop application, they're all built with Electron. So when I was talking about React Native, the Facebook mobile app, the Instagram mobile app, and I'm not sure about others but these mobile apps are actually built with a Reactive Native. So these are the tools which are used in the real world and they're all based on JavaScript. These these developers make these frameworks which enable you to actually build these applications and there is a course on each of this and more.</p><p>Now these are the big picture. This is the big picture roadmap and this is what you're gonna do with \"core training\" with \"practice projects\" you build your portfolio along the way you build your resume along the way you practice for your interviews along the way. So you become competent so that you are job-ready.</p><p>Now these are the big pictures but the many small topics along the way like</p><p><ul><li>What is an API?</li><li><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">How does a domain work?</span></li><li>How do you upload your website live?</li><li>How do you work with authentication?</li><li>How do you work with collaborating your code with Git and Github?</li></ul></p><p>So all these many topics are taught along the way so you don't just know the big picture but you also know these smaller topics which a developer needs to know, so you are competent and you're able to perform at your job. So that is the roadmap you need to follow. Of course you don't have to go all the way to the top. You can just go for your first start. You're gonna become a front-end developer because that's the baseline. So once you're ready and job-ready you apply for jobs you become a front end developer employed front-end developer but then you can keep on enhancing your skills and the learning never ends. You know even after five six seven eight nine ten years you're gonna be still learning and deepening your knowledge. But the foundation is there in iLoveCoding training so you are becoming job-ready and you're becoming productive, so when you have ideas to launch certain ideas in the world, web application mobile applications you can actually launch them because you have the skills. Of course it takes time but this is your roadmap.</p><p>So that's pretty much it for this video. I hope you have that clarity if you have any questions let me know and I'll talk to you in the next video.</p>"
  },
  {
    "_id": "5bec3bcb9b376b0013455f9d",
    "slug": "prototype-string",
    "title": "Prototype of String Constructor",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:14:19.044Z"
    },
    "createdMsec": 1.542208459044E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:10.406Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298995056",
    "duration": "5:10",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bee4a10c284b1001335c938",
    "slug": "constructor",
    "title": "Using Constructor - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-16T04:39:44.823Z"
    },
    "createdMsec": 1.542343184823E+12,
    "updatedIso": {
      "$date": "2018-11-16T04:35:34.91Z"
    },
    "level": 2,
    "videoSource": "301056291",
    "duration": "8:25",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ]
  },
  {
    "_id": "5bec3c399b376b0013455fa5",
    "slug": "array-reduce",
    "title": ".reduce() method of Array in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:16:09.262Z"
    },
    "createdMsec": 1.542208569263E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:20.074Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299001512",
    "duration": "6:36",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5c843ea1cededc0014e5de0d",
    "slug": "how-learn",
    "title": "How to effectively learn how to code?",
    "subTitle": "",
    "thumbnail": "",
    "bodyContent": "<div class=\"video\"><iframe src=\"https://player.vimeo.com/video/308930134\" width=\"640\" height=\"360\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe></div>",
    "createdIso": {
      "$date": "2019-03-09T22:30:57.041Z"
    },
    "level": 0,
    "videoSource": "none",
    "duration": "14:06",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      "question"
    ],
    "updatedIso": {
      "$date": "2019-03-09T23:35:14.721Z"
    }
  },
  {
    "_id": "5bec3b089b376b0013455f8f",
    "slug": "iife",
    "title": "IIFE: Immediately Invoked Function Expression",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:11:04.88Z"
    },
    "createdMsec": 1.54220826488E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:21:57.966Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "300580630",
    "duration": "6:42",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedMsec": 1.542563048548E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bec3bf59b376b0013455fa0",
    "slug": "array-filter-2",
    "title": ".filter() method of Array in JavaScript - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:15:01.677Z"
    },
    "createdMsec": 1.542208501677E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:15.54Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298997266",
    "duration": "3:56",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bec3c459b376b0013455fa6",
    "slug": "date",
    "title": "Date object in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:16:21.169Z"
    },
    "createdMsec": 1.54220858117E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:21.07Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299002903",
    "duration": "6:44",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bec3c799b376b0013455faa",
    "slug": "promise-3",
    "title": "Promise in JavaScript - Part 3",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:17:13.187Z"
    },
    "createdMsec": 1.542208633188E+12,
    "updatedIso": {
      "$date": "2018-11-18T17:42:48.934Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299006744",
    "duration": "8:06",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedMsec": 1.542562968934E+12
  },
  {
    "_id": "5bec3c529b376b0013455fa7",
    "slug": "math",
    "title": "Math object in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:16:34.202Z"
    },
    "createdMsec": 1.542208594202E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:22.308Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299004044",
    "duration": "4:25",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bee4a3cc284b1001335c93a",
    "slug": "constructor-prototype",
    "title": "'prototype' property of constructor",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-16T04:40:28.396Z"
    },
    "createdMsec": 1.542343228396E+12,
    "updatedIso": {
      "$date": "2018-11-16T04:45:37.792Z"
    },
    "level": 2,
    "videoSource": "301057962",
    "duration": "8:21",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedMsec": 1.542343537793E+12
  },
  {
    "_id": "5c328bb5116a4c0014f142d0",
    "slug": "ilovecoding-different",
    "title": "How is iLoveCoding different/better than cheap courses and expensive bootcamps",
    "subTitle": "Effective Training = Complete Video Training + Simple Explaination + Cheatsheets + Homework + Mentorship + Student Community",
    "createdIso": {
      "$date": "2019-01-06T23:13:57.917Z"
    },
    "level": 0,
    "videoSource": "308930271",
    "duration": "1:38",
    "access": 0,
    "technology": [],
    "topic": [
      "Core Training"
    ],
    "updatedIso": {
      "$date": "2019-03-25T19:37:00.519Z"
    }
  },
  {
    "_id": "5c328b5a116a4c0014f142cb",
    "slug": "dev-type",
    "title": "The 9 main types of software developers",
    "subTitle": "Discover the 9 main areas of software development, the tools used in each, and which type of developers have the most promising future. You need this information to determine which type of developer you want to become.",
    "createdIso": {
      "$date": "2019-01-06T23:12:26.805Z"
    },
    "level": 0,
    "videoSource": "308929604",
    "duration": "9:50",
    "access": 0,
    "technology": [],
    "topic": [
      "Core Training"
    ],
    "updatedIso": {
      "$date": "2019-04-17T00:17:24.655Z"
    },
    "bodyContent": "<h3>Resource</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/developer-types/raw/master/dev-types.pdf\">9 main areas of software development (Download PDF)</a><br></li></ul><h2>Video Transcript</h2><p>Now there is all this craze about learning how to code but what the major information which is not informed to you is that there are different kind of programming languages and there are different areas of software development. Software development or programming or software engineering means the same thing. So when a lot of bootcamps or courses are saying hey learn how to code learn how to code become job ready. They're actually not telling you upfront what area of development you are going to be led into. They may be telling that to you but if you have a clear picture that they're actually nine main areas of software development you will be able to make informed decision on which path you want to take.</p><p>So in this video I'm going to share with you the nine areas which ones are more popular which ones are not and which one is a better more successful more profitable career, more promising career I should say for you for other people out there. So let's get started.<br></p><h3>#1: Language/Compilers Developers</h3><p>So the first area of development is actually a language or compiler developer. So these kind of developers are like linguists of the programming world. They actually build programming languages. They work with low-level programming languages and machine languages to build newer programming languages. So these account for about 1 percent of developers only 1 percent of developers actually create programming languages.</p><h3>#2: Embedded Systems Developers</h3><p>Now the next type is actually called embedded systems and developer they account for about 3 percent of developers. So embedded system developers program or write code that actually run on hardware.</p><p>So imagine your car your fridge or your washing machine or electronic toys. They have some kind of code on them. That's why when you actually click a button something happens; the fridge knows how to regulate the temperature; your car knows how to turn on, turn off, accelerate, decelerate, the car stereo electronics all of this is programmed and the embedded-system developer actually codes that program to tell the machine what needs to be done. And by the way just a side-topic, a developer is somebody who actually writes code to talk to a computer tell the computer what to do. So there are different kinds of developers who actually tell different kinds of computers on what to do.</p><p>A language and compiler developers actually create programming languages embedded systems developer. As I told you right now code on these particular hardware.</p><h3>#3: Operating System Developers</h3><p>Next in line is operating system developers. These are actually developers who actually write the operating system software. So let's say a Windows developer, Android, the people who actually made Android, Mac OS, Linux, Unix, these are the developers who actually made these operating systems and continue to improve them.</p><h3>#4: Data Scientists</h3><p>Then there are data scientist. There is all this craze about data science artificial intelligence and all of this right. They account for about 7% of developers. So now you may be imagining or thinking what does a data scientist do what kind of programs do they write. So actually data scientists are more like mathematicians and statisticians that actually code.</p><p>So a data scientist does not code a software per in the typical sense. They actually write program. They actually write code that actually work on mathematical and statistical models to predict or forecast what's going to happen. So let's say our typical data scientist will actually be given a lot of data. So maybe a lot of words or maybe a lot of stats or a lot of pricing information whatever the company is doing. They're gonna be given a lot of data and they will actually write this mathematical and statistical model that's going to forecast what that information means or could happen. So that's what they're doing, they're actually not creating user interfaces or typical softwares in the typical sense.</p><h3>#5: Video Game Developers</h3><p>Then there are video game developers these are developers who actually write the video games that we play on our console or on our computer. They account for about 8% of developers.</p><h3>#6: Dev Ops Developers</h3><p>Then we have dev ops developers. Now that's a new term these days. So dev ops stands for development and operations engineers. So they used to be actually called system administrators previously so dev-ops job is to manage and maintain computer infrastructure and servers of a company. So dev-ops do not actually make software in the typical sentence. They actually don't make mobile apps or web apps or those kind of things. They actually write code to manage and automate the servers that they are working on so those are dev ops.</p><h3>#7: Desktop Developers</h3><p>Then we have desktop developers. So these are developers who actually make desktop applications like your Microsoft Excel, Adobe Photoshop, Paint, Safari browser and other desktop applications are built by such developers. They may specialize in a particular operating system so they may specialize in a Linux desktop application or Windows desktop application, Mac desktop application or all of them. So depends on their expertise but desktop application developers will make a desktop application.</p><h3>#8: Mobile Apps Developers</h3><p>Then we have mobile apps developers. These are 20% of developers so mobile apps developers of course will make your banking application your workout application for your phone or a map application and other applications that we enjoy on our Android devices or on our iOS devices. Right. So these developers may specialize in one or other or both of these platforms so maybe an android IOS or both. Right!</p><h3>#9: Web Developers</h3><p>Now the last piece and the biggest piece is actually web app developers. So these are the people who actually code your Facebook.coms or your Google.com or your Amazon.com or your Netflix.com. Any of these dot coms or dot nets are dot org. iLoveCoding.org will be created by the web app developer.</p><p>Now previously these kind of developers were only called web developers or web developers but nowadays since the world is enhancing and progressing and development, the web application development has been broken down into two parts. So one is the one part is actually called a <b>front-end developer</b> and the other part is actually called a <b>backend developer</b>.<br></p><p>So the difference in a backend application or a front-end application or a front-end developer and a backend developer is actually a front-end application developer would actually make the user interface of a website. So let's say if you are working for you know Facebook.com or Google.com let's just go with Google. So a Google firm developer would actually make the look and feel of the entire website and also the functionality and the features of the Web site. So, for instance, let's say when you start typing inside Google it automatically shows you suggestions. Right. So that kind of feature will be created by a front-end developer, right. so the user interface is actually called the front-end. So a frontier developer would create that. Now the job of the backend developer on the other hand would be let's say when you are actually typing in some information on Google let's say, that information is actually sent to the backend system that the user doesn't see but that is the. That is the layer that's the application which actually powers the information to the front-end. So let's say when you Google something the information is actually stored your search results are actually stored in the Google database. So the information from the front-end whatever the user does is sent to the back end. The backend actually says oh the user search for this information I'm going to go look in the database and then give the result to the user. So the back end developer would actually work with the data find information processed the information make sure that information is secure and then pass that information to the front-end. So the user can see the front-end application will actually show the user and phase the back and application will manage the data and security of the data.<br></p><p>So both of these parts together actually make a web application. And now the new word for this is people who actually know both of these things are actually called full-stack developer. Front-end + backend is actually a full-stack developer previously five days five years ago these words were not existent they were actually just called web developers but these are the new specialties and that's called it virtual have been introduced.</p><p>So these are the nine types of software developers now a natural question that you may have is OK. There is there are nine areas which one should I become. This one is the most profitable most promising for my future. So let's answer that question in the next video but at least you have this big picture on the nine main areas in which are the areas where more most of the development happens. So 35% of development happens in the web, 20 % in Mobile, 12% in desktop, 11% in Dev-ops and so forth. So that's pretty much it for this video. I'm going to talk to you in the next lesson.</p>"
  },
  {
    "_id": "5bec3baa9b376b0013455f9b",
    "slug": "template-literals",
    "title": "Template literals (Template Strings) in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:13:45.989Z"
    },
    "createdMsec": 1.54220842599E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:08.229Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298993704",
    "duration": "3:55",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5c843bb0cededc0014e5de0a",
    "slug": "get",
    "title": "What do you get with iLoveCoding?",
    "subTitle": "",
    "thumbnail": "",
    "bodyContent": "",
    "createdIso": {
      "$date": "2019-03-09T22:18:24.488Z"
    },
    "level": 0,
    "videoSource": "311500556",
    "duration": "2:00",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      "question"
    ],
    "updatedIso": {
      "$date": "2019-03-09T23:45:35.234Z"
    }
  },
  {
    "_id": "5bec3c5f9b376b0013455fa8",
    "slug": "promise",
    "title": "Promise in JavaScript - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:16:46.941Z"
    },
    "createdMsec": 1.542208606942E+12,
    "updatedIso": {
      "$date": "2018-11-14T14:39:47.682Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299004746",
    "duration": "6:35",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ]
  },
  {
    "_id": "5bec3c869b376b0013455fab",
    "slug": "promise-4",
    "title": "Promise in JavaScript - Part 4",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:17:26.902Z"
    },
    "createdMsec": 1.542208646903E+12,
    "updatedIso": {
      "$date": "2018-11-18T17:43:54.229Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299008519",
    "duration": "4:28",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedMsec": 1.542563034229E+12
  },
  {
    "_id": "5bec3bba9b376b0013455f9c",
    "slug": "prototype-builtin-features",
    "title": "Prototype: The builtin features",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:14:02.032Z"
    },
    "createdMsec": 1.542208442032E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:09.172Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298994162",
    "duration": "6:40",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bec3b159b376b0013455f90",
    "slug": "iife-example",
    "title": "IIFE Example",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:11:17.922Z"
    },
    "createdMsec": 1.542208277922E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:21:58.817Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298983623",
    "duration": "3:25",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5c843edacededc0014e5de11",
    "slug": "learn",
    "title": "What will you learn at iLoveCoding?",
    "subTitle": "",
    "thumbnail": "",
    "bodyContent": "<div class=\"video\"><iframe src=\"https://player.vimeo.com/video/311500783\" width=\"640\" height=\"360\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe></div><p><br></p><h3>Video Transcript</h3><p>So what will you learn at iLoveCoding?. So the big picture is that iLoveCoding will give you the complete training so you become a competent front-end and full–stack of JavaScript developer. So what does that mean? What are the details for that? Let's take a look:</p><p><b>Looking at the big picture you will learn:</b></p><p>✅<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">How to build simple and advanced websites.</span></p><p>✅<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">You will learn how to build modern front-end applications.</span></p><p>✅<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">You will learn how to code and think like a developer -&nbsp;</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">break problems and features down into smaller pieces so you can actually build those features</span>.</p><p>✅<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">Yo</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">u will learn how to solve problems. So if you think about an engineer, a software engineer has the ability to solve problems and troubleshoot</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">.</span></p><p>✅You ar<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">e going to learn backend development and how to control the data or how to connect your application with databases.</span></p><p>✅<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">How to work with databases so you store information in an organized manner</span>.<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\"><br></span></p><p>✅<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">Yo</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">u are going to learn how to use </span>Git<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">, so you actually organize your code in a collaborative manner so you can share your codebase with other developers and do your projects in a collaborative manner.</span><br></p><p>✅You ar<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">e going to learn how to break features down into functional pieces and write quality reusable code</span>.</p><p>✅Yo<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">u are going to learn how to build mobile applications.</span></p><p>✅<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">You're going to learn how to build </span>password-protected<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\"> websites.</span></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">Imagine a website like Google or Gmail or YouTube or Facebook. You only get access to the website when you log in. The login capability is a very major feature of the Web and the Internet world. It's not just limited to front-end or backend, it extends to let's say desktop applications and even mobile applications because these days everything or most of the things work over the Internet. So login capability is a very big part of an engineers job. - A modern engineers job who works with the Internet.</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\"><br></span></p><p>✅<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">You're going to learn what APIs are and how you can write </span>applications<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\"> that </span>integrate<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">&nbsp;with </span>third-party<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\"> software. So let's say if you want to integrate your application with let's say the Facebook data layer, you can connect your applications with Facebook, you can connect your application with Twitter,&nbsp; with Google, and with any third party company that </span>exposes<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\"> their data to other third-party developers like you. You can actually connect with their systems and leverage their systems in your application.</span><br><br>Thi<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">nk about the \"log in with Facebook\" functionality or \"log in with Google\" functionality that you have seen on the Internet. Those features are implemented via the APIs.</span></p><p>✅<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">You are going to learn how to use those APIs in your applications.</span></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">So some of the other smaller areas of development or the other things you can learn is let's say</span></p><p><ul><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">Advanced JavaScript</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">HTML</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">CSS</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">Responsive-Design</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">React.js</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">React-Native</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">Node.js</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">NPM</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">How HTTP works</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">What RESTful API are</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">Express.js</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">jQuery</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">Parcel</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">Working with maps</span></font></li><li>✅<font face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol\"><span style=\"font-size: 0.9rem;\">Working with Git</span></font></li><li>✅and so much more</li></ul><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">You're basically getting the Full Training of what a developer does. Because the goal is that you're going to become a competent front-end </span><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">and full-stack</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\"> JavaScript developer.</span></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">I know this is a lot of information but again I've broken this down into logical pieces so you actually make progress and you become that person that you want to become who is actually confident and competent.</span><br></p>",
    "createdIso": {
      "$date": "2019-03-09T22:31:54.202Z"
    },
    "level": 0,
    "videoSource": "none",
    "duration": "3:44",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      "question"
    ],
    "updatedIso": {
      "$date": "2019-03-09T23:23:41.469Z"
    }
  },
  {
    "_id": "5bec3b669b376b0013455f96",
    "slug": "project-hover-closure",
    "title": "Project: Tooltip effect - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:12:38.46Z"
    },
    "createdMsec": 1.54220835846E+12,
    "updatedIso": {
      "$date": "2019-06-10T20:40:00.846Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298988230",
    "duration": "8:48",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/tooltip-effect/tree/0-start",
    "demoUrl": "https://tooltipeffect-0.netlify.com"
  },
  {
    "_id": "5bee4989c284b1001335c934",
    "slug": "apply",
    "title": "'this' - Using apply() to modify 'this'",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-16T04:37:29.877Z"
    },
    "createdMsec": 1.542343049877E+12,
    "updatedIso": {
      "$date": "2018-11-16T04:35:34.91Z"
    },
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "301054254",
    "duration": "1:29",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ]
  },
  {
    "_id": "5bee4995c284b1001335c935",
    "slug": "bind",
    "title": "'this' - Using bind() to modify 'this'",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-16T04:37:41.431Z"
    },
    "createdMsec": 1.542343061431E+12,
    "updatedIso": {
      "$date": "2018-11-16T04:44:54.644Z"
    },
    "level": 2,
    "videoSource": "301054593",
    "duration": "3:00",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedMsec": 1.542343494644E+12
  },
  {
    "_id": "5c843ee2cededc0014e5de12",
    "slug": "read-docs",
    "title": "What is the secret learning technique of professional developers?",
    "subTitle": "",
    "thumbnail": "",
    "bodyContent": "<div class=\"video\"><iframe src=\"https://player.vimeo.com/video/311501088\" width=\"640\" height=\"360\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe></div>",
    "createdIso": {
      "$date": "2019-03-09T22:32:01.984Z"
    },
    "level": 0,
    "videoSource": "none",
    "duration": "1:26",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      "question"
    ],
    "updatedIso": {
      "$date": "2019-03-09T23:34:11.561Z"
    }
  },
  {
    "_id": "5bec3cbc9b376b0013455faf",
    "slug": "fetch-population-2",
    "title": "Project: Get population by country - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:18:20.551Z"
    },
    "createdMsec": 1.542208700551E+12,
    "updatedIso": {
      "$date": "2019-06-10T20:13:45.199Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299038802",
    "duration": "5:46",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "sourceUrl": "https://github.com/iLoveCodingOrg/get-population-by-country/tree/2-get-population-age-100",
    "demoUrl": "https://getpopulation-2.netlify.com"
  },
  {
    "_id": "5bec3b2e9b376b0013455f92",
    "slug": "arrow-function-2",
    "title": "Arrow Functions Explained Correctly - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:11:42.9Z"
    },
    "createdMsec": 1.5422083029E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:00.355Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298986159",
    "duration": "3:10",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5c328b8c116a4c0014f142cd",
    "slug": "pick-language",
    "title": "Which programming language should I learn?",
    "subTitle": "The programming language you pick will make a huge influence on your career trajectory. In this lesson, you will learn which programming language has the most scope, opportunity, promise, and profit. Answer: JavaScript.",
    "createdIso": {
      "$date": "2019-01-06T23:13:16.1Z"
    },
    "level": 0,
    "videoSource": "308929751",
    "duration": "5:33",
    "access": 0,
    "technology": [],
    "topic": [
      "Core Training"
    ],
    "updatedIso": {
      "$date": "2019-04-17T00:28:56.285Z"
    },
    "bodyContent": "<h3>Resource</h3>\n<ul><li><a href=\"https://docs.google.com/presentation/d/1MBwAMSVjaNe88PRJQSeL8alxW1Fx2z5i51n-YqYNZqU/edit?usp=sharing\"></a><a href=\"https://docs.google.com/presentation/d/1jZF6ceq7-fNjBdx0X6W3C6xOgmciIhGNQUy0n_2ERTA/edit?usp=sharing\">Slide Deck of \"Which programming language should I learn?\"</a></li></ul><h3>Video Transcript</h3><p>Now that we have determined the nine areas of software development now the next step is - Which programming language should you learn so that you are able to perform the task necessary for development?</p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">So I actually have created a table that shows you that depending on which area of software development you focus on, will determine which kind of programming language you will use. So, for instance, when you are let's say an embedded systems developer that a programming language which is used to perform that particular task is either a C programming language or C++ or Java Python or JavaScript. These are some popular languages. Of course, there could be one or the other or a combination of some but it depends on the company you work for, which tools they choose. So it's not to say that one programming language is better than the other is just that certain programming languages because they are created they actually are used and become kind of specialized in certain areas of development.</span><br></p><p>So remember we were talking about that the most promising area of software development is actually the web application development. So for web application development you will be using HTML, CSS and JavaScript to make a front-end applications and for back and applications depending on the company you work for you could be using Java C#, PHP, Python, JavaScript. So it depends on which company chooses which particular tool.</p><p>So one thing you will notice I've created another chart that a Web site application consists of two parts right. So let's say it's a front-end application and a backend application. And one thing you will notice that JavaScript is the only programming language that can be used in the front-end and actually in the backend as well. So let's say a front-end application which is the user interface will always always always be using HTML CSS and JavaScript. So if you if you think about it a browser is the environment in which a website exists, a front-end exist, browser is the only environment right. So browsers only support JavaScript programming language so that is the reason why all the websites of the world if they are a little bit fancy and popular they have to and must and they do use JavaScript to create their front end applications.</p><p>Now as for the backend they have different options they could use PHP, Ruby, Python, JavaScript, C#, Java. There are different options but all Web sites the front it is built with Asia multi SS and JavaScript so it makes it very clear that JavaScript is the language to learn.</p><p>If you're going to become a front-end application developer.</p><p>Now there's one very interesting thing which has been happening for the past five, six, seven years. That is that JavaScript has become the world's most versatile programming language. So what do I mean by that? So I've created another table for you. So JavaScript has become recent in the recent years so popular and so versatile and so capable that big and small companies are using JavaScript not just to create front-end applications but also back in applications, mobile applications, and even desktop applications. So these are the list of some of the companies which are using JavaScript in a big way to create their major applications. So think about the Facebook mobile app, Instagram mobile app, Uber mobile app, Skype mobile app, Slack desktop app, Skype WhatsApp, PayPal, Uber you know they are all using JavaScript for their major applications not like a small mini fun project that they have; major applications.</p><p>So if you think about thing about this particular chart of the nine areas of software development, JavaScript is the only programming language that is used in front-end. Right. We know that which I just told you in this video but JavaScript is also the only language which can be used in front and backend, mobile, desktop development and now it is it's been used for video game development and data science as well. It's not as popular in data science and video games as much. There are other languages that rule that particular space but it has become a major player in the web world mobile world and desktop world.</p><p>So that leads you to ask the question there. OK. That's pretty clear in that JavaScript is the world's most versatile programming language. It can enable me to do far more much more things. And it will give me far much better scope in my career now and in the future because a lot of companies are using it. It just gives me bigger and bigger pool of doing stuff and the job opportunities so that's pretty clear.</p><p>Now the next step you want to determine. OK. JavaScript is a clear winner. But then what are the specific things I learned within JavaScript. What are the specific supporting technologies around JavaScript and what are the exact tools and resources and roadmap? What is my roadmap that I need? What do I do, so I become a job-ready JavaScript developer? and that we will discuss in the next video where I'm going to show you that exact path. So talk to you in the next lesson.</p>"
  },
  {
    "_id": "5bec3b949b376b0013455f99",
    "slug": "project-hover-closure-4",
    "title": "Project: Tooltip effect - Part 4",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:13:24.137Z"
    },
    "createdMsec": 1.542208404137E+12,
    "updatedIso": {
      "$date": "2019-06-10T20:44:25.226Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298992670",
    "duration": "1:48",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/tooltip-effect/tree/3-mouseleave-text-disappear",
    "demoUrl": "https://tooltipeffect-3.netlify.com"
  },
  {
    "_id": "5bec3c1f9b376b0013455fa3",
    "slug": "array-foreach",
    "title": ".forEach() method of Array in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:15:43.659Z"
    },
    "createdMsec": 1.542208543659E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:18.336Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298999128",
    "duration": "1:11",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5c8fe3e2f8f82300141b592b",
    "slug": "fe-ideas",
    "title": "Front-End App Ideas",
    "subTitle": "",
    "thumbnail": "",
    "demoUrl": "",
    "bodyContent": "",
    "createdIso": {
      "$date": "2019-03-18T18:30:58.533Z"
    },
    "level": 0,
    "sourceUrl": "",
    "videoSource": "none",
    "duration": "",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      ""
    ]
  },
  {
    "_id": "5bec3cef9b376b0013455fb0",
    "slug": "fetch-population-3",
    "title": "Project + Homework: Get population by country - Part 3",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:19:11.754Z"
    },
    "createdMsec": 1.542208751754E+12,
    "updatedIso": {
      "$date": "2019-06-10T20:15:56.929Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299040183",
    "duration": "6:58",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "demoUrl": "https://getpopulation-3.netlify.com",
    "sourceUrl": "https://github.com/iLoveCodingOrg/get-population-by-country/tree/3-get-population-hw-solution"
  },
  {
    "_id": "5bec3c009b376b0013455fa1",
    "slug": "array-filter-hw",
    "title": ".filter() Homework",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:15:12.274Z"
    },
    "createdMsec": 1.542208512274E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:16.582Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298997845",
    "duration": "5:59",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5c328baa116a4c0014f142cf",
    "slug": "how-to-learn",
    "title": "Follow these 8 rules to triple your speed of learning",
    "subTitle": "In this lesson, I share with you the 8 learning techniques I followed to go from a newbie to a job-ready developer in 5 months. Important: These techniques are simple yet extremely effective.",
    "createdIso": {
      "$date": "2019-01-06T23:13:46.709Z"
    },
    "level": 0,
    "videoSource": "308930134",
    "duration": "14:06",
    "access": 0,
    "technology": [],
    "topic": [
      "Core Training"
    ],
    "updatedIso": {
      "$date": "2019-04-17T01:19:33.629Z"
    },
    "bodyContent": "<h3>Resource</h3>\n<ul><li><a href=\"https://docs.google.com/presentation/d/1MBwAMSVjaNe88PRJQSeL8alxW1Fx2z5i51n-YqYNZqU/edit?usp=sharing\">Slide Deck of \"How to Learn Effectively\"</a></li></ul><h3>Video Transcript</h3><p>Now that you know the complete path of skills that you need to become a job ready and productive developer, the next logical question you may have is OK I know what to learn.</p><p>The next question is how do I learn it? Where do I learn it from? And in this video I'm going to explain the concept about how to go about effectively learning these skills. So that's the presentation we're gonna have today. So how do you really go about learning this really seemingly alien skill for writing code which is very weird. And then talking to a computer. So the answer to the question is the way you learn how to code is exactly the way you learn any particular skill.</p><p>Now when you were a child you copied your parents you copied your siblings you copied what you saw and that is the way you acquired skill. So coding is actually no different. Just to give you a solid example. A lot of authors who are trying to become authors like somebody else they aspire to become like they actually hand copy the writings of the author they want to become like they aspire to be like. So when they copy, hand-copy like a machine like a robot their writings they actually subconsciously ingest the pot processes the writing style of the big author.</p><p>They want to become like that's the exact way you're going to learn how to code. That's the exact way I learned how to code. That's the exact way I learned how to do graphic design. So what I would do is when I wanted to learn how to code when I would watch a particular video or tutorial video. I would actually copy and follow along the code. The program that the video was showing me. So when I teach at iLoveCoding. I will give you two things. I will give you the baseline background knowledge but then I will show you a practical example on how to apply that knowledge. So when I'm showing you those examples it's your job. That's my instruction to you that you copy along and follow along what I'm telling you, what I'm teaching you. So when you actually just mindlessly copy you're going to subconsciously digest and understand the concepts. And even when you're copying you're going to find some mistakes that you're making and that's going to internalize the concepts even further. So the first rule even though it's very simple is to copy and follow along just like any skill is acquired by copying.</p><p>The second thing which is very important and that's the reason why a lot of people struggle is that they have something called a \"shiny object syndrome\". What you need to do is ignore any media, any mainstream media, or any kind of information that's telling you hey learn jQuery or you don't learn jQuery or you got to learn these five things to become super genius and become job ready. All these blog articles people who are writing that's their business to write. That's how they make money. The number one technique of journalism and news is that they show you something new. Right. So when you see in the news there is something new out there. You go out and look at that information. But any successful company is successful or any successful individual is successful. Even you, you are successful in certain areas is because you stuck with the fundamentals, some baselines and that worked for you.</p><p>If you kept on chasing the new stuff the shiny stuff it wouldn't work for you, people would not progress. So ignore shiny objects ignored the tendency to chase after the new thing. It's not going to work for you.</p><p>The next thing which is kind of the same goes along with the \"shiny object syndrome\" is to stick with fundamentals first approach. What do I mean by that? What I really mean is when you are learning how to code there are certain concepts there are a lot of small mini concepts that's going to show up right. And when they show up don't just graze through it. Try to understand the core concepts and in iLoveCoding training I actually give you the the new concept in a fundamental way. So when you have a solid foundation when you go at the workplace when you're trying to make your programs you're going to be much more efficient at making those programs because you have the solid foundation. If you think about any particular sport let's say golfing any kind of sport all or mixed martial arts what they do is they actually repeatedly practice the fundamental moves of whether it be golfing or whatever sport they practice the moves the fundamental moves again and again so they never have to lose their foundation because all new techniques and skill is built on the foundation. So all these new libraries and frameworks and all these new stuff is out there is just new temporarily. The foundation is never going to go away so let's say bootstrap framework as new, React.js is new. It's very hot Vue.js is new, React.js is new, React Native is new. There's so many new stuff but all this new stuff is actually built on top of the fundamentals of HTML and CSS and JavaScript. So actually I released a course on HTML and CSS like 4 years ago and after four years the fundamentals remain the same and the course was doing pretty well unless I later released a version to just for better explanations. But the training and the concept remained the same because fundamentals tend to not change. So once you have a solid foundation you focus on the fundamentals. The way I teach you in iLoveCoding you're going to make your progress much more faster.</p><p>Learning technique number four quickly translate theory into real world use cases. So one of the things about learning is so difficult, learning how to code is so difficult is because they have this weird difficult looking, difficult sounding words, \"constructor\", \"prototype\", \"coercion\", \"closures\" right? All this weird sounding words that scare us. And the reason they scare us is because they look complicated they sound complicated but they're actually very simple if they are explained correctly to you and a lot of times they are not explained correctly because the teacher who is trying to teach us many at times, I'm just not happy to inform you and many times they don't even understand the concept themselves. Hence they are not able to translate the knowledge to you. That's just sad but that's true. I'm sorry to say that. So whenever you learn a new concept you take that concept you say okay. The new concept is always gonna be vague. Right. So when you translate that vague concept into a practical use case that's when the real learning happens.</p><p>That's what when you actually understand the concept is when you apply. Let's say if you try to explain a child what walking is like the child is like I don't know but if you show me what I'm doing with this two feet, two legs this is walking you're like Okay I know what walking is now is just when people move from one place to another with their two feet that's walking right. But but if you just put it into a definition of a dictionary it becomes weird, alien and not human. Okay so that's the one of the key foundations, the way I teach at iLoveCoding is I tell you the the new concept because you need to learn new concepts but you translate that into a practical example.</p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">Learning technique #5. That is then do not commit to memory. Anything that can be looked up in a book and that is a quote by Einstein and I live by it. And the thing is that there's so much to learn you. I'm gonna tell you just right now. Even after four years or three years or five years or probably seven years you're still going to be learning coding because coding is a long journey. It keeps on happening and you're gonna be a developer let's say in four months five months six months seven months one year whatever your timeline is you're going to become that developer you're gonna be professional you're gonna be proficient but you're gonna continue to learn so it's not that when you are learning you memorize all these concepts all what are arrays what are our functions what are the five different properties that are array has and stuff like that. All this this gibberish stuff you're not going to memorize use you do not have to memorize. Professional Developers are allowed to Google stuff and look up resources relook up their knowledge and refresh their knowledge on the job when they're doing it. So there is no requirement for you to memorize these things the way it is it's gonna be memorized is when you keep on doing it. When you keep on building these programs it's going to automatically the important stuff is going to automatically become habit. And the more or less you use to stuff is going to automatically be something in the back of your head and you can quickly Google it when the need comes</span></p><p>With that, I want to give you three fool tests that there are certain tests that I'm going to give you that's going to determine if you're making the progress in the correct direction.</p><p>So fool test number #1 is</p><p>\"If you did not code, You did not learn\"</p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">So a lot of time is going to happen is when you watch my videos you say hey you know. Oh yeah I understand this. It makes sense. Piece of cake. But my thing is if you did not copy my example to what I showed you then you have an illusion of learning. You actually did not learn. So back to the concept Number one I was copy example code. So when I show you certain code it's your job to follow along and copy those examples. If you did not code those examples then you merely have an illusion of learning and understanding that knowledge that understanding is gonna quickly fade away as not going to serve you. So if you did not code you did not learn.</span></p><p>Fool test #2 is \"If you did not ship, you did not build\".</p><p>So there is a very famous quote by Steve Jobs he said \"great artist ship\" or actually a \"real artist ship\". And what that really means is artist is somebody who creates OK a programmer is a creator a graphic designer is a creator an artist who draws is a creator author is a creator artist who acts on television or movies is an artist, right. So anybody who creates is an artist and shipping the concept of shipping means that when you launch something so them and you create your let's say you book or a blog or a program or a software or some painting you have to launch it to the world and if you do not launch it if you did not ship it then that means you'd never built it.</p><p>It's it's in your lab. That's your that's your experiment. So if you are if you did not ship if you did not launch your creations, if you do not launch your application if you'd not launch your code to the real world to github and add it to your portfolio that means you never built. So you have to make the the emphasis on when you create something it's not gonna be perfect. It's never going to be perfect. You're gonna keep every new creation you make is gonna be better but you gonna keep on improving that. So if you do not ship it that means you never built it. Okay?</p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">And full test #3 is \"If you can't explain it simply, you don't understand it yourself\" And that's by Einstein and that is the concept that a lot of teachers of the in the coding world and maybe you have had some good teachers and bad teachers of different subjects. We all have right. Let's be honest about good teachers. We have had bad teachers throughout our our our life. And the good teachers have the ability to make things explain us things in a simple manner that's digestible for us. And the reason they're able to do that is because they actually have a core understanding of that particular concept. So it's my job to explain to you things simply. And if I did not explain it simply, that means that I did not do my job.</span><br></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">I maybe don't understand the concept myself. And it's then your job is to understand that concept on a clear manner so that you are able to explain it. And if you are able to explain that concept whatever the new concepts you're gonna learn in programming if you can explain it that means you understand it. If you cannot explain it that means you don't understand clearly enough. And that's very important for you because when you go to you to do your interviews you're going to be asked these questions like \"What is a call stack?\" thats it, point blank. The interviewer is going to just ask you a point a blank question. Question What is it called stack. \"How does it asynchronous functions work in JavaScript?\", \"What are promises?\" just like these point blank questions that you're you're thinking right now. Oh my God I don't know what this is but I'm gonna explain these things to you in a simple manner and you will have to practice to answer these things in a simple manner. So you are interview-ready and I'm gonna help you with that. So that's my three fool test that's gonna help you towards the direction of learning things correctly. So you become job-ready, interview-ready, resume-ready, portfolio-ready. That's pretty much it for this video. I want to talk to you in the next.</span></p>"
  },
  {
    "_id": "5bec3c2e9b376b0013455fa4",
    "slug": "array-map",
    "title": ".map() method of Array in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:15:58.879Z"
    },
    "createdMsec": 1.542208558879E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:19.097Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298999344",
    "duration": "4:26",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bec3bd89b376b0013455f9e",
    "slug": "prototype-number-boolean",
    "title": "Prototype of Number and Boolean Constructor",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:14:32.814Z"
    },
    "createdMsec": 1.542208472814E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:11.087Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298995684",
    "duration": "4:38",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bec3c939b376b0013455fac",
    "slug": "fetch",
    "title": "Using fetch() to connect with HTTP",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:17:39.116Z"
    },
    "createdMsec": 1.542208659116E+12,
    "updatedIso": {
      "$date": "2018-11-14T14:39:47.682Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299034000",
    "duration": "7:50",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ]
  },
  {
    "_id": "5bee4976c284b1001335c932",
    "slug": "this-2",
    "title": "'this' - Understand the 'this' keyword once and for all - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-16T04:37:10.158Z"
    },
    "createdMsec": 1.542343030158E+12,
    "updatedIso": {
      "$date": "2018-11-16T04:35:34.91Z"
    },
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "301053110",
    "duration": "3:47",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ]
  },
  {
    "_id": "5c843eb8cededc0014e5de0e",
    "slug": "whats-ilovecoding",
    "title": "What is iLoveCoding?",
    "subTitle": "",
    "thumbnail": "",
    "bodyContent": "<div class=\"video\"><iframe src=\"https://player.vimeo.com/video/311500036\" width=\"640\" height=\"360\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe></div>",
    "createdIso": {
      "$date": "2019-03-09T22:31:20.435Z"
    },
    "level": 0,
    "videoSource": "none",
    "duration": "2:19",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      "question"
    ],
    "updatedIso": {
      "$date": "2019-03-09T22:35:37.422Z"
    }
  },
  {
    "_id": "5c8fda27f8f82300141b5925",
    "slug": "skill-checklist",
    "title": "Skill Checklist",
    "subTitle": "",
    "thumbnail": "",
    "demoUrl": "",
    "bodyContent": "",
    "createdIso": {
      "$date": "2019-03-18T17:49:27.845Z"
    },
    "level": 1,
    "sourceUrl": "",
    "videoSource": "none",
    "duration": "",
    "access": 0,
    "technology": [
      ""
    ],
    "topic": [
      ""
    ],
    "updatedIso": {
      "$date": "2019-03-18T17:50:00.401Z"
    }
  },
  {
    "_id": "5c328b7e116a4c0014f142cc",
    "slug": "which-type",
    "title": "Which type of software developer should you become?",
    "subTitle": "There are two ways to determine which areas of software development you wish to get into. #1 interest, #2 Promising future. Let's see in this video which type of developer you should become.",
    "createdIso": {
      "$date": "2019-01-06T23:13:02.202Z"
    },
    "level": 0,
    "videoSource": "308929666",
    "duration": "3:50",
    "access": 0,
    "technology": [],
    "topic": [
      "Core Training"
    ],
    "updatedIso": {
      "$date": "2019-04-16T23:06:09.709Z"
    },
    "bodyContent": "<h3>Resource</h3>\n<ul><li><a href=\"https://github.com/iLoveCodingOrg/developer-types/raw/master/dev-types.pdf\">9 main areas of software development (Download PDF)</a><br></li></ul><h2>Video Transcript</h2><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">Now did you know the nine main areas of software development, The next thing to determine is what kind of developer will you become.</span><br></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">So the easiest way to determine that is by your interest, because you're going to be most successful if you're interested in your work. So if you are interested in making video games you go become a video game developer. If you are interested in mathematics, statistics and you like to work with data to predict or forecast the future - artificial intelligence then you go become a data scientist. Same with web apps mobile apps desktop apps or any other area.</span><br></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">Now if you are kind of neutral then I have certain suggestions for you that's going to increase your chances of success.</span><br></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">So that natural answer is that you want to become a web developer because there is more opportunity and there is more work and more scope of work in the market for a web developer than any other kind of developer.</span></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">So let me just make that case. So let's say there are so many companies in the world. There is a video game company right. Does the video game company have a website? Yes they do. So they need a web developer.</span><br></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">A data science company. Do they need a website? Yes they do, so they need a web developer. Operating system companies, embedded system companies, dev-ops companies, desktop app companies, mobile app companies, do they need a website? In most cases, 99% of the chances are that all the companies in the world need a website and hence there is a need for a web developer. So that is why there is more work. There is 35% of the work happening in the web app department and there's more work and more opportunity and more jobs out there for web development.</span><br></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">That's why the safest and the most long term and lucrative part of a development area is web development. In fact, a lot of the desktop apps, and the mobile apps, actually rely on the Internet. So let's say if you're talking about a slack application or the Skype application or the mobile app for let's say Instagram or Facebook mobile app they actually need data from the Internet. So actually they need a web developer to power that data which is a backend developer.</span><br></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">So all of this most of the companies need the Internet and internet is mostly programmed by a backend developer, a web developer. So the safest answer is that you want to become a web developer.</span><br></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">Now if you are listening to my videos that's great because my specialty is actually web app development and a little bit of mobile, desktop, and dev-ops as well. I do not know anything about video games data science operating systems embedded systems or language. So this is not my expertise but if you are interested in making web applications, mobile application, desktop applications and becoming a modern developer then I can assist you because I've worked for United Airlines, CVS Health, Uptake and in some other companies and launched my own companies as well. And I know that on how all of that side of the world works.</span></p><p><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">So the next natural question you may have is OK. You know Aziz I'm going to listen to you maybe web development is the most safest answer for me. Now what should I do? So for that let's go to the next video where I have a complete Skill Roadmap on each skill that you need to acquire. So you become job-ready, interview-ready and portfolio-ready - So you are a proficient and confident web developer. So let me talk to you in the next video.</span></p>"
  },
  {
    "_id": "5bec3b389b376b0013455f93",
    "slug": "closure",
    "title": "Closure in JavaScript Explained Correctly - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:11:52.871Z"
    },
    "createdMsec": 1.542208312871E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:01.167Z"
    },
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "298986503",
    "duration": "5:06",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bec3b5a9b376b0013455f95",
    "slug": "closure-3",
    "title": "Closure in JavaScript Explained Correctly - Part 3",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:12:26.399Z"
    },
    "createdMsec": 1.542208346399E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:02.921Z"
    },
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "298987924",
    "duration": "4:34",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bec3ca79b376b0013455fae",
    "slug": "fetch-population-1",
    "title": "Project: Get population by country - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:17:59.696Z"
    },
    "createdMsec": 1.542208679696E+12,
    "updatedIso": {
      "$date": "2019-06-10T20:11:39.405Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "299036617",
    "duration": "4:37",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "sourceUrl": "https://github.com/iLoveCodingOrg/get-population-by-country/tree/1-select-country",
    "demoUrl": "https://getpopulation-1.netlify.com"
  },
  {
    "_id": "5bec3b739b376b0013455f97",
    "slug": "project-hover-closure-2",
    "title": "Project: Tooltip effect - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:12:51.827Z"
    },
    "createdMsec": 1.542208371828E+12,
    "updatedIso": {
      "$date": "2019-06-10T20:40:57.317Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298989705",
    "duration": "6:07",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedMsec": 1.5425630649E+12,
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/tooltip-effect/tree/1-button-text-array",
    "demoUrl": "https://tooltipeffect-1.netlify.com"
  },
  {
    "_id": "5bec3b229b376b0013455f91",
    "slug": "arrow-function",
    "title": "Arrow Functions Explained Correctly - Part 1",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:11:30.806Z"
    },
    "createdMsec": 1.542208290806E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:21:59.513Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298984229",
    "duration": "7:15",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bee4981c284b1001335c933",
    "slug": "call",
    "title": "'this' - Using call() to modify 'this'",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-16T04:37:21.96Z"
    },
    "createdMsec": 1.54234304196E+12,
    "updatedIso": {
      "$date": "2018-11-16T04:35:34.91Z"
    },
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "301053616",
    "duration": "4:38",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ]
  },
  {
    "_id": "5bec3b9e9b376b0013455f9a",
    "slug": "project-hover-let-5",
    "title": "Project: Tooltip effect - Part 5",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:13:34.788Z"
    },
    "createdMsec": 1.542208414789E+12,
    "updatedIso": {
      "$date": "2019-06-10T20:45:19.439Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298992949",
    "duration": "5:06",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/tooltip-effect/tree/4-let-instead-of-var",
    "demoUrl": "https://tooltipeffect-4.netlify.com"
  },
  {
    "_id": "5bec3b839b376b0013455f98",
    "slug": "project-hover-closure-3",
    "title": "Project: Tooltip effect - Part 3",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:13:07.902Z"
    },
    "createdMsec": 1.542208387902E+12,
    "updatedIso": {
      "$date": "2019-06-10T20:43:35.203Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298990525",
    "duration": "9:00",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>",
    "sourceUrl": "https://github.com/iLoveCodingOrg/tooltip-effect/tree/2-eventhandler-loop",
    "demoUrl": "https://tooltipeffect-2.netlify.com"
  },
  {
    "_id": "5bec3c0c9b376b0013455fa2",
    "slug": "array-find",
    "title": ".find() method of Array in JavaScript",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:15:24.26Z"
    },
    "createdMsec": 1.54220852426E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:17.552Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "298998856",
    "duration": "1:42",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bec3c699b376b0013455fa9",
    "slug": "promise-2",
    "title": "Promise in JavaScript - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:16:57.18Z"
    },
    "createdMsec": 1.54220861718E+12,
    "updatedIso": {
      "$date": "2018-11-14T14:39:47.682Z"
    },
    "level": 1,
    "active": true,
    "enabled": true,
    "videoSource": "300575666",
    "duration": "4:53",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ]
  },
  {
    "_id": "5bec3b479b376b0013455f94",
    "slug": "closure-2",
    "title": "Closure in JavaScript Explained Correctly - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-14T15:12:07.745Z"
    },
    "createdMsec": 1.542208327745E+12,
    "updatedIso": {
      "$date": "2019-02-16T03:22:01.946Z"
    },
    "level": 2,
    "active": true,
    "enabled": true,
    "videoSource": "300323617",
    "duration": "4:04",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "bodyContent": "<h3>JavaScript Cheatsheet</h3>\n<p>Download it, print it and keep it next to your desk.</p>\n<ul>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\">Download JavaScript Cheatsheet (PDF)</a></li>\n    <li><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\">Star JavaScript Cheatsheet on Github</a></li>\n    <li>Share Cheatsheet Link: <a href=\"https://ilovecoding.org/blog/js-cheatsheet\">https://ilovecoding.org/blog/js-cheatsheet</a></li>\n</ul>\n\n<a href=\"https://ilovecoding.org/blog/js-cheatsheet\"><img src=\"https://a.ilovecoding.org/img/js2/js-cheatsheet-thumb.png\" alt=\"JavaScript Cheatsheet Thumb\" width=\"100%\"></a>"
  },
  {
    "_id": "5bee49fdc284b1001335c936",
    "slug": "arrow-function-this",
    "title": "Avoid Pitfall: 'this' inside an arrow function",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-16T04:39:25.424Z"
    },
    "createdMsec": 1.542343165424E+12,
    "updatedIso": {
      "$date": "2018-11-16T04:44:59.345Z"
    },
    "level": 2,
    "videoSource": "301054946",
    "duration": "3:00",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ],
    "updatedMsec": 1.542343499345E+12
  },
  {
    "_id": "5bee4a07c284b1001335c937",
    "slug": "this-method-function",
    "title": "Avoid Pitfall: 'this' inside a function inside a method",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-16T04:39:35.585Z"
    },
    "createdMsec": 1.542343175585E+12,
    "updatedIso": {
      "$date": "2018-11-16T04:35:34.91Z"
    },
    "level": 2,
    "videoSource": "301055460",
    "duration": "4:37",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ]
  },
  {
    "_id": "5bee4a19c284b1001335c939",
    "slug": "constructor-2",
    "title": "Using Constructor - Part 2",
    "subTitle": "",
    "createdIso": {
      "$date": "2018-11-16T04:39:53.787Z"
    },
    "createdMsec": 1.542343193787E+12,
    "updatedIso": {
      "$date": "2018-11-16T04:35:34.91Z"
    },
    "level": 2,
    "videoSource": "301057431",
    "duration": "4:30",
    "access": 0,
    "technology": [
      "JavaScript"
    ],
    "topic": [
      "Core JavaScript"
    ]
  }
]