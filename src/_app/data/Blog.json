{"_id":{"$oid":"5c5dea619e4e1b0014f54f2d"},"slug":"htmlcss-cheatsheet","title":"HTML & CSS Cheatsheet (PDF included)","subTitle":"HTML and CSS are straight forward if understood simply. These cheatsheets will make your life easy for learning and for reference.","bodyContent":"<div class=\"row mb-4\">\n    <div class=\"col-6\">\n        <img class=\"img-fluid border\" src=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.jpg\" alt=\"HTML Cheatsheet\">\n    </div>\n    <div class=\"col-6\">\n        <img class=\"img-fluid border\" src=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.jpg\" alt=\"CSS Cheatsheet\">\n    </div>\n</div>\n\n<p>I have created 100s of websites in my career, most of them were created when I was working for an agency. They had a lot of small business clients and I would crank out simple HTML and CSS based websites for them. There I perfected my HTML and CSS chops and got very comfortable with putting together website designs.</p><p>Fortunately designing websites is simple once you have a good foundation. And once you have a little practice, you can easily design websites as large as Wikipedia or Forbes. All websites have layout and styling, and the same HTML and CSS fundamentals are used to create websites big and small.</p><p>I have put together two structured cheatsheets, one for HTML and the other for CSS, to give you the fundamentals of HTML and CSS.</p><p>They are easy to understand and Free for you to download and keep.</p>\n\n<h2>HTML Cheatsheet</h2>\n<p>This HTML Cheatsheet covers the basic terminologies, syntax/markup, and common elements of HTML.</p>\n\n<p><b>Note:</b> This is NOT an exhaustive list of all the elements HTML has. For an <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\">awesome HTML Reference, click here.</a></p>\n\n<p>Want to learn HTML &amp; CSS? here's an <a href=\"/courses/htmlcss2\">awesome video course.</a></p>\n\n<p><a href=\"https://raw.githubusercontent.com/iLoveCodingOrg/html-cheatsheet/master/html-cheatsheet.gif\"><img class=\"img-fluid border\" src=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.jpg\" alt=\"HTML Cheatsheet\"></a></p>\n\n<div class=\"btn-group d-block text-center\">\n<a class=\"btn btn-success\" href=\"https://github.com/iLoveCodingOrg/html-cheatsheet/raw/master/html-cheatsheet.pdf\" title=\"HTML Cheatsheet PDF\">Download HTML Cheatsheet - PDF</a> <a class=\"btn btn-success\" href=\"https://raw.githubusercontent.com/iLoveCodingOrg/html-cheatsheet/master/html-cheatsheet.gif\" title=\"HTML Cheatsheet Image\">Download HTML Cheatsheet - Image</a>\n</div>\n\n<a class=\"mt-2 d-block text-center\" href=\"https://github.com/iLoveCodingOrg/html-cheatsheet\" title=\"HTML Cheatsheer on Github\">Star on Github</a> <br>\n\n<hr>\n\n<h2>CSS Cheatsheet</h2><p>CSS stands for Cascading Style Sheets. Simply said, CSS is a list of instructions that style/beautify the HTML elements.</p><p>CSS is like makeup, for HTML. Really!</p><p>If you understand the foundation of CSS correctly and capture the basic (1) Syntax, (2) Application, (3) Selectors, and (4) common CSS properties, your life as a web professional will be much more fun.</p><p>This CSS Cheatsheet will help you with that:</p>\n<p><a href=\"https://raw.githubusercontent.com/iLoveCodingOrg/css-cheatsheet/master/css-cheatsheet.gif\"><img class=\"img-fluid border\" src=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.jpg\" alt=\"CSS Cheatsheet\"> </a>\n</p>\n\n<div class=\"btn-group d-block text-center\">\n<a class=\"btn btn-success\" href=\"https://github.com/iLoveCodingOrg/css-cheatsheet/raw/master/css-cheatsheet.pdf\" title=\"CSS Cheatsheet PDF\">Download CSS Cheatsheet - PDF</a> <a class=\"btn btn-success\" href=\"https://raw.githubusercontent.com/iLoveCodingOrg/css-cheatsheet/master/css-cheatsheet.gif\" title=\"CSS Cheatsheet Image\">Download CSS Cheatsheet - Image</a>\n</div>\n\n<a class=\"mt-2 d-block text-center\" href=\"https://github.com/iLoveCodingOrg/css-cheatsheet\" title=\"CSS Cheatsheet on Github\">Star on Github</a> <br>\n\n<hr>\n<h2>üëç Want to learn HTML &amp; CSS?</h2>\n<p>Try the <a href=\"/courses/htmlcss2\">most comprehensive HTML &amp; CSS video course</a> here on iLoveCoding.</p>\n<p>\n<a href=\"/courses/htmlcss2\"><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/thumb/htmlcss2.gif\" alt=\"Learn HTML and CSS correctly\"></a></p>\n\n<p>This course will teach you how to code HTML &amp; CSS and build simple and professional websites.</p><p></p><p></p>","createdIso":{"$date":"2019-02-08T20:45:21.028Z"},"updatedIso":{"$date":"2019-04-02T11:31:33.328Z"},"active":true}
{"_id":{"$oid":"5c048aa8065efa010e52af32"},"slug":"what-is-the-first-programming-language-a-beginner-should-learn","title":"What is the First Programming Language a Beginner Should Learn?","subTitle":"Whether you‚Äôre looking to build a web application, a web feature, an e-commerce store, improve your career or have a great startup idea, learning to code is an important skill to have. Here you will find which programming language you should learn that will server you well now and in the future. ","bodyContent":"<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/code-1839406_1920.jpg\" alt=\"code-1839406_1920\">\n<h3>Are you just starting to learn to program, and wondering what‚Äôs the first programming language you should learn?</h3>\n<p>I will answer exactly that in this post.</p>\n<p>Before I began, let me ask you a question.</p>\n<p>Why do you want to learn to program?</p>\n<ul>\n   <li>Do you want to build Web Applications?</li>\n   <li>Do you want to build fancy Web Features?</li>\n   <li>Do you want to build Websites?</li>\n   <li>Do you want to have your own startup?</li>\n   <li>Do you want to become a Front-End, Back-End or Full-Stack Developer?</li>\n</ul>\n<p>If your answer is yes to any of the questions above, then you should learn <b>JavaScript</b><b>.</b></p>\n<p>If you do not have any prior programming experience, then start off by learning the <a\n   href=\"https://ilovecoding.org/courses/htmlcss2\">fundamentals of HTML and CSS</a> and build a blog from scratch‚Ä¶</p>\n<p>Here is the link to the <a href=\"https://ilovecoding.org/courses/htmlcss2\">World's best HTML and CSS Video Course\n   Training</a>, and it happens to be free, enjoy</p>\n<p><b>Note:</b> JavaScript is not Java.</p>\n<p><strong><i>Java is to JavaScript as Car is to Carpet</i></strong></p>\n<p>The word ‚Äúcar‚Äù and ‚Äúcarpet‚Äù both have the word ‚Äúcar‚Äù in it, but it doesn‚Äôt make it the same thing.</p>\n<p>Similarly, Java and JavaScript are two different languages, they just happen to share a similar name.</p>\n<p>JavaScript is the language of the web and is used to create web applications. Many JavaScript Developers use\n   JavaScript libraries like Angular and React to speed up their development.</p>\n<p>You can also use JavaScript for Back-End web development through the Node.js runtime.</p>\n<h3>JavaScript is easy to learn</h3>\n<p>JavaScript has a straightforward syntax (if understood correctly) that is highly logical to grasp. It has fewer\n   components that make up the language, that means faster learning.\n</p>\n<p>JavaScript is a very flexible language, and although it has fewer components, less is more in this case.</p>\n<p>Other languages have a certain computer requirement. After those requirements are met, certain software must be\n   installed. Once you have done all the setup, you can finally start writing code.\n</p>\n<p>That's not the case with JavaScript.</p>\n<p>You can start writing your first line of code in Notepad if you wish, and it will work, although I recommend using a\n   Text Editor like <a href=\"https://www.sublimetext.com/\">Sublime Text</a>,\n   <a href=\"http://code.visualstudio.com/\">Visual Studio Code</a>, <a href=\"https://atom.io/\">Atom</a>, etc.\n</p>\n<p>A lot of people say Python and Ruby are very easy. True, Ruby and Python have simpler syntax. This is why people\n   recommend beginners to start with these languages. That is fine if your goal is just to learn to program. You can pick\n   any language you want.\n</p>\n<p>But if your goal is to build meaningful web and mobile apps, then JavaScript should be your first and last choice as\n   your first programming language.</p>\n<p>BTW, you can get comfortable with the syntax in a week.</p>\n<p>JavaScript doesn‚Äôt only work for the web, it works for mobile, it works for TV, it works for Kiosk, it works for\n   every device. Period.</p>\n<p>Due to this versatility, JavaScript has the most diverse use-cases. This means that more problems can be solved.</p>\n<h3>JavaScript is the Most Popular Programming Language</h3>\n<p>If you want to build anything for the web, you need to have JavaScript in your technology stack.</p>\n<blockquote class=\"blockquote\">Today JavaScript the #1 programming language <br>\n   <span class=\"blockquote-footer\"><a href=\"https://insights.stackoverflow.com/survey/2018/#most-popular-technologies\">Stack Overflow Survey 2018</a></span>\n</blockquote>\n<img class=\"img-fluid border\" src=\"https://a.ilovecoding.org/img/why-javascript/compare-prog-lang-stackoverflow.png\" alt=\"\">\n<p><strong>71.5%</strong>&nbsp;of respondents use JavaScript as their main programing language.</p>\n<p>Even more, JavaScript is the fastest growing programming language 6-years in a row.</p>\n<p>Even <a title=\"Permanent link to The RedMonk Programming Language Rankings: January 2016\"\n   href=\"http://redmonk.com/sogrady/2016/02/19/language-rankings-1-16/\" rel=\"bookmark\" rev=\"post-5340\">The RedMonk\n   Programming Language Rankings: January 2016</a> also shows that JavaScript is the most popular programming language.\n</p>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/JavaScriptblog4.png\" alt=\"javascriptblog4\" />\n<p><a href=\"http://redmonk.com/sogrady/2016/02/19/language-rankings-1-16/\">Image Source</a></p>\n<p class=\"entry-title full-title\">Here's the visual depiction of the historical programming language rankings</p>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/JavaScriptblog5.png\" alt=\"javascriptblog5\" />\n<h2>JavaScript is powerful</h2>\n<p>Here are some of the ways companies are using JavaScript</p>\n<ul>\n   <li><a href=\"http://united.com/\">United Airlines</a> built its new Customer Checkin Kiosk app with JavaScript</li>\n   <li><a href=\"https://trello.com/\">Trello</a> made a project management app with JavaScript</li>\n   <li><a href=\"https://geekli.st/home\">Geekli.st</a> made a social media platform like Facebook with JavaScript</li>\n   <li><a href=\"https://ghost.org/\">Ghost</a> is a blogging platform built with JavaScript</li>\n   <li>Netflix TV App is built with JavaScript</li>\n   <li>Facebook Mobile App, and now the <a class=\"vglnk\" href=\"http://Facebook.com\"\n      rel=\"nofollow\"><span>Facebook</span>.com</a> app is built with JavaScript</li>\n   <li>Paypal migrated their back-end systems from another programming language to JavaScript.</li>\n</ul>\n<p><strong>Since 99% of all top websites use JavaScript, there are countless examples </strong>of<strong> how and where javascript is used.</strong>\n</p>\n<p>Once you've made up your mind to learn JavaScript as your first programming language, <a\n   href=\"https://ilovecoding.org/\">Join iLoveCoding</a>. iLoveCoding is the simplest, most effective path to front-end &amp; full-stack development.\n</p>\n<p>You can <a href=\"https://ilovecoding.org/curriculum\"></a><a href=\"https://ilovecoding.org/curriculum\">check out the full iLoveCoding curriculum here</a>\n</p>\n<p>If you have any question, feel free to leave your comments below. I'll talk to you in the comments.</p>","createdIso":{"$date":"2018-12-03T01:45:12.234Z"},"active":true,"updatedIso":{"$date":"2020-08-04T03:05:13.237Z"}}
{"_id":{"$oid":"5c048bea065efa010e52af37"},"slug":"heres-how-ashley-became-a-confident-and-resourceful-developer","title":"Here's How Ashley became a Confident and Resourceful Developer","subTitle":"We recently spoke with one of our iLoveCoding Pro Student who shared her story with us how she overcame the fear of code. If Ashley can overcome her fear of code, so can you ","bodyContent":"<p>Note: Video Not Available</p>\n\n<h2>Video Transcript, Enjoy üôÇ</h2>\n\n<p><code>Aziz:</code> First of all, tell me about yourself, what are you up to? What you‚Äôre doing these days? And why did you decide to learn how to code?</p><p><code>Ashley:</code> So these days I‚Äôm still currently involved in my previous endeavor which is real estate, but I‚Äôm extensively every damn putting hours into coding. I haven‚Äôt obviously had the time to actually create something solid because I‚Äôm still in the process of learning but as I‚Äôm learning, I‚Äôm kinda creating draft here and there and getting into the hang of something that I have on my mind.</p><p><code>Aziz:</code> So what do you have in mind? What was your motivation to start learning code? Why not just stay with real estate?</p><p><code>Ashley:</code> It really kinda goes back a few years back around 3, 4 years ago I was still in university and I was meddling between the courses and programs that I had no idea what I wanted to do.</p><p>The idea was to go to university, finish that and become something of yourself.</p><p>That‚Äôs when I met my current business partner and we started doing real estate. When we started doing real estate, We had the need to create a website and obviously, we have an online presence to advertise our project or working on things like that.</p><p>And although for the majority of the projects, I used WordPress, because it was easier copy and paste for those kinds of projects,&nbsp;but I wanted to have more of control in terms of customization and things like that.</p><p>So what I did is, I went to the bookstore and I picked up a really big book on HTML alone. So I‚Äôm like okay ‚Äúthis must be a good book‚Äù so I went home and I looked through it very quickly and fall asleep right on it and I couldn‚Äôt, it was just so overwhelming - Lots of unnecessary information now that I look at it what‚Äôs put into that book.</p><p>Although I did learn some useful HTML tags from there, I didn‚Äôt really take it much further than that for the next few years.</p><p>Next few years, I was working on WordPress and teaching myself through trial and error. I did learn obviously some coding, some tags, how things worked in here and there, but I never got too deeply into it.</p><p>Now about a year ago, I‚Äôve started coming up with web development ideas and app ideas which has really started making me think about creating something with raw code.</p><p>And my first thought was okay, I wanna create something really fast and what‚Äôs the best way than me having to learn, it would take a long time so I thought of having someone else do it for me. Right? so I looked around then considered hiring a contractor to do the work for me.</p><p>But looking at the pros and cons of that, I kinda saw more cons as in and obviously you have to keep paying them to maintain and create and it would never necessarily be exactly what you want, somebody else has to do, as opposed to me doing it myself.</p><p>In addition to that, I had more than one idea. So it‚Äôs not like every time I have an idea, I don‚Äôt wanna have to put it in the hands of somebody else. I wanna have my own ability to create it.</p><p>So I have gone online and I have started looking up for resources and just starting to learn how to code. So now I‚Äôm here maybe, few months I have been really extensively doing it and putting kinda a lot of hours into it and that‚Äôs also around that time that's how I came across <strong>iLoveCoding</strong>.</p><p>And what was really different about iLoveCoding from that book a&nbsp;long time ago is that you cut all the clutter and out and you focus only on important things. Even other things that I found online, other resources they focus on a lot of different languages and you‚Äôre like ‚ÄúUgh, what do I do, which one do I choose?‚Äù</p><p>And it confuses the heck out of you.</p><p>While you focus on Javascript as being a primary source where you can do the back-end and the front-end and everything with it, which is what really got me excited and gave me focus.</p><p><code>Aziz:</code> Right, so you have brought up many good points... Let me start with the first one that you mentioned is the book... And, that‚Äôs one of the things... a book is great but a book will focus on one topic and it‚Äôs gonna go very deep.</p><p>But it‚Äôs unnecessary, it‚Äôs gonna go about, it‚Äôs gonna have about 20 pages just about the history and how it came about, who freaking cares?</p><p>You just wanna know, how do I go from the minimal effort, how can I put a page together and have success under my belt immediately, and the book will not give you that very quickly. Reading a book as a reference is good, because if you wanna look up something, a book is fine.</p><p>Or there are resources online like W3Schools, they have a lot of references It‚Äôs like documentation. Oh, does the image tag have a border properties? Yes or no! You can just look it up very quickly...</p><p>So one thing is, you do not wanna memorize that. The way I came about that is Einstein said that ‚Äúdo not commit to memory anything that you can look up in a book‚Äù But these days, you can look up on the internet.</p><p>So a book strategy for a newbie is not the perfect path, If you have that as a resource and started off to get your juices flowing. That‚Äôs a great thing so thank you for mentioning that.</p><p><code>Ashley:</code> And that‚Äôs why I left university, I cut it short to do extensively my real estate, that‚Äôs what the idea is, you fill up your head with the bunch of memorized information and then at the end of a day and you also don‚Äôt know how to apply it practically. You teach how to apply that information that you learned without the unnecessary memorization but into a&nbsp;practical scenario.</p><p><code></code>Correct, exactly‚Ä¶ a great point. The second point that you also mentioned, you mentioned about hiring developers.</p><p>And that‚Äôs actually I was in the same shoes as you were in. That I had this idea and my motivation was that I wanted to become rich. Right, all these companies are billions of dollars and stuff like that.</p><p>Why can‚Äôt I just create a stupid app and put my heart into it and then sell it for whatever lot of money. So that was my motivation. And I did that. I hired a bunch of developers I had them coded. I even launched it, the idea did not become successful eventually.</p><p>That‚Äôs beside&nbsp;the point but I had spent $20,000 dollars outsourcing stuff and after I had lost this company, I felt out of control because I did not know how to code and I was at mercy of my developer, and one particular time, the developer disappeared for one month.</p><p>And I was like ‚ÄúI don‚Äôt even, I have the code but I don‚Äôt know what to do with it‚Äù So that just made me fearful that I am at the mercy of somebody else. Sometimes if you get&nbsp;hit by a bus or whatever right, whatever happens.</p><p>I‚Äôm just gone. If you have a fight with your developer whatever, he can just put your site down live, right? You‚Äôre putting some trust in somebody else that you don‚Äôt know. So that‚Äôs the second point that you make really well. So thank you.</p><p>Do you have something in mind or I can move on to the next question?</p><p><code>Ashley:</code> You can go ahead</p><p><code>Aziz:</code> Okay, so you talked about your motivation and talked about why you joined iLoveCoding to learn and launch your app idea. So why did you decide to learn from iLoveCoding vs others?</p><p>Because of course, you don‚Äôt know about iLoveCoding before you joined, you know after. So why did you decide to join?</p><p><code>Ashley:</code> Yeah, I do learn from other resources because I like to get the idea from multiple sources and kinda make up my mind. Some things are mentioned in other places that aren‚Äôt mentioned in the same resource and I take points from everything.</p><p>And what I do like about iLoveCoding a lot and it was the first course that I actually ever signed up for is that like I said you get to the point straight, you don‚Äôt waste my time or I guess other people‚Äôs time who sign up with the none sense detail.</p><p>You also very well actually show how to create something of substance and you don‚Äôt teach all those kinds of languages that aren‚Äôt necessarily required. When I went to university, I took one computer coding course and the beginning of it was Python.</p><p>And right now I can‚Äôt really imagine choosing Python, I‚Äôm sure there‚Äôs a&nbsp;way you could use it that is&nbsp;benefical but at this point, I feel like I‚Äôd choose any other language but that.</p><p><code>Aziz:</code> Right, interesting, that‚Äôs great! And that‚Äôs again a very good point. Getting to the first success under your belt is extremely important.</p><p>Another point that you made that although it‚Äôs not totally beneficial to me as a founder of iLoveCoding, but you make a very good point which I‚Äôm totally for is that you look in multiple resources.</p><p>And it doesn‚Äôt mean that you just sign up for multiple courses, you may sign up for one or two but you wanna keep on googling stuff.</p><p>So let‚Äôs say if you are not figuring out this particular point because iLoveCoding or any other resources, resource is not a Bible. It will not give you everything</p><p>And it shouldn‚Äôt. If it does, then it becomes that stupid book that is not helpful so it will give you the path, it will give you a lot of necessary information.</p><p>But there‚Äôs gonna be points where you‚Äôre gonna get stuck, and for that you simple google and you might come across certain blog post, certain tutorial, some other courses and you‚Äôll sign up for that course and read certain blogs and you will get that clarification there.</p><p>So one resource does never work for anybody even world class people they will have multiple coaches. A coach specializing in wrestling, a coach specializing in jiu-jitsu or whatever.</p><p>So you need that broadness. And thanks for bringing it up.</p><p><code>Ashley:</code> Also, I have to add that I really like the analogies you use often. I‚Äôm a visual learner so for me, it helps really put the picture into my mind the understand in that way</p><p><code>Aziz:</code> Right, again a very good point. I love this and I wanna tell you that I‚Äôm not putting these things in your head, you are bringing these things out which has been my motivation.</p><p>My another principle that I have is that people, as when we are born as children, we build knowledge on our baseline knowledge that we have...</p><p>So when we‚Äôre kids, we have no knowledge so we poke around and touch things and we say ‚ÄúOh I can feel this, this is soft, this is hard‚Äù and we build that understanding and then if you wanna build another level of understanding.</p><p>Let‚Äôs say in coding, which is gibberish code like you don‚Äôt know what that means.</p><p>You have to, you have a baseline of understanding of the world of the door of the computer of the hands or fingers</p><p>You use that basic understanding, build those analogies into the real world of coding, so you build that knowledge from your baseline knowledge and analogies are the best.</p><p>Or not the best but one of the handy tools that you can build that knowledge from your baseline knowledge. So the analogy is a big thing that I use a lot.</p><p><code>Ashley:</code> Exactly and the reason it makes me feel so comfortable is because back in school, maths, physics and things like that in my opinion, weren‚Äôt my strongest subject. But I think it‚Äôs the way that it‚Äôs delivered.</p><p>Because that‚Äôs so similar in line with coding and computer development, when I looked at the&nbsp;code I was like ‚ÄúUgh, what is this?‚Äù I cannot do this, it‚Äôs not something I‚Äôm good at.</p><p>But then the way you present it, it makes me feel very confident and then when I‚Äôm writing the code and understanding it, it‚Äôs really something, it‚Äôs a way of learning in the way of teaching that makes a huge impact on how you observe that information.</p><p><code>Aziz:</code> Exactly, I am so happy that you are bringing this up and explaining it so well, and that‚Äôs been my motivation that people, it‚Äôs not about coding. It looks so alien, what is that? that‚Äôs not English, what is that?</p><p>Know what it is, it just makes sense then. So it‚Äôs the process of communication and that's not done well in colleges I have taken multiple classes and it‚Äôs just, you know It‚Äôs just waiting for it to be done. I‚Äôm a computer geek but I couldn‚Äôt understand it.</p><p>So thank you for bringing that up. What is the next question, let me look at my list.</p><p><code>Aziz:</code> You already mentioned what‚Äôs the best part about iLoveCoding. <code></code>So what is your next goal? So my last two questions.</p><p>What is your next goal in the&nbsp;journey with coding and stuff like that? You have learned certain aspects tell me what you have learned so far and what is your next goal?</p><p><code>Ashley:</code> I‚Äôm pretty in depth now I think I have learned quite enough or not enough I guess there‚Äôs never enough cause you can always learn more. But I have learned a lot of HTML &amp; CSS, I‚Äôm in the process of learning SASS and things like that.</p><p>And right now I‚Äôm also starting to get into Javascript, I‚Äôm almost done your <a href=\"https://ilovecoding.org/courses/learn-javascript-in-14-days\">Learn JavaScript in 14 days</a> course.</p><p>And I‚Äôve looked at the calculator app as well, which is very neat</p><p>So that‚Äôs where I am now. Now that I feel like I can more or less create, I‚Äôve also learned bootstrap, I create like an outline and the visual part, I need to create the functionality, behavior and learn more about the back-end.</p><p><code>Aziz:</code> Right, that‚Äôs awesome. So that is what you have done so far. So how confident are you that you will achieve what you‚Äôre set to do.</p><p><code>Ashley:</code> 100%</p><p><code>Aziz:</code> That‚Äôs awesome and why is that? Why do you have that kind of confidence? Because people who may be listening to this, may not have that confidence. They might be totally lost like you were a few years ago</p><p>So why do you have that confidence now that you didn‚Äôt have a few years ago?</p><p><code>Ashley:</code> Because I guess after learning quite a bit, and now instead of reading and you know the Facebook posts of my friends may be back in the day, I like to go on a website and just click view source or things like that and just go through their code and read that instead and figure out how things are done.</p><p>And the fact that I have that understanding now and I just play around and kind of samples of what i wanna create eventually, I‚Äôm typing my own code and it appears as I type it when I click on live preview in brackets for example.</p><p>It actually shows as I imagined it, the fact I‚Äôm getting it and it‚Äôs working. That‚Äôs what gives me that confidence and every time I learn something new and that works, I‚Äôm proving my skills.</p><p>It‚Äôs just a constant up the ladder, and I keep climbing the ladder up and up that's giving me more and more confidence. Plus learning is so exciting.</p><p><code>Aziz:</code> Oh my god, you make so many great points. I wanna expand on those. You actually made four points and I don‚Äôt know if I‚Äôm gonna remember all that.</p><p>So first thing you said that the reason you have the confidence is because you can simply view the source and then you know how things are done.</p><p>So now if people are listening to this, they may say ‚Äúviewing source‚Äù? That‚Äôs all gibberish but since you have this practice, you know&nbsp;since you know how to read English.</p><p>You can pick up any English book and start reading it and after sometime, it can make sense of it. So the web is specifically HTML &amp; CSS.</p><p>All the code that is on the website is downloaded on your computer and then rendered by the browser and then when you have that fundamental understanding, you are, you have more empowerment to see how things are done.</p><p>So iLoveCoding will give you that empowerment because you will see, you will get the basics and then see how the basics are turned into something and when you know the formula, you can see other formulas.</p><p>And that‚Äôs number one point. The number two point that you made is the Live Preview.</p><p>So when you‚Äôre using the tool brackets in your case, you can use other tools and editors as well. But brackets has this neat feature called ‚Äúlive preview‚Äù so as you‚Äôre coding, you see something and the feedback loop is instant so you do something and you see the results and you know what you did wrong, you know what did right.</p><p>And when humans have instant feedback, that‚Äôs addicting because in school, let‚Äôs say in school you were four years in school or you go three months for school.</p><p>And you give your test and you give it to your teacher and after 2 weeks or one week, you get the result and there‚Äôs a delay and when you shorten that delay, when you short the feedback cycle that‚Äôs when the excitement of learning happens.</p><p>So that‚Äôs the second point you make. Learning is excitement I already mentioned that and you mentioned one another great point which I‚Äôm forgetting.</p><p>So that‚Äôs fine, I‚Äôm just picking those details as you‚Äôre saying.</p><p>Oh and the other point that you mentioned is that you‚Äôre keeping on climbing the ladder and I wanna make everyone aware that there‚Äôs no top of the ladder.</p><p>It really isn‚Äôt...</p><p>You will get to a point that where you feel very comfortable like I know everything I can build this, I can build that.</p><p>That in a few years or months you‚Äôll find another person who likes knows another area which is really good Like you are learning into SaaS.</p><p>Tomorrow you may learn jQuery then learn you know Angular then React then data science. The topics are endless and you will always keep on learning.</p><p>But of course, you will be faster at learning those concepts because your baseline is there and you‚Äôre gonna build on top of that baseline.</p><p>Awesome, awesome points.</p><p>My last question is, what advice do you have for people listening to aspiring developers from your journey?</p><p><code>Ashley:</code> One of the things is that definitely don‚Äôt get discouraged. Like there‚Äôs time like even with WordPress I couldn‚Äôt figure something out. It was bugging me but there are so many resources out there like StackOver flow.</p><p>There‚Äôs so many solutions and any problem you may see, you have tons of support. Even from you, what I really like is that you provide support, you provide the live calls and the 1 on 1 call and things like that.</p><p>So that amount of support is very very nice. Well, it‚Äôs definitely encouraging for anybody who is starting out.</p><p>And what I really like is that you give kinda a map or a big picture of things as well.</p><p>For me, that‚Äôs something really helpful. I can‚Äôt just narrow down okay that‚Äôs HTML, that‚Äôs CSS etc. I need to see kinda how everything falls into place and functions.</p><p>You provide that and once I think people learn and see that, that will also be an encouraging factor.</p><p><code>Aziz:</code> Absolutely, great point again.</p><p><code>Aziz:</code> So just for people who don‚Äôt know what StackOverflow is, I wanna clarify. So StackOverflow is a very popular website, the free website, where you, anybody can ask a very technical question, detailed technical question.</p><p>And the StackOverflow community is gonna respond If you liked that answer, you can accept that answer and just like you have that particular problem and posted your question.</p><p>Hundreds and thousands of other people have the exact same problem so it‚Äôs a shared resource and the way every developer is gonna discover it.</p><p>But as you‚Äôre developing, you‚Äôre gonna come across the certain problem you copy the error message, paste it into google and eventually, you‚Äôre gonna land to a resource that StackOverflow is a web page with that question that you asked.</p><p>And with an exact answer. So that‚Äôs a resource available for the collective knowledge of developers so that‚Äôs pretty much it. I mean that‚Äôs all I wanted to talk to you about</p><p>Any thoughts? Any finishing thoughts that you wanna mention? Any project that you wanna mention that you‚Äôre working so people can visit?</p><p><code>Ashley:</code> Actually, I don‚Äôt have anything published right now but in the future, I‚Äôll for sure give you a shout.</p><p><code>Aziz:</code> Okay, cool. I‚Äôd love to see your project as well and share it with the community.</p><p>Thank you, and thank you for doing this.</p>","createdIso":{"$date":"2018-12-03T01:50:34.005Z"},"active":true,"updatedIso":{"$date":"2021-08-28T06:13:28.182Z"}}
{"_id":{"$oid":"5c043b09065efa010e52af2d"},"slug":"how-ilovecoding-started","title":"How iLoveCoding Started","subTitle":"iLoveCoding was born out of my personal frustration, when I could not find a resource that would show me how to use Javascript to make real world apps and websites. Finally, I decided that I would build such a resource.","bodyContent":"<p>Back in 2012, the startup craze was high, and I decided to launch a technology startup out of Chicago, where I live. I joined and graduated from <a title=\"Founders Institute\" href=\"http://fi.co/\">Founders Institute</a>. Since I am a web guy, I decided to forget mobile, my startup would be a web-based startup. Back then, every startup was using Ruby on Rails to develop their web-app. I thought if it worked for others, it would work for me - Typical mindset of a newbie. Since I didn't know any better.</p><p>Being a control freak that I was back then, I had to learn Ruby on Rails (RoR) on my own. Having no background in Ruby or Rails, I had to read books, do tutorials and get a hang of the language and framework. I also hired a few Rails Developers from Pakistan and started coding up my app. I told my developers that they would do the coding, and at the same time, they would also have to show me a little bit on what they were doing. I must say, the learning curve is pretty steep. Every feature I wanted to build for my app was a research project. It was not fun.</p><h3>The Ultimate Practical Resource to Build Web Apps</h3><p>Finally, I discovered this website <a title=\"RailsCasts.com\" href=\"http://Railscasts.com\">Railscasts.com</a>. I was in heaven. <a title=\"RailsCasts.com\" href=\"http://Railscasts.com\">Railscasts.com</a> has small video screencasts in which Ryan Bates, the founder of <a href=\"http://Railscasts.com\" rel=\"nofollow\">Railscasts.com</a>, would take you from nothing to building a small little feature in Rails. Screencasts about User Login, Content Protection, Accepting Payments, Creating News Feeds, Building a Search Feature, all were there. If I wanted to make a replica of Facebook, Twitter, Wikipedia, or Quora, I could build it out of my learning from <a href=\"http://RailsCasts.com\" rel=\"nofollow\">RailsCasts.com</a>; one tutorial at a time.</p><p>In theory that sounded good, but in reality, after almost a year of trying, I still didn't get a handle on RoR. My startup was built and was primarily built by the developers I hired.</p><p>(Un)fortunately, my startup didn't work out, and right at that time, I was starting to get interested in Front-End Development and Node.js. Historically JavaScript only ran on the browser, that meant that JavaScript was only good for creating front-end website features that ran on the browser. But with Node.js, JavaScript code could run on the computer without the need of a browser. This opened JavaScript to compete with all other programming languages imaginable. Now you could create, website backends, desktop applications, TV applications, smart-watch applications and even mobile applications with JavaScript.</p><p>My thought process was - why learn platform-specific languages such as PHP, Python, Ruby, C#,&nbsp;etc, when I can learn just ONE language to build apps for every platform. I came to the realization that JavaScript is the ONLY language that qualifies to do that. This realization made me go all in with JavaScript.</p><h3>Finding Resources to Learn Full-Stack JavaScript</h3><p>I googled hundreds of times in search of a website that would teach me JavaScript in a way that would make me confident and practically-able to build JavaScript apps. After months of frustrations and trying dozens of tutorials and courses I was still a wannabe programmer. I was looking for a \"Railscasts.com for JavaScript<strong>\"</strong> like resource, that could teach me how to practically build Modern Front-End Websites, Interactive User-Interfaces, and Backend APIs and Systems via JavaScript. I didn't find such a resource (and none exists till this day besides iLoveCoding - updated in 2019)</p><p>One night I was laying in my bed ready to fall asleep, and it dawned on me - what If there as a website similar to Railscasts but for JavaScript, that's what I would gladly pay money for. But there was nothing like it, I had spent months looking for a good resource and to no avail. I had to scratch my own itch, and at that night the concept and dream of iLoveCoding was born.</p><blockquote><span style=\"text-decoration-line: underline;\"><strong>iLoveCoding is for JavaScript what RailsCasts is for Rails</strong></span></blockquote><blockquote><p>iLoveCoding is the only resource on the Internet that specializes in teaching JavaScript in a way that makes you a Full-Stack JavaScript Developer.</p></blockquote><p>At iLoveCoding, you will learn the nuts and bolts of JavaScript. jQuery, HTML &amp; CSS, React, Working with API, Git, Databases, Node.js, Express.js and more. This together will make you a cohesive Front-End Developer. A good front-end developer can command a salary of $70,000 - $120,000 with the above skill set. As a beginner, you would be starting at a lower range. As you gain experience, your earning power will increase.</p><p>With Node.js, you will be able to build backend of websites and replace Ruby-on-Rails, PHP, or any other programming language you were using in the backend. Since Node.js is in high demand and also opens up the possibilities of JavaScript usage, this skill will serve you well financially as well as creatively.</p><h3>iLoveCoding is complete</h3><p>When I started iLoveCoding, my goal was to have one definitive source where students can get all the baseline knowledge, with plenty of practice projects. I am super happy that I accomplished my goal. With over 500 video lessons and dozens of practice projects, <a href=\"https://ilovecoding.org/curriculum\"></a><a href=\"https://ilovecoding.org/curriculum\">iLoveCoding Curriculum</a> is complete.</p><p>iLoveCoding takes you from a complete beginner, <a href=\"https://ilovecoding.org/courses/htmlcss2\">teaching you HTML, CSS</a>, Advanced JavaScript, Modern Front-End development, Back-end development, Code collaboration with Git, Working with Third-party APIs, Databases, mobile development and more.</p><p>See the <a href=\"https://ilovecoding.org/curriculum\">complete iLoveCoding Curriculum</a>, and if you want to a complete learning path, check out this course -&nbsp;<a href=\"https://ilovecoding.org/courses/perfect-path\">The Perfect Path to becoming a Job-ready Developer</a>.</p>","createdIso":{"$date":"2018-12-02T20:05:29.484Z"},"active":true,"updatedIso":{"$date":"2019-04-03T13:09:00.16Z"}}
{"_id":{"$oid":"5c048a55065efa010e52af31"},"slug":"shatter-your-fear-of-coding","title":"Shatter Your Fear of Coding","subTitle":"Write your first line of code, discover the tool that Pros use, and Shatter Your Fear of Coding within the next 5 minutes.\n(No exaggeration, Pure Demonstration)","bodyContent":"<p><strong>FAIR ADVISE:</strong> Be sure to follow the steps provided in the video, This will help internalize your knowledge on a deeper level.</p>\n<div class=\"video\"><iframe src=\"https://player.vimeo.com/video/195941579?title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n<div style=\"background-color: yellow; text-align: center;\"><strong>What did you think of the video?</strong><em><span style=\"text-decoration-line: underline;\"><strong><br></strong></span></em><span style=\"text-decoration-line: underline;\">Comment Below</span></div>\n<p> </p>\n<h2>Video Transcript, Enjoy :-)</h2>\n<p>Hello and welcome to another lesson of iLoveCoding.</p>\n<p>In this lesson, we are going to shatter your fear of code.</p>\n<p>If you are afraid that coding is very complex, it's very difficult, it's for people smarter than you, and you have a mentality that I'll never be able to write gibberish words on a computer and instruct it to make something practical and useful in the world.</p>\n<p>If you think you have to learn so much stuff before you're ready to be any productive and build real applications, I'm going to shatter all those thoughts that you have.</p>\n<p>So in this demonstration, the only thing you need is a browser named Google Chrome, most likely you already have it and that is it.</p>\n<p>In the process, we are going to actually do a mini hack YouTube, and we're going to write one piece of line of code and you're going to easily be able to tell how simple coding can be, if you know what you're doing. That's pretty much it.</p>\n<p>So let's get started.</p>\n<p>Head over to YouTube and open any video, for the sake of this demonstration, I have Steve Jobs Stanford Commencement speech open. You can open any video it doesn't matter.</p>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/fear-of-code.png\"></p>\n<p>When you're on the video page, right click and go to inspect as shown below</p>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/fear-of-code-1.png\"></p>\n<p>It will open a tool that Google Chrome has built in, it's called web developer tools as you can see below</p>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/shatter-your-fear-of-code.png\" alt=\"shatter-your-fear-of-code\" border=\"1\"></p>\n<p>An alternate way to open the developer tools is you go to the menu on top in chrome and select more tools and then open developer tools like such</p>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/shatter-the-fear-of-code3.png\" alt=\"shatter-the-fear-of-code3\"></p>\n<p>The next step is to go to the console tab in web developer tools, simply click on the console tab<br><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/shatter-your-fear-of-code4.png\" alt=\"shatter-your-fear-of-code4\"></p>\n<p>The console is a window into the Javascript world. Now I'm going to write one piece of code like such <code><strong>$(‚Äòvideo‚Äô)</strong></code> the $ and the brackets in the code are to grab the video element on the web page.</p>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/shatter-the-fear-of-code5.png\" alt=\"shatter-the-fear-of-code5\"></p>\n<p>Hit enter and it's going to grab the entire video and if I hover over the code, it hovers the video like such</p>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/shatter-the-fear-of-code6.png\" alt=\"shatter-the-fear-of-code6\"></p>\n<p>Now I'm going to write the same code once again and this time I'm going to add <strong><code>.playbackRate</code></strong> like such <strong><code>$(‚Äòvideo‚Äô).playbackRate </code></strong>make sure the 'R' in playbackRate is capital. Hit enter and it's going to give the value of 1 playbackRate is the rate at which the video is running, So 1 means the play back rate is normal.</p>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/shatter-the-fear-of-code7.png\" alt=\"shatter-the-fear-of-code7\"></p>\n<div> </div>\n<div>Here's the fun part, you can actually change the play back speed by adding the value 2 like such <code><strong>$(‚Äòvideo‚Äô).playbackRate = 2 </strong></code> hit enter and the video will start playing faster. You can actually change the speed to 3 as well by writing <code><strong>$(‚Äòvideo‚Äô).playbackRate = 3 </strong></code> and the video will start playing faster.</div>\n<div> </div>\n<div>\n  <p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/shatter-the-fear-of-code-8.png\" alt=\"shatter-the-fear-of-code-8\"></p>\n  <p>If you change the playback rate to normal you can simply write <code><strong>$(‚Äòvideo‚Äô).playbackRate = 1 </strong></code> and the video will go back at normal speed. See it yourself in the video above and then do it yourself and see how cool it actually is.</p>\n  <p>Now this is the extreme simplification of course you have to write tremendous amount of code, you have to know far many concepts but this is a very simple demonstration where you have certain elements and elements have certain properties, you set and get certain states that it has, and you can manipulate those states which in return produces a web page or produces a feature or produces the application that you're trying to create.</p>\n  <p>Make sure you copy these steps on your computer so you internalize the knowledge you just have got.</p>\n  <p>If you are serious about web development, if you want to become a Front-End developer, let it be known that this tool that I just showed you is used by all web developers, all Front-End developers on a daily basis.</p>\n  <p>So get yourself a gift of a head start into the world of development and play around with the techniques that I just showed you.</p>\n  <p>If you have a question, leave your comments below and I'm going to talk to you in the comments.</p>\n</div>","createdIso":{"$date":"2018-12-03T01:43:49.276Z"},"active":true,"updatedIso":{"$date":"2019-04-02T23:19:23.386Z"}}
{"_id":{"$oid":"5c048bb3065efa010e52af36"},"slug":"what-are-some-goals-a-beginner-self-taught-developer-should-have","title":"What are some goals a Beginner Self-Taught Developer should have?","subTitle":"Every beginner needs to have certain goals while learning how to code; Here are some of the goals you should have to become a confident and resourceful developer ","bodyContent":"<p><b>Don't just learn how to code, have some goals that will pull you towards becoming a confident developer.</b></p>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/apple-691633_1920.jpg\" alt=\"\">\n<p>As a beginner, your goal should be to start easy. (Don't sweat)</p>\n<p>Learn, ask questions and listen to your peers or fellow developers. Get yourself into the tech scene and build connections.</p>\n<p>Read other people‚Äôs code. I can‚Äôt stress this enough. Go to your favorite website and view the source code. You will learn a ton.</p>\n<p>Build something by following tutorials and reading books.</p>\n<p>When you are learning a programming language choose something that you can create out of it. If you are <a href=\"https://ilovecoding.org/courses/htmlcss2\">learning HTML &amp; CSS</a>, what about a static website for yourself that incorporates everything you have learned.</p>\n<p>Building projects will toughen up your skills and you will feel more confident.</p>\n<p>There has been a <a href=\"https://www.reddit.com/r/learnprogramming/comments/4vr2of/what_are_some_goals_a_beginning_selftaught/\" rel=\"noopener\">thread</a> posted on a Reddit's subreddit <a href=\"https://www.reddit.com/r/learnprogramming\" rel=\"noopener\">/r/learnprogramming</a> what are some goals a beginner self-taught developer should have while learning to code?</p>\n<p>A lot of programmers gave so many good suggestions and I am going to break down the important ones for you.</p>\n<h3>Developer with no degree, no formal education in Computer Science (CS)</h3>\n<p><a href=\"https://www.reddit.com/user/CaRDiaK\" rel=\"noopener\">Redditor</a> posted this comment</p>\n<div class=\"border px-4 pt-4 mb-3\">\n  <p><em>Lead Developer here, completely self-taught. No degree, no formal education in CS. In my opinion..</em></p>\n  <ul>\n    <li><em>It's more about thinking than it is about slinging code.</em></li>\n    <li><em>It's 10 x more about learning and research than it is about syntax/frameworks. - if you do <a href=\"https://www.coursera.org/learn/learning-how-to-learn\" rel=\"noopener\">Coursera's Learning How To Learn</a> </em><em>you'll save yourself years.</em></li>\n    <li><em>Little and often is more effective than single big sessions.</em></li>\n    <li><em>Persistence &gt; Knowledge.</em></li>\n    <li><em>Understand how your subconscious mind works and how you can lean on it to solve problems.</em></li>\n    <li><em>Get plenty of sleep.</em></li>\n  </ul>\n</div>\n<h3>Make your code look Readable</h3>\n<p>Another <a href=\"https://www.reddit.com/user/IchorLQ\" rel=\"noopener\">Redditor</a> posted this</p>\n\n\n<div class=\"border px-4 pt-4 mb-3\"><p><em>Learning syntax is the first step, but it is incredibly important to learn to create readable code. Writing code is like writing a paper. Getting the code down and the logic correct is your first draft, but what makes good code stand out from bad code is the extra effort put in to revise and refactor it into something that is robust, readable, and reusable.</em></p></div>\n\n<p>I totally agree with him, learning syntax is important, doesn't matter what programming language you're learning. But it's important to organize your code.</p>\n<p>If you see the picture below, the code looks ugly but it's up to you to make it look better and readable so you and your peers can easily navigate through it.<br></p>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/Cleanvsbadcode.png\" alt=\"\"></p>\n<h3>Don't memorize everything</h3>\n<p>Another <a href=\"https://www.reddit.com/user/skewleeboy\" rel=\"noopener\">Redditor</a> posted this and I totally agree with him. You simply cannot learn everything in a day or two. Also, you do not need to memorize everything there is to learn.</p>\n\n<div class=\"border px-4 pt-4 mb-3\">\n  <p><em>Patience. You cannot learn everything in a day. Take your time, now is probably the best time in the history of computing to learn... You have more resources to learn (information freely shared, computing resources, etc...) than ever.</em></p>\n</div>\n\n<blockquote class=\"blockquote\">\n  Nevermemorize something that you can look up. ‚Äî Albert Einstein\n</blockquote>\n\n<p>If you can find something easily on the internet, you do not need to memorize that. Instead, focus on solving a particular problem, that's your ultimate goal should be.</p>\n<p>Junior and Senior developers don't memorize the entire documentation of a particular technology. They just go online and look up the documentation for whatever they are looking for.</p>\n<h3>Set Milestones</h3>\n<p>Another <a href=\"https://www.reddit.com/user/elperroborrachotoo\" rel=\"noopener\">Redditor</a> posted this</p>\n\n<div class=\"border px-4 pt-4 mb-3\">\n  <p><strong>Learn to estimate your work.</strong><br>The transition from <em>\"let's try something fun until I'm tired\"</em> to <em>\"How long would your suggestion take?\"</em> is hard, especially for self-taught devs.</p>\n  <p>Set yourself \"observable milestones\" such as <em>\"Print button actually prints something nice\"</em>, give it an estimate, write that down, and track your time. Compare.</p>\n  <p>Be honest with yourself. Did you really complete the milestone, or does the \"print\" button print something plausible, but not actually what you need?</p>\n  <p>This requires the almost mechanical skill to track your time spent, the mental focus to stay on topic (instead of fixing whatever crosses your path), and the most artistic skill of coming up with a <em>useful</em> estimate.</p>\n  <p>(Estimation can be a black art, don't want to go too deep here. But even with the first two you are already ahead.)</p>\n  <p><strong>Include all artifacts</strong><br>It's the most common mistake in estimation, and the one that devs can still get wrong after years: <code>Print</code> does print, but the manual isn't updated, some more tests should be written, the keyboard shortcut still needs to be wired up and setup needs to include the Printer Abstraction Adapter Runtime.</p>\n  <p>The feature is not done until it can be published.</p>\n  <p><strong>Publish</strong><br>Have someone use your software. Ideally, watch them using it. Find some sympathetic victim, offer some prize money, whatever. This is the best answer to <em>\"Am I finished?\"</em> you'll ever get - and self-taught devs tend to lack that experience.</p>\n  <p><strong>Go back</strong><br>Come back to your code base after half a year or more of inactivity. Fix a bug and add a feature.</p>\n  <p>Teaches you humility and maintenance, which is roughly 40%...80% of development work.</p>\n</div>\n\n<h3>Build a Portfolio</h3>\n<p>Another <a href=\"https://www.reddit.com/user/AnimeFanOnPromNight\" rel=\"noopener\">Redditor</a> posted this about building a portfolio.</p>\n\n<div class=\"border px-4 pt-4 mb-3\">\n  <p><em>I'd develop a really well-made portfolio of various projects so people can immediately understand what you're capable of.</em></p>\n</div>\n\n<p>Never underestimate the power of your portfolio. Build stuff that you can be proud of, doesn't matter what. A blog website, photo slider, Web Scrapper. To-Do app, Resume portfolio, etc.</p>\n<p>Once a client sees your portfolio and the amount of stuff you have built, that's when he/she knows what you're capable of. Your work speaks for itself.</p>\n<h3>Build something practical</h3>\n<p>Another <a href=\"https://www.reddit.com/user/conven_orearr\" rel=\"noopener\">Redditor</a> posted this</p>\n<div class=\"border px-4 pt-4 mb-3\">\n  <p><em>Being able to make 'things'. It doesn't matter if they are super technical or anything just being able to apply the theory or stuff you've read will cement it in your head and you will find that your problems are no longer in writing the actual code but to visualize the systems you create and bringing them into being. As a CS uni student, the thing I see most often are students who study programming theory a lot but can't contribute much in actual projects or what not. Also, it's nice to look back on the projects that boggled your mind a year ago and to have a nice laugh at your former self</em></p>\n</div>\n<h3>Understand set logic and boolean logic</h3>\n<p>Another <a href=\"https://www.reddit.com/user/drachenstern\" rel=\"noopener\">Redditor</a> posted this</p>\n\n<div class=\"border px-4 pt-4 mb-3\">\n  <p><em>I think that understanding set logic and boolean logic will go a long way towards helping you understand some of the higher order stuff people are doing, but you don't have to understand that on day one. </em></p>\n  <p><em>Just because there's a pattern to the code, doesn't mean you need to memorize the pattern. You should learn the reason for the pattern. That's how you become a better developer, knowing why the pattern, so the pattern becomes second nature.</em></p>\n</div>\n\n<h3>GitHub</h3>\n<p>Another <a href=\"https://www.reddit.com/user/VeloCity666\" rel=\"noopener\">Redditor</a> posted this</p>\n<div class=\"border px-4 pt-4 mb-3\">\n\n\n  <p><em>Learn Git. Make a GitHub account.</em></p>\n  <p><em>Start projects and more importantly, finish them. (and put them up there, of course)</em></p>\n  <p><em>Connect with other developers, there are plenty of Slack/Discord/Gitter servers. (I can invite you to our own Discord server) It's fun interacting with other devs and you learn a lot from it.</em></p>\n</div>\n\n<h3>Understand the Business Value</h3>\n<p>Another <a href=\"https://www.reddit.com/user/learnjava\" rel=\"noopener\">Redditor</a> posted this</p>\n\n<div class=\"border px-4 pt-4 mb-3\">\n  <p>If you want to work in this field: <strong><u>Understand the business value</u></strong> you cant always write the fanciest code just because you want to. Often it has to be practical: cheap, short timeframe and maintainable for many years to come by someone other than you</p>\n</div>\n\n<p>The amazing thing about teaching yourself is that you can set your own goals.</p>\n<p>And with the introduction of technologies such as Node.js you don't need to know tons of programming languages, all you need is a <a href=\"https://ilovecoding.org/blog/roadmap/\" rel=\"noopener\">Roadmap (Front-End &amp; Full-Stack JavaScript Development Roadmap)</a></p>\n<p>That's it, folks!</p>\n<p>I hope you enjoyed reading this blog. If you have a question or any thoughts, leave your comment below.</p>","createdIso":{"$date":"2018-12-03T01:49:39.527Z"},"active":true,"updatedIso":{"$date":"2019-04-02T13:24:50.318Z"}}
{"_id":{"$oid":"5c0489b4065efa010e52af2f"},"slug":"my-startup-journey-to-our-first-1000-customers","title":"My Startup Journey to Our First 1,000 Customers","subTitle":"My authentic and transparent journey to acquiring our first 1000 recurring paying customers. I will not dramatize my success or hide my setbacks. I will give it you raw, and expand on my learnings","bodyContent":"<h3>IMPORTANT: I am no longer blogging about my startup journey</h3><p>‚ÄúI was a smoker for 20 years, then one day I realized enough is enough, and through sheer willpower and commitment, I quit smoking overnight‚Äù ‚Äî Yeah right!</p>\n<p>This is a classic example of selective-facts story telling. Unfortunately, that is what we get to hear today in the entrepreneurship space, the overnight successes.</p>\n<p>The growth hack that solved all the customer problems for that startup; that seed funding from an angel investor; that admission to Y-Combinator. We start thinking, we need that lucky break too.</p>\n<p>And the poor, misinformed entrepreneur goes on the path to get that lucky break. Whereas, he/she should be working on building the company and providing value to customers.</p>\n<p>This cruel way of storytelling that only highlights the lowest lows and the highest highs should be made illegal.</p>\n<p>What about the frustrations, the self-doubt, the vicious cycles of debates that happens constantly in the entrepreneurs head. Where are those parts of the story?</p>\n<p>We are led to believe that those successful entrepreneurs are superhumans, gifted with the perfect combination of skills, opportunities, and intelligence ‚Äì Bull Shoot.</p>\n<h2>Enough is enough: I‚Äôll Give You As It Is ‚Äì My Promise</h2>\n<p>As you will follow this blog, I will be authentic and vulnerable with you.</p>\n<ul>\n  <li>I will tell you that I feel frustrated with myself when I have an unproductive day.</li>\n  <li>I will tell you that I get anxious every time, till this day, when I sit to record a new video lesson (even after recording nearly 100 videos.) (Recorded over 500 as of 2019)</li>\n  <li>I will tell you that I feel vulnerable thinking what if I run out of money.</li>\n  <li>I will tell you that my fears sometimes influence me to make chicken decisions.</li>\n  <li>I will tell you that sometimes I feel overwhelmed by the amount of stuff I have to do to the point of paralysis.</li>\n  <li>And I will tell you that I go in vicious cycles in my head about decisions in my business.</li>\n</ul>\n<h4>However, I will also tell you:</h4>\n<ul>\n  <li>How that customer inquiry sparks a light of faith in my heart.</li>\n  <li>That beautiful customer appreciation email made my day.</li>\n  <li>That new customer that registered, made me believe my efforts are not in vain.</li>\n  <li>The growing traffic numbers and the video views tell me that I am doing something right.</li>\n</ul>\n<h4>In this process, I will share with you everything</h4>\n<p>In this process, I will share with you everything I am learning to overcome my fear, build self-belief and the tactics I am employing to reach 1000 paying customers for iLoveCoding.</p>\n<p>I have realized that when I commit to something and work single-mindedly, all the inner chatter becomes less noisy and over time those discouraging thoughts have little influence over my decisions.</p>\n<p>That is why I have total faith that this journey is going to teach me a lot, and in the process, I will become a more refined version of me.</p>\n<h2>So Why Blog About it?</h2>\n<p>My first inspiration is Andrew Warner. Andrew interviews entrepreneurs on his site and shares the interview recording with his audience.</p>\n<p>What attracts me toward Andrew is that he is , in my opinion, 1000% authentic. I can hear it in his voice, in his questions,&nbsp;and in his reactions. He doesn‚Äôt try to pretend to be someone he is not. In fact, I have noticed that when he does pretend, he would come out and admit it. Even more, he would expand on his insecurities.</p>\n<p>Who does that?</p>\n<p>This guy is genetically incapable of faking it, and that is why I have a high level of trust in Andrew.</p>\n<p>I have sensed similar pureness of heart in Pat Flynn‚Äôs podcast, which I very recently started to listen.</p>\n<p>I admire both Pat and Andrew‚Äôs authenticity, and I think that is one of the reasons for their success.</p>\n<h4>Humans are geniuses</h4>\n<p>I was the exact opposite of them. I would put on a fake persona, and communicate through that filter.</p>\n<p>I now believe that humans are geniuses at picking up inauthentic people. Inauthentic people are insecure, and they repel their fellow humans.</p>\n<p>Blogging is my way to persistently communicate with you, and stay true to my journey.</p><p>As I put my blog in writing, I will get a chance to reflect on my journey and progress every week.</p>\n<p>If I am not reporting much progress for a few weeks, I‚Äôll know my efforts need calibration.</p>\n<h2>So Why 1000 Customers Only?</h2>\n<p>Isn‚Äôt market domination the name of the game?</p>\n<p>No, the name of the game is the name you give it. I am not here to live somebody else‚Äôs expectations. I am not here to prove myself based on somebody else‚Äôs scale. My journey has the purpose I give it.</p>\n<h4>I chose 1000 customers because:</h4>\n<ul>\n  <li>Given my progress rate, 1000 is a big goal</li>\n  <li>I know I will have to step it up to achieve it</li>\n  <li>It feels attainable to me</li>\n</ul>\n<h4>Set Milestones</h4>\n<p>It just takes imagination to dream up a goal. It takes blood sweat and tears to realize that dream.</p>\n<p>I could have set my goals high on 10,000 or 100,000 customers, but those numbers are so huge that I lose the sense of reality with them.</p>\n<p>This doesn‚Äôt mean I will not aim for 10,000. I will, once I achieve the milestone of 1000 customers.</p>\n<p>It takes different skills to ride a bicycle on local streets. It takes a different set of skills to ride a motorbike on a highway.</p>\n<p>These skills must be acquired in order.</p>\n<p>So 1000 before 10,000 right.</p>\n<h2>Starting Point: Our Stats Right Now</h2>\n<ul>\n  <li>We launched at a pricing point of $5/month. At that rate, we were getting 3-5 customers a day.</li>\n  <li>Since we have raised our pricing to $9/month with a Free Trial. Now we get 0-2 customers a day.</li>\n  <li>Currently, we have 88 Paying Customers</li>\n  <li>We have been in business since Oct 19th, 2014 ‚Äì 5 Months</li>\n  <li>Revenue is around $600/month</li>\n</ul>\n<h2>What‚Äôs in it for you?</h2>\n<p>We, humans, look for shortcuts, we are distracted by the new shiny object. We pursue goals sporadically with little success, which leads to our dissatisfaction.</p>\n<p>This blog will be a transparent window into a life of a single-founder building an education startup in a competitive market.</p>\n<blockquote class=\"blockquote\">\n  <p>There are two types of people in this world. First who learn from their mistakes; second learn from somebody else‚Äôs mistakes</p>\n<div class=\"blockquote-footer\">My Dad</div>\n</blockquote>\n<p>If you are an entrepreneur, especially a single founder, this is your opportunity to learn from my mistakes and my successes.</p>\n<p>I will write about:</p>\n<ul>\n  <li>Growth Hack that got me from 20 visitors a day to 150 visitors a day</li>\n  <li>Which tools I use to run my business, and which sexy tools I stopped using</li>\n  <li>How I got my first few customers</li>\n  <li>How I am building relationship and authority with my customers</li>\n</ul>\n<p>and much more</p>\n<h2>Follow my journey</h2>\n<p>I invite you to follow my journey. I plan to <em>blog once a week on this topic</em>.</p>\n<p>When you subscribe to the email list below, I‚Äôll notify you every time a new blog is posted.</p>\n<p>If you have any questions, suggestions or ideas, <a href=\"https://twitter.com/ilovecodingorg\">let me know via Twitter</a>. And please let me know what you thought about this blog in the comments below.</p>\n<p>Thanks for reading, talk to you in the comments.</p>","createdIso":{"$date":"2018-12-03T01:41:08.513Z"},"active":true,"updatedIso":{"$date":"2019-04-03T11:57:22.401Z"}}
{"_id":{"$oid":"5c0438eb065efa010e52af2c"},"slug":"6-figure-developer-job","title":"How I landed my first Javascript Development Job and got 6 figures for it","subTitle":"How I went from a project manager to a Sr. JavaScript Developer and commanding a 6-figure income per year; Despite being afraid of coding, ","bodyContent":"<p>How I landed my first JavaScript development job and got 6 figures for it, without having to apply to a single job. Yes, the jobs came to me. At some weeks I was doing 3-4 interviews over the phone; I ended up getting a couple of offers both offering 6-figures per year in compensation. Here is how I did it:</p><h2>Developing Early Hatred of Programming</h2><p>My parents made a HUGE mistake when I was 15 years old.</p><p>They got me my first computer (This was not a mistake), but then they put me in a beginners course to learning computers. Turns out, it was a programming course. Yup, it was a bad idea for a kid like me, who didn't know how to use a computer yet.</p><p>Well, they didn't know any better. They trusted the lady who recommended the course.</p><p>I went through the agony \"<strong>Trying</strong>\" to learning programming when I actually didn't even know the basics of operating a computer. It was brutal</p><ul><li>The instructions went over my head,</li><li>I could not understand the assignments,</li><li>My code was buggy, I could hardly code,</li><li>It was a hit or miss to make even the simplest things to work</li><li>I would stare at the screen for hours and would be glad when the session was over.</li></ul><p>Thank God, the tests were multiple-choice questions! With some guessing and sneaking over other students answers, I barely passed the class.</p><p>From that point on, I hated programming and thought I would never do it in my life.</p><p>Subconsciously, I developed this belief <strong>\"Coding is not for me\".</strong></p><p>Exactly 10 years later, I found myself <strong>wanting</strong> to learn to code. How did this happen? more on this later.</p><p>Remember, I didn't have to learn to code. No one asked me to, somehow I badly wanted to learn to code. I chose to become a coder.</p><h2>Self-fulfilling prophecy \"Coding is not for me\"</h2><p>In early 2011, I was building a tech company. As a single-founder of the company and on a shoe-string budget. I hired and fired a few developers trying to maximize my return on investment. Funds were running out, and I didn't have a stable developer working for the company.</p><p>I knew HTML and CSS (Due to my Photoshop and Web Design Background), but programming is different, very different.</p><p>I was in a vulnerable state! I was running a tech startup and I didn't understand its tech. pretty bad. I didn't have a co-founder to compliment my skills, a technical co-founder would have been nice. This meant that I was totally not in control of how the technology ran.</p><p>My different developers could...</p><ol><li>Lie to me on how long a certain assignment took</li><li>Take down the website and hold me, hostage,</li><li>Be unavailable due to an emergency</li><li>Simply produce a low-quality buggy application and justify how hard that bug is to fix (hiding their poor skill-set)</li></ol><p>With that, I had a low budget to sustain even a single developer on a full-time basis. This forced me to learn Ruby on Rails. The framework we used for our startup at that time. Yes, at that time I was forced to learn.</p><p>I bought a Rails course from Udemy, I read the Rails Tutorials on the official site, I read a popular book on rails twice and followed its instructions at least 6 times - No exaggerations. This helped me at least understand what was going on. 3-4 months into this and I still could not develop event the smallest enhancements to my web app. I didn't have the confidence, resourcefulness or the understanding to code. I was at the mercy of my developers.</p><p>I could definitely conduct a conversation about coding, that would have sounded very intelligent on the surface, but honestly, I didn't have anything to show for it.</p><p>I gave up on Rails in late 2013.</p><p>My self-imposed belief \"<strong>Coding is not for me</strong>\" became a self-fulfilling prophecy.</p><h2>Discovering JavaScript</h2><p>There is a beautiful stopwatch app, I installed from the Chrome App Store. I really like it since it helps me stay productive. This app was missing a feature. What if I could record my tasks while I time myself. The task feature was missing from this stopwatch app.</p><p>I thought to myself, what if I created my own app with this feature that I want. On second thought I said, \"forget it, Aziz! you can design websites, but <strong>coding an app is not for you.</strong><strong>\"</strong> Self-imposed belief talked me out of it once again.</p><p>Around the same time, I stumbled upon a course on jQuery - a popular JavaScript library which is very easy to use. I don't know what had me take that course, but I took it. Immediately, for the first time in my life, the instructions made sense to me. I could internalize the concepts. If my code broke, I could easily troubleshoot and fix the problem. It clicked for me.</p><p>Part of the reason is that JavaScript is a very flexible language, and when used correctly, it can make you a very powerful developer.</p><p>Due to my fear of coding, I had avoided JavaScript as well. Besides, historically JavaScript had a bad rep in the developer community. But since the launch of Douglas Crockford's book \"JavaScript: The Good Parts\" in 2008, the JavaScript community was getting the attention it deserved.</p><p>Not just that, Node.js was getting popular in the community. Node.js enabled JavaScript to be run outside the browser, like any other programming language. This meant that now JavaScript could be used to replace tasks done with Ruby, Python, Java, C#, Php, Go, Perl or any other programming language.</p><p>Listen: This is not a small thing, its a breakthrough.</p><p>Typically you need to <a href=\"https://ilovecoding.org/courses/htmlcss2\">know HTML, CSS</a>, JavaScript plus another server-side language (ruby, python, C#, PHP, etc.) to build a full-fledged application.</p><p>Now you don't have to learn anything more than HTML CSS and JavaScript.</p><p>Plus, if you use this stack, you can build Kiosk App (Like I built for United Airlines Airport terminal), TV App, Mobile App, Desktop Apps, Web Application. You name it. HTML, CSS, and JavaScript combination is the most powerful and versatile tech stack.</p><h2>The tables turned, I wanted to Learn to Code now</h2><p>Now I wanted to learn to code, I wanted to build that StopWatch Task app, I wanted to be fully express my ideas because now I saw I could be that person who can actually realize my ideas into reality without relying on other people and without going through the agony of hiring.</p><p>I was the master of my journey and destiny again.</p><p>But there was a problem. There was not a single resource on the internet that could teach me JavaScript in a structured way - In a way that the learning gets internalized. Just like that jQuery course! I searched for months, read many blogs, tutorials and exercise, but I could not get confidence. That is when I subconsciously began to distinguish patterns on what makes a great developer, vs what makes a developer wannabe.</p><p>I began to learn and implement my code in a structured manner, and soon got the confidence to update my resume, and start interviewing.</p><p>At that point, I also came up with the Idea of iLoveCoding. A website that would teach in a way that got me to love coding, in a way that speeds up learning, in a way that makes a great developer.</p><h2>Jumping into the water, and then learn to swim</h2><p>I had a ton of experience designing websites, but designing and developing are two totally different skill. In fact, you will notice that most developers are not designers and most designers are not developers. I decided to jump into the job market and test the waters. I updated my resume and there were a few key things I got right.</p><h4>Focus on your website design and development experience</h4><p>I had done, E-Marketing, Project Management, Web Designing and had run multiple startups as well. In all of my experiences, I had touched the web. I updated my resume and focused my experience to highlight all the ways I had worked on websites.</p><ul><li>Using a Content Management System, like Drupal, Wordpress, Joomla, Adobe Experience Manager (Formerly Adobe CQ).</li><li>Designing websites in Photoshop and coded them with HTML, and CSS</li><li>Some jQuery copy pasting I did to make some web features work</li><li>Strategizing website design and user interface</li><li>Managing Agencies in Web Development and Website Migration Projects.</li><li>Managing Teams to build Web Applications and enhancing their features.</li><li>Search Engine Optimization</li></ul><p>Now the above is good, because, it highlights I am in the Web Business, but It doesn't highlight my development skills.</p><h4>List your Development Skills in the Skills section</h4><p>A typical resume has at least these two section - EDUCATION and EXPERIENCE. I added another section called SKILLS at the bottom of my resume. I put the names of all the JavaScript Frameworks I was learning, and the ones I was getting familiar with even the slightest bit. Of course, I didn't have any meaningful projects built with these technologies, but I had to tell what I knew.</p><p>I later realized, separating the skills section from the experience, while making the experience section focus on the web projects, gave the impression to the robotic recruiters that I knew these technologies and have been implementing it for many years. Most of these recruiters don't even know that a lot of the JavaScript frameworks are not even a couple of years old.</p><p>I updated my resume ethically, didn't exaggerate, nor lied. If I didn't know Ember.js, it was not in my resume. If I started learning it, it made its way into my resume. There is absolutely no point in lying, Truth always comes to the surface without exception. If I was asked in detail about my experience with that particular technology, I would tell them.</p><h2>Attracting recruiter calls with my secret weapon</h2><p>My secret weapon is <a href=\"http://dice.com\">Dice.com</a>. Forget <a class=\"vglnk\" href=\"http://Monster.com\" rel=\"nofollow\"><span>Monster</span><span>.</span><span>com</span></a> and <a class=\"vglnk\" href=\"http://CareerBuilder.com\" rel=\"nofollow\"><span>CareerBuilder</span><span>.</span><span>com</span></a>. I applied to dozens of jobs via the latter to no avail. But with <a href=\"http://Dice.com\" rel=\"nofollow\">Dice.com</a>, I didn't apply to jobs, the jobs came to me. I completed my profile on Dice, uploaded my resume and I was done. Dice has become a very popular job search site in the technology space. Big corporations want talent faster then the HR department can hire. So they hire these recruiting companies to do the work for them. 60% of these recruiters are robotic. They don't know technology and its jargon. They don't know the difference between Java and JavaScript. They don't know what the heck is Angular.js, Node.js, jQuery, or names of other technologies.</p><p><b>Important:</b> This article is based on my early days of finding a job in 2012. Although this advice is still relevant, recruiters now (2019) have caught up to the names of technologies.</p><p>These recruiters are given a job description from the big companies, and they scan for keywords within the job description. Next, they go to Dice and find any and all resume's they can find which has the keywords in them. Yes, they are humans, so they try their best with their limited knowledge to find a good match. Next, they start making the calls to potential job candidates (like me).</p><p>Since there is more demand for a Skilled JavaScript Developer then there is supply, a JavaScript Developer gets a ton of calls from recruiters desperate to place you at a job. They are literally working for you. It's in their interest that you get placed, so they can earn their commission.</p><p>Although there are many robotic recruiters, the successful ones are aware about the technology and market they are recruiting for. They are not professional technologists, but they know enough to intelligently screen people.</p><blockquote><p>Since there is more demand for a Skilled JavaScript Developer then there is supply, a JavaScript Developer gets a ton of calls from recruiters desperate to place you at a job.</p></blockquote><h2>Giving 3-4 interview per week</h2><p>The market was in my favor. Some days I would get 10-15 calls and emails. In the slow days, I would get 5. About 30% of these inquiries were a total mismatch for my skills. Even then, I was so much in demand, that I would screen based on money and location. It was natural that I would pass the initial screening because I was passionately learning about JavaScript and its framework. Next, I would be scheduled for an interview with the companies who were hiring. Passing those interviews was more effort.</p><p>I failed most of the interviews I did in the beginning. They asked me technical questions and gave me code tests. With every subsequent interview, I would get better. Listen, highly paid professionals were spending an hour at a time with me and that cost me nothing. They were helping me get better and practice interviews for free. The interviews I failed, I categorize them as practice interviews.</p><p>With time, I got better with coding and my interviews started to get a little better. Now I was passing more interviews and I was going to the offer stage. Finally, I got 2 offers at the same time, both offering me 6-figure compensation per year, and I had the liberty to choose. I accepted one of the offers, and I was officially a Sr. Developer for a Fortune 1000 company.</p><p>I did approximately 12 interviews, and in my busiest week, I did 4 interviews. The market wanted a person with my skill-set so badly that I never had to apply to a single job.</p><p>The plethora of jobs in the market allowed me the luxury that I could do an interview, fail at it and still not be worried about missing an opportunity. I knew the next opportunity was going to come to me the next day.</p><p><b>Important:</b> Fortunately the market is as hot today as it was back then. With Dice, you can still get a dozen inquiries a day.</p><h2>Commanding 6-figures</h2><p>Here is how being a fresh Developer, with little to no experience, I still managed to command a 6-figure income.</p><ol><li>The market for a JavaScript Developer is booming, It's very difficult to find a good JavaScript developer. Companies have to pay more to attract quality talent.</li><li>I negotiated my income with the recruiting agency before my resume was submitted to the employer. Recruiting agencies are given a budget by the employer. So they are really upfront about the numbers from the first conversation. If they don't bring it up, I brought it up early before I gave any interviews.</li><li>I gauged the market by letting the recruiting agency give me their number first. I kept my mouth shut when I was asked for my expected income. When they told me their number, I was happy to learn it was already high. There were many lower-income jobs as well. I screened them out from my initial conversation. I knew from so many calls, what the market rate was.</li><li>I was open to permanent placement roles, as well as contract positions, which typically pay more. Yes, contact jobs do not offer employee benefits, but the pay-rate of a contractor is high enough to justify the benefits not being included. (I did my math, let me know if you'd like to learn about that more.)</li></ol><p>Contact positions have a finite term. You could have a 3 month, 6 months or 1-year contract. In my experience, these contracts ALWAYS renew, because they need people, and the work is there. I felt no difference working as a contractor vs a full-time employee in the 3 companies I contracted for.</p><p>Your path could be faster. The technical skills you need to become a Front-End and Full-Stack developer is all in <a href=\"https://ilovecoding.org/curriculum\">iLoveCoding Curriculum</a>. <a href=\"https://ilovecoding.org/pricing\">Join iLoveCoding today</a>, and accelerate your path to becoming a competent, job-ready, and interview ready software developer.</p>","createdIso":{"$date":"2018-12-02T19:56:27.372Z"},"active":true,"updatedIso":{"$date":"2019-04-03T14:08:00.896Z"}}
{"_id":{"$oid":"5c048b0e065efa010e52af34"},"slug":"roadmap","title":"Roadmap to Front-End & Full-Stack Development with JavaScript Stack","subTitle":"By the time you are finished watching, you will learn what it takes to become a Full-Stack JavaScript developer. Not only that, learn how to become a mobile and a desktop developer. (Watch till the end)","bodyContent":"<div class=\"video\"><iframe src=\"https://player.vimeo.com/video/202930490?title=0&amp;byline=0&amp;portrait=0\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n<div style=\"background-color: yellow; text-align: center;\"><strong>What did you think of the video?</strong><em><span style=\"text-decoration-line: underline;\"><strong><br></strong></span></em><span style=\"text-decoration-line: underline;\">Comment Below</span></div>\n<p>&nbsp;</p>\n<h2>Video Transcript, Enjoy :-)</h2>\n<p>In this lesson, I will show you the exact roadmap I used to become a software developer.</p>\n\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/devroadmap1.png\">\n\n<p>The kind of developer who can build:</p>\n<ul>\n<li>Websites</li>\n<li>Web applications</li>\n<li>Mobile applications</li>\n<li>and Desktop applications</li>\n</ul>\n<p>Now you may think that it‚Äôs a lot to learn. However, if you follow the steps I am about to give you, you will be pleased to discover that its gonna take you faster than you think.</p>\n<p>In fact, you can build a simple web application, mobile application and even desktop application with just one baseline technology.</p>\n<p>So here is the roadmap. If you are new to programming, I recommend you learn Front-End development first.</p>\n<p>Now if you do not know what Front-End development is, Front-End developers, specialize in building fully functional user interfaces of a website or a web application.</p>\n<p>If you go to a popular website, or any website for that matter, the user interface that you interact with, you click the button feature, the menu feature, the interactions, the way the page loads, the way the page is laid out, the colors, all the interaction, and the visual features are all designed, developed and coded by a front-end developer.</p>\n<p>Hence the name Front-End, because it‚Äôs facing the user.</p>\n<p>A web application has a minimum of two components.</p>\n<p>The Front-End that the user interacts with and the Back-End that you do not see as a user but when you interact with the website, when you click the login button, that information, your username and password is actually sent to the back-end, a computer a system, a piece of software that takes that information and makes a check ‚Äúis this username or password correct?‚Äù</p>\n<p>If you actually click on a page, it‚Äôs actually requesting the page data. So that information is requested from the back-end and the back-end determines:</p>\n<p>\"Oh, the user wants to see the about page, Ok let me send that information back to the front-end‚Äù So the front-end and the back-end work together to build an entire website or web application.</p>\n<p>A front-end developer takes care of how the user interface works, the interaction works, and how the look and feel of a website works.</p>\n<p>A back-end developer, on the other hand, writes the code that handles the flow of data, saving information, updating information, reading information and deleting data and also manage in the access permissions of the data.</p>\n<p>So for instance, if you‚Äôre trying to access the profile information of Aziz‚Äôs profile of Twitter, you do not have access to it.</p>\n<p>Only me Aziz has access to it‚Ä¶ so back-end code also takes care of the permissions one user has vs another. Of course, an administrator of a website has all the permissions.</p>\n<p>So all this piece of information, or piece of logic and piece of expectations that we have from a website is very obvious for us, because we are used to using Twitter and we are used to knowing that ‚ÄúOh, of course, I can only change my profile picture and I cannot change the profile picture of somebody else‚Äôs Twitter profile.</p>\n<p>But all this logic, all these details are hand-coded by developers to control the data to create a particular interaction, a look and a feel of a website.</p>\n<p>A front-end of a website talks to the back-end of a website to get the data. This makes a full application.</p>\n<p>So back to the roadmap. If you are new to development, learn front-end development first and then build your back-end development skills.</p>\n<p>I recommend front-end development first because of several reasons.</p>\n<p>First, front-end development feels more familiar because you are building user interfaces similar to what you are used to on your favorite websites. It feels at home that you‚Äôre building familiar stuff.</p>\n<p>Second, front-end developers are more in demand these days so that increases your chances of getting employment and getting ample amount of practice.</p>\n<p>Third, it‚Äôs more gratifying to build functional website features, at least for me. So it‚Äôs an encouragement that you get, that keeps you going.</p>\n<p>So here are the skills you should learn to get started to learn front-end development.</p>\n<h3>Front-End Development (HTML &amp; CSS)</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/fe-1.jpg\">\n<p><a href=\"https://ilovecoding.org/courses/htmlcss2\">Start with learning HTML &amp; CSS first</a>. HTML is short for \"HyperText Markup Language\". HTML is a markup language, not a programming language that helps layout the structure of a website.</p>\n<p>Think of HTML as something that helps you put the frames of a house. Just imagine you‚Äôre putting frames of a structure‚Ä¶</p>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/28e0f697320f7ebbba5bf99a7e9587e0.jpg\">\n<p>Let‚Äôs say you‚Äôre seeing a house built. Before the house is built, they actually put those wooden frames of the house.</p>\n<p>So HTML helps you put the frame and the structure of a website.</p>\n<p>CSS is the next skill you should learn. CSS stands for Cascading Style Sheets. It‚Äôs much of a design rule that helps beautify a web page.</p>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/csss.png\">\n<p>Think of CSS as&nbsp;hiring an interior designer for your web page. It helps you apply simple features of interactions, hover-effects, colors, and advanced layout. It gives you much more power on laying out your page and adds visual appeal to the website.</p>\n<p>I have created the world‚Äôs <a href=\"https://ilovecoding.org/courses/htmlcss2\">best HTML &amp; CSS video course</a>.&nbsp;<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">It‚Äôs called </span><a href=\"https://ilovecoding.org/courses/htmlcss2\" style=\"background-color: rgb(254, 254, 254); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">Learn HTML &amp; CSS Correctly</a>, try it, you will like it a lot.</p>\n<p>So now once you learn HTML &amp; CSS and you can get ample practice in it, you are considered a web designer. Someone who can build and design beautiful websites.</p>\n<p>A web designer can earn around <strong>$35,000 </strong>to <strong>$60,000</strong> per year, that‚Äôs just the market rate for this kind of skill.</p>\n<p>Knowing HTML &amp; CSS is the baseline skill for many things. Like if you want to be in the technology industry, HTML &amp; CSS is the basic skill that you must know. It‚Äôs like knowing grammar if you‚Äôre gonna talk in English. Basic grammar, of course, the more proficient you are, that‚Äôs just better for your skill.</p>\n<p>Do yourself a favor, if you‚Äôre gonna be in technology, learn HTML &amp; CSS at least the basics. And of course, if you wanna be a pro at it then do a lot of practice so that you become really good at it</p>\n<p>So like an author, if you wanna become an author, of course, you have to know not just the basic grammar skill, you should be good at grammar. But if you‚Äôre just gonna communicate in English, you just need to know the basics.</p>\n<p>So similar to that if you‚Äôre gonna be in technology, you must know the basics HTML &amp; CSS but if you are going to be a web developer, somebody who codes and builds applications, HTML &amp; CSS high-level skills with practice is absolutely a must.</p>\n<h3>JavaScript</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/fe-2.jpg\">\n<p>Now that you have the basics, I want to welcome you to learning your first programming language, which I recommend to be is JavaScript.</p>\n<p>JavaScript, as you know, is the world‚Äôs most versatile programming language and if used correctly, as I will show you, will help you build all sorts of websites, mobile apps,&nbsp;and even desktop apps.</p>\n<p>Once you learn JavaScript basics then you can start learning some popular libraries and frameworks that are going to speed up your implementation. Now, think of JavaScript as a hammer. A hammer allows you to do something. Think of libraries and frameworks as power tools.</p>\n<p>Libraries and frameworks of JavaScript are built on top of JavaScript, but they have added features systems that help you speed up the work. Just like power tools will help you do more with less effort and do it faster. JavaScript libraries and frameworks help you do just that and there are different power tools aka different libraries for different purposes.</p>\n<p>So I‚Äôm gonna give you the exact list of all the tools, the libraries and the frameworks you must learn to become a proficient developer, for not just websites, web applications, mobile applications, and desktop applications.</p>\n<p>Now, these libraries are almost considered standard in the industry.</p>\n<p>And if you are going to be a professional, it is a requirement from your employer or your client or if you wanna build those applications for yourself, it is just like a norm for you to know these things. And I‚Äôm gonna give you the exact list.</p>\n<h3>jQuery</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/fe-3.jpg\">\n<p>So, the first and the most important library that you must learn after you‚Äôve learned JavaScript basics is jQuery. jQuery is a library on top of JavaScript that helps you build cool website features.</p>\n<p>For instance, jQuery will help you build interactive menus, sliders, to-do app, button effects, animation and all the way up to a mini-application. Next, you should learn at least one modern front-end development framework.</p>\n<h3>React and/or Angular</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/fe-4.jpg\">\n<p>You can either learn Angular or React. Angular and React are JavaScript frameworks that put structure around building a modern web application.</p>\n<p>They will help you build an entire application. In fact, iLoveCoding front-end applications is built with React.</p>\n<p>I built multiple applications for bigger corporations including United Airlines, CVS Health, Press Ganey and some smaller clients with technologies such as Angular, React and others. Once you learn all these things, congratulations! You are considered a front-end developer.</p>\n<p>A front-end developer can earn anywhere from <strong>$80,000</strong> to all the way to <strong>$170,000</strong> per year in the US that‚Äôs what the range is. Of course, the range can be lower and higher but that‚Äôs what the norm is.</p>\n<p>Now, all you need is to do a lot of practice so that you become good at these things. Now, of course, there are many pieces of wisdom and tricks that you must know as a developer to be good at your job.</p>\n<p>But these are the high-level technologies that will make your resume look good.</p>\n<h3>Back-End Development</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/devroadmap2.png\">\n<p>Next&nbsp;let‚Äôs move on to back-end development. Now, you can learn typical back-end technologies like PHP, Java, C#, Python, Ruby,&nbsp;etc and enter the different worlds they‚Äôre out there. But, I have a better recommendation.</p>\n<p>You already know JavaScript.</p>\n<h3>Node.js</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/devroadmap3.png\">\n<p>You just now need to learn Node.js which is a technology that enables JavaScript to become a back-end programming language. The language is the same, you still know JavaScript that‚Äôs the same baseline, Node.js just extends JavaScript‚Äôs capability to the back-end as well.</p>\n<p>This drastically speeds up your learning curve and immediately makes you a back-end developer, but not so fast.</p>\n<h3>Express.js</h3>\n<p>You must learn a little bit more about how a back-end works and build back-end APIs. And this is simply accomplished by learning Express.js</p>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/devroadmap4.png\">\n<p>Express.js is a JavaScript library, that helps you build APIs, web APIs with JavaScript. Once you know this, you‚Äôre a back-end developer!</p>\n<p>Congratulations! And you have just mastered another area of the web application world.</p>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/full-stack.jpg\">\n<p>You already learned Front-End, now you know Back-End as well. And if you know both you are considered a Full-Stack Developer. A term used for someone who knows front-end development and back-end development combined.</p>\n<p>Once you know this, you‚Äôre just going to be a much more confident person, who with experience can eventually become a software architect because you know multiple pieces of how things work.</p>\n<p>Now, I‚Äôm oversimplifying it. These things come with experience and a lot of practice. But this is the bigger picture.</p>\n<p>Now, why should we stop here? You are just one step away from becoming a Mobile developer.</p>\n<p>And here is typically how mobile developers do become mobile developer, which is the typical way and not so effective way.</p>\n<p>So if someone wants to become an android developer, they will learn Java programming language and learn all those different tools and features so that they can build an Android application.</p>\n<p>And if they want to build an iPad and iPhone applications. They‚Äôre going to have to learn Swift programming language or Objective C and learn all the different tools and features and everything to build an iPhone or an iPad app.</p>\n<p>But, there‚Äôs a better way.</p>\n<p>There is an easier way which is getting pretty popular so much so that Facebook is using that technique as well.</p>\n<h3>Mobile Development</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/devroad5.png\">\n<p>Start with your JavaScript baseline and learn one of these JavaScript libraries that will provide tools to write mobile apps and not just for iPhone or iPad,&nbsp;<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">It‚Äôs also the same tools that are gonna be used for Android devices.</span></p>\n<h3>Native Script or React Native</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/devroadmap6.png\">\n<p>So you can learn Native Script or React Native, which are two libraries that help you accomplish just that.</p>\n<p>And that‚Äôs it‚Ä¶ you are now a mobile developer. Again, Facebooks mobile app is built with React Native. So these are not just some weird advice that I‚Äôm giving, these are mainstream technologies.</p>\n<p>These are mainstream companies using these exact tricks to implement their technology. And the baseline is JavaScript.</p>\n<p>It‚Äôs just going out of hands you know, it‚Äôs just getting so popular.</p>\n<p>Now, let us not just stop here.</p>\n<p>You already are a front-end developer now. A back-end developer and a full-stack developer, and now you also know mobile development.</p>\n<h3>Desktop Developer</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/devroad7.png\">\n<p>You can also become a desktop developer as easy as becoming a mobile developer. Only if you go through the path, that I am showing you.</p>\n<p>So again, typically an app developer for desktop, would have to learn specific technologies for the operating system they‚Äôre building on.</p>\n<p>So if they‚Äôre building for Linux or Windows or Mac, they would have to choose a different technology, different programming language, different framework. They have to know different setup tools to implement a desktop application.</p>\n<p>But let‚Äôs speed that learning curve. Choose your baseline as JavaScript as a programming language. Nothing new to learn here alright.<br></p>\n<h3>Electron</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/devroad8.png\">\n<p>Pick a library called Electron. Electron is a JavaScript library that provides tools to build desktop applications NOT just for Windows but also for Mac and even Linux.</p>\n<p>Companies like Slack, Github, Microsoft, WordPress, and many other companies use this method to build desktop apps.</p>\n<p>So, there you have it.</p>\n<p>I have given you the simplest, most effective path to becoming a professional developer, who is three times more versatile than other typical developers.</p>\n<p>I am not only giving you the roadmap, I have also given you the tools.</p>\n<p>And if you are able to get into the&nbsp;<a href=\"http://ilovecoding.org\">iLoveCoding</a> training program, it follows the exact roadmap to teach you programming. The program is step by step and it will train you in each area as described here.</p>\n<p>The program is complete in which it covers the big picture items as discussed in this video. Along with many other important details like tricks and tips that will help you become a completely confident and resourceful developer who can solve any programming task.</p>\n<p>And honestly that‚Äôs my goal that you just internalize the principles of programming, and things just become easier and easier every day. Of course when you learn a different toolset, a different power tool, a different library,&nbsp;<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">you will slow down your learning curve, its natural like anything, learning new things will slow you down a little bit.</span></p>\n<p>But with more practice, your learning curve is gonna become shorter and shorter and shorter and your productivity is going to become better and better and better.</p>\n<p>I hope you enjoyed this lesson. If you have any question, feel free to leave your comments below. I'll talk to you in the comments.</p>","createdIso":{"$date":"2018-12-03T01:46:54.307Z"},"active":true,"updatedIso":{"$date":"2019-04-02T22:54:34.08Z"}}
{"_id":{"$oid":"5c048c50065efa010e52af39"},"slug":"how-to-become-a-web-developer","title":"How to become a Web Developer","subTitle":"Learn what it takes to become a Front-End, Back-End and Full Stack Web Developer. Find out what technologies you need to learn as a complete beginner. ","bodyContent":"<p><strong>Let's discover the simplest and most effective path to becoming a web developer who can solve any programming task.</strong></p>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/emile-perron-190221.jpg\" alt=\"\"></p>\n<p>So you are interested in web development? First, let's differentiate between web developer and a web designer.</p>\n<p>A web designer is a person in charge of the visual aspect and layout of the website.</p>\n<p>On the other hand, the web developer takes that design and vision from a static design to a fully functioning website that is live and accessible to the world.</p>\n<p>What <a href=\"https://ilovecoding.org/courses/perfect-path/lessons/dev-type\">type of developer</a> do you want to become? Do you want to learn front-end, back end or both?</p>\n<h2>What is Front-End development?</h2>\n<p>The user interface of a website is called a Front-End. Developers who build that are called front-end developers. Front-end developers write code, along with ensuring a seamless user experience.</p>\n<p>A front-end developer is responsible for the look, feel and ultimately the user interface and user experience of the website.</p>\n<h3>Front-End Technologies</h3>\n<p>Front-end technologies include HTML, CSS, and JavaScript. You will also learn tons about responsive design along with typography, layouts, grid system, and single page applications.</p>\n<h3>HTML &amp; CSS</h3>\n<p>Start with <a href=\"https://ilovecoding.org/courses/htmlcss2\">learning HTML &amp; CSS</a> first. HTML is a markup language, not a programming language, that helps layout the structure of a website.</p>\n<p>After HTML, CSS is the next skill you should learn. CSS stands for Cascading Style Sheets. It‚Äôs much of design rules that help beautify a web page.</p>\n<p>It‚Äôs used to customize the look and feel of the HTML elements on your page.</p>\n<p><strong><em>HTML and CSS are the building blocks of all web development.</em></strong></p>\n<p>Here's a good starting point to <a href=\"https://ilovecoding.org/courses/htmlcss2\">learn HTML &amp; CSS</a> if you are a complete beginner.</p>\n<h3>JavaScript</h3>\n<p>Next thing you should learn is a programming language. I recommend JavaScript, <a href=\"http://ilovecoding.org/blog/why-javascript/\">here's why.</a></p>\n<p>JavaScript has become very popular among the software development industry. Currently, it‚Äôs used by 99% of all top sites on the web.</p>\n<p>JavaScript is the most widely used programming language in the world and the fastest growing language 6-years in a row (Stackoverflow Stats 2018)</p><p>In fact, JavaScript is the only programming language that runs in the browser, hence it makes an inevitable tool to use for all Front-End Developers.</p><p>What got me excited to use JavaScript was that it can be used to build website front-end, backend, mobile, and even desktop applications.</p>\n<h3>jQuery</h3>\n<p class=\" \">jQuery is a must know JavaScript library for every Front-End programmer and web developer. jQuery makes you better at understanding the browser, and how you can leverage the browser's capability to build fancy smooth features for your web application.</p>\n<p>jQuery is a JavaScript library that is tremendously helpful to use when doing front-end development. A JavaScript library is a collection of several pre-coded features that a web developer would commonly use.</p>\n<h3>React / Angular</h3>\n<p>Next, you can either learn Angular or React. Angular and React are JavaScript frameworks that put structure around building a modern web application.</p>\n<p>They will help you build an entire application. In fact, iLoveCoding's front-end application is built with React.</p>\n<h3>Ajax</h3>\n<p><a href=\"https://ilovecoding.org/lessons/what-is-ajax-how-and-why-to-use-it-asynchronous-javascript-and-xml\">Ajax</a> uses JavaScript to load certain portions of web pages without reloading the entire page.</p>\n<p>Ajax stands for Asynchronous JavaScript and XML. Ajax is not a technology but a technique which is used in web programming to transfer information over the internet. Websites and web apps that use Ajax are generally faster to navigate than web apps that do not employ it.</p>\n<p>Sites and applications using Ajax technique: Gmail, Facebook, YouTube, Google and Google Maps etc.</p>\n<p>\n  <img width=\"100\" src=\"https://a.ilovecoding.org/img/_blogs/gmail.png\" alt=\"\"> <img width=\"100\" src=\"https://a.ilovecoding.org/img/_blogs/1492011231_facebook_circle_color.png\" alt=\"\"> <img width=\"100\" src=\"https://a.ilovecoding.org/img/_blogs/YouTube-logo-full_color.png\" alt=\"\"> <img width=\"100\" src=\"https://a.ilovecoding.org/img/_blogs/Google_icon_2015.png\" alt=\"\"> <img width=\"100\" src=\"https://a.ilovecoding.org/img/_blogs/Google_Maps_Icon.png\" alt=\"\">\n</p>\n<p>Job Titles for Front-End Developers</p><ul>\n      <li>Front End Web Developer or Front End Engineer</li>\n      <li>Front-End JavaScript Developer</li>\n      <li>UI/UX designers</li>\n    </ul>\n\n<h2>What is Back-End Development?</h2>\n<p>Back-end Development refers to the server-side development where you are primarily focused on the functionality of the website and not the user interface. A back-end app powers the front-end application with data and security.</p><p>Consider you are in your twitter feeds. The Twitter front-end is responsible for showing you the feeds in a beautiful manner. The back-end, on the other hand is a software that gathers all the relevant feeds, just for you, and send it to the front-end to show.</p><p>This goes to show that a back-end is the data and security layer behind the front-end.</p><p>A back-end app would connect with one or more data sources to get its information. A data source could be a database, or another backend application.</p>\n<p>Back-End Technologies<br></p>\n<p>Backend apps can be built with any programming language. PHP, Java, C#, Python, Ruby. JavaScript; You name it.</p><p>If you are becoming a web developer, you already need to learn JavaScript for your front-end needs, it makes perfect sense that instead of learning a new programming language, we just use JavaScript for building our back-end application as well.</p><p>JavaScript originally was launched as a Front-End Programming language in 1995, but now with Node.js runtime, JavaScript can be easily used to build apps for the server as well.</p><p>In fact, Walmart, PayPal, Uber, LinkedIn, and countless other companies switched to using JavaScript on the server and saw tremendous performance gains.</p><p>Node.js<br></p>\n<p>Node.js is an open-source, cross-platform run-time environment for developing server-side applications. Node.js enables JavaScript to be run on the server.</p>\n<p>While using Node.js, you still write your normal JavaScript. Node.js just extends JavaScript‚Äôs capability to the back-end as well.</p>\n<p>With the help of Node.js, you can run JavaScript on the machine itself. By machine, I mean outside the browser. This means that now JavaScript can run on the browser as well as on the machine. JavaScript can now replace and compete with other programming languages such as Ruby, Python, Java, PHP etc.</p>\n<p>This drastically speeds up your learning curve and immediately makes you a back-end developer.</p>\n<h3>Express.js</h3>\n<p>Express.js is a JavaScript library, that helps you build Web APIs. You see just the say jQuery makes life easier for Front-End Developers. Similarly, Express.js makes life easier for back-end developers building web APIs with Node.js<br></p><p>Express.js provides a few very easy to use features that will assist you to build your web APIs that can serve the front-end.</p><p>Express.js has a great community and is very adaptable. Express.js works pretty well if you want to enable authentication, and connect your app with a database.</p>\n<h3>MongoDB</h3>\n<p>MongoDB is a NoSQL database that uses a document-oriented data model. I know I just used a few big words - NoSQL and document-oriented. Simply said MongoDB is a database that does not organize its data like typical SQL-based databases. Data stored in MongoDB has a <a href=\"https://ilovecoding.org/lessons/json-what-is-json-and-how-to-use-it\">JSON</a>-like structure. This makes is very familiar for web developers to work with.</p>\n<h2>Make a Choice</h2>\n<p>Out of ‚ÄúFront End‚Äù, ‚ÄúBack End‚Äù or ‚ÄúFull Stack‚Äù Developer.</p>\n<p>Which type do you prefer?</p>\n<p><strong>User Interaction</strong>? Become a front end developer!</p>\n<p><strong>Data Interaction</strong>? Become a back-end developer!</p>\n<p>Knowing both<strong> Front-End + Back-End</strong> makes you a full stack developer!</p>\n<p>--</p>\n<p>It‚Äôs tremendously difficult to get a job without any experience. So start building projects, it‚Äôs useful to have a way to manage and publish your code. For that, create an account on GitHub.</p>\n<p><a href=\"http://github.com/\" rel=\"noreferrer nofollow\" data-qt-tooltip=\"github.com\">GitHub</a> is an online source code repository built on the Git technology. It enables you to store, manage, and publish your code. If you are a developer today, you must have a GitHub account.</p>\n<p>It's an endless learning process when it comes to web development, and you will always be learning new technologies. As you learn new technologies, put knowledge into practice and build something practical.</p>\n<p>We at <a href=\"https://ilovecoding.org\">iLoveCoding</a>, teach everything mentioned above. We teach beginners how to become a Front-End and Full-Stack JavaScript Developer. A person who knows both Front-End and Back-End. We empower you to create practical applications - Snake game, calculator app, To-do app, photo slider app, Song Search, App, Book Search App and much more.</p><p>Check out the <a href=\"https://ilovecoding.org/curriculum\">Full Curriculum here</a>.</p>\n<p>I hope you enjoyed reading this blog. If you have any question, leave your comments below.</p>","createdIso":{"$date":"2018-12-03T01:52:16.262Z"},"active":true,"updatedIso":{"$date":"2019-04-02T12:29:15.372Z"}}
{"_id":{"$oid":"5c5e33015614c60014c2a715"},"slug":"js-cheatsheet","title":"JavaScript Cheatsheet - Comprehensive PDF included","subTitle":"From basic to advanced concepts. ES6+, simple explanations, DOM API, Event loop, functions, array, object, Type and so much more. Everything explained in this 13 page JavaScript Cheatsheet","bodyContent":"<p><img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet-thumb-800.png\" alt=\"JavaScript Cheatsheet\" class=\"w-100\" /></p>\n<p><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Download JavaScript Cheatsheet</a> (Full 13-page PDF)</p>\n<p>JavaScript is the world's most misunderstood programming language. For the first decade after its inception, professionals didn't take it seriously. No one wanted to spend time on a language that was quickly thrown together in 10 days.</p>\n<p>Since JavaScript was ignored so much early on, developers did not take the time to learn it correctly which lead to them writing poor quality code, which then led to unexpected errors.</p>\n<p>Fast forward 10 more years and things are different now.</p>\n<p>This 13-page cheatsheet will take you from a beginner to advanced on the fundamentals of JavaScript. Giving you proper terminologies, and syntax of common constructs.</p>\n<p>They are easy to understand and Free for you to download and keep.</p>\n<h2>13 Page JavaScript Cheatsheet</h2>\n<p><strong>Note:</strong> This is NOT an exhaustive list of JavaScript documentation. For an <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference\" rel=\"noopener noreferrer\" target=\"_blank\">awesome JavaScript Reference, click here.</a></p>\n<p>Want to learn JavaScript? here's an <a href=\"/courses/js2\" rel=\"noopener noreferrer\" target=\"_blank\">awesome video course.</a></p>\n<p><img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet.png\" alt=\"JavaSCript Cheatsheet\" class=\"img-fluid\" /></p>\n<p><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/js-cheatsheet.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Download JavaScript Cheatsheet(Full 13-page PDF)</a> or Download individual pages:</p>\n<ul>\n  <li>Page 1: Basic Vocabulary, Seven Types, Objects <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet1.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet1.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet1.png\" alt=\"JavaScript Cheatsheet page 1\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 2: Functions - parameters, invocation, parameters, return and more. <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/src/mastersrc//js-cheatsheet2.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/ra//master/src/js-cheatsheet2.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet2.png\" alt=\"JavaScript Cheatsheet page 2\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 3: Vocabulary around variables and scope <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet3.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet3.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet3.png\" alt=\"JavaScript Cheatsheet page 3\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 4: Operators and coercion <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet4.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet4.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet4.png\" alt=\"JavaScript Cheatsheet page 4\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 5: Conditional Statement (if/switch/ternary) + Truthy Falsy <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet5.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet5.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet5.png\" alt=\"JavaScript Cheatsheet page 5\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 6: Loops - For, While, Do While <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet6.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet6.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet6.png\" alt=\"JavaScript Cheatsheet page 6\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 7: Ways to create a variable - var, let, const + Event Loop <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet7.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet7.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet7.png\" alt=\"JavaScript Cheatsheet page 7\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 8: Browser <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet8.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet8.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet8.png\" alt=\"JavaScript Cheatsheet page 8\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 9: DOM - Query, Create, Update, Delete, Events of DOM <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet9.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet9.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet9.png\" alt=\"JavaScript Cheatsheet page 9\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 10: Auto-inherited properties + built-in objects <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet10.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet10.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet10.png\" alt=\"JavaScript Cheatsheet page 10\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 11: Promise and Async Tasks <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet11.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet11.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet11.png\" alt=\"JavaScript Cheatsheet page 11\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 12: 'this' keyword and 3 scenarios to remember <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet12.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet12.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet12.png\" alt=\"JavaScript Cheatsheet page 12\" class=\"img-fluid\" /><br>\n<br>\n</li>\n  <li>Page 13: Constructors - Custom and built-in constructors <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet13.png\" rel=\"noopener noreferrer\" target=\"_blank\">PNG</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet13.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">PDF</a><br>\n<img src=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet13.png\" alt=\"JavaScript Cheatsheet page 13\" class=\"img-fluid\" /><br>\n<br>\n</li>\n</ul>\n<p><a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet\" rel=\"noopener noreferrer\" target=\"_blank\">Click here to Star on Github</a>, <a href=\"https://github.com/iLoveCodingOrg/javascript-cheatsheet/raw/master/src/js-cheatsheet.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">Download JavaScript Cheatsheet (Full 13-page PDF)</a></p>\n<h2>üëç Want to learn JavaScript?</h2>\n<p>Try the <a href=\"/courses/js2\" rel=\"noopener noreferrer\" target=\"_blank\">most comprehensive and detailed JavaScript video course</a> here on iLoveCoding.</p>\n<p>This course will teach JavaScript correctly, and give you plenty of examples to apply your knowledge to build real-world apps.</p>","createdIso":{"$date":"2019-02-09T01:55:13.917Z"},"updatedIso":{"$date":"2020-08-12T11:18:57.431Z"},"active":true}
{"_id":{"$oid":"5c048a10065efa010e52af30"},"slug":"new-experience","title":"The New Experience is Coming","subTitle":"Do you want to learn to code faster while avoiding overwhelm and confusion? Well, here you have it. You asked for it.","bodyContent":"<h2><b>IMPORTANT: </b>This post is out of date and is only here for the purpose of archieve</h2><p>I launched iLoveCoding in October 2014 to educate and transform the speed at which people learn to code.</p><p>I myself went from being afraid of coding, someone who thought programmers were mere geniuses, to becoming a confident developer. I then went on to land 3 job offers in just 6 months.</p><p>After serving 3,269 students in the past 23 months, we have fulfilled our goal to transform dozens of lives.</p><p>Now I want to take it a step further. I am narrowing down the people I&nbsp;allow to take part in iLoveCoding.</p><p>I made this decision just so I can dedicate more time to serving a few people in achieving their goal of becoming a confident Full-Stack Javascript Developer.</p><p>These select people will be shown the fast lane to becoming a Full-Stack Developer, such that they can confidently answer the trickiest questions in a job interview.</p><p>I have been fortunate enough that I now no longer submit resumes. Recruiters frequently reach out to me inviting me for job interviews. I simply have more choices in my career. This makes me feel I am in control.</p><p>Simply said I am happier.</p><p>I want&nbsp;you to have the kind of success I have, and for that, I am dedicating my energy to only a few people so I can maximize their results and get them to the finish line.</p><p>With that said, here are the changes I am making&nbsp;(Effective Saturday, Oct 15th, 2016)</p><ol><li>iLoveCoding lessons and courses are limited to iLoveCoding Pro members only</li><li>iLoveCoding is going to accept only a limited number of new members to the community</li></ol><h3>Restructuring iLoveCoding experience</h3><p>I am restructuring the iLoveCoding learning experience.</p><p>This means that students will have a simple learning path to becoming a Full-Stack Javascript Developer.</p><p>The new students will be able to make Websites to the likes of Facebook; Apps to the likes of Instagram; TV apps to the likes of Netflix; Desktop Apps to the likes of Slack and more.</p><p>You will learn the same technology used by Airbnb, Netflix, Facebook, Walmart and LinkedIn to build their Websites, and Mobile Apps.</p><p>Doesn't that sound awesome? Imagine, it's going to be you making those apps. I am excited just talking about this; Imagine how great it's going to feel having that accomplishment.</p><p>The new structure of learning is going to be limited to new students:</p><ul><li>Current iLoveCoding Pro members will continue to enjoy their current price privileges</li><li>The new iLoveCoding Pro experience will cost $350. Monthly membership will no longer be offered</li><li>Members who join iLoveCoding Pro before Oct 15th, 2016 will enjoy the lower price for as long as they stay a member</li></ul><h3>How can you contribute?</h3><h4>Inspire The World With Your Success</h4><p>I want you to inspire the world. If you are a success story as a result of iLoveCoding training, email me your story at support@ilovecoding.org.</p><h4>What Do We Suck At? What Can We Improve?</h4><p>Tell me, talk to me, what can I&nbsp;do better? I am eager to give you the best.</p><p>What are your questions?</p><p>What are your concerns?</p><p>What are your motivations?</p><p>email me at support@ilovecoding.org</p><p>and you can be assured that I will respond back</p><p>Your well-wisher,<br>Aziz Ali</p>","createdIso":{"$date":"2018-12-03T01:42:40.872Z"},"active":false,"updatedIso":{"$date":"2019-04-02T23:37:48.006Z"}}
{"_id":{"$oid":"5c048b54065efa010e52af35"},"slug":"how-to-become-a-self-taught-developer","title":"How to become a Self-taught Developer in 2019?","subTitle":"Overcome your fear and Follow the Exact steps you need to become a Confident and Resourceful Self-Taught Developer who can solve any programming task","bodyContent":"<h3>Becoming a Self-Taught developer is the new trend (Stats included)</h3>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/productivity-1995786_1920.jpg\">\n<p>So you have decided to become a web developer but you don't know where to start?</p>\n<p>Are you overwhelmed with suggestions to learn a ton of programming languages and all its unnecessary details?</p>\n<p>Are you not sure what path to follow to become a confident and resourceful developer?</p>\n<p>If your answer is YES to the above then don't worry, I've got you covered! üòè</p>\n<h2>Why Self-Taught?</h2>\n<p>A computer degree is not required to enter the tech industry. According to the <a href=\"http://stackoverflow.com/insights/survey/2015\">StackOver Flow 2018 Survey</a>, 87% of respondents taught themselves a new programming-language / technology</p><p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/self-taught/self-taught2018.png\" alt=\"Stack Overflow Survey 2018 - Education\"> </p><p></p><p>It doesn't matter if you do not have a computer science degree. It doesn't matter if you have not written a single line of code in your life.</p>\n<p>I will give you the exact roadmap that you can follow and become a Self-Taught Web Developer<b>.</b></p>\n<p>If you are passionate about learning something, you can absolutely do it.</p>\n<h3>Let me ask you something - What is stopping you?</h3>\n<blockquote class=\"blockquote\">Don't let life discourage you; everyone who got where he is had to begin where he was - Richard L. Evans</blockquote>\n<h2>Tech Industry</h2>\n<p>Technology is changing the world. More and more people are learning programming skills and transforming their career to become the Web and Mobile app developer.</p>\n<p>There simply aren't enough developers out there who can fill the job space. When beginners start to learn to program to build something practical or build mobile apps, they get overwhelmed by so many programming languages out there and all the libraries, tools and frameworks that accompany it.<br></p>\n<p>You do not need to know it all, you simply need to know the right and important ones.</p>\n<p>I'll show you, how you can become a Web Developer without a Computer Science degree. So let's get started.</p>\n<h2>Learn Online üñ• üíª</h2>\n<p>Traditional education is slowly dying. Not everyone has time or money to spend on a four-year college degree for the knowledge that can be readily accessed online. Currently, the perfect resources to learn something are not books but online courses. (Books can be good add-on supplements)</p>\n<p>The first step in becoming a self-taught developer is to understand why do you want to become a web developer? what are your goals?</p>\n<p>If you don't know what programming language to learn, <a href=\"https://ilovecoding.org/courses/perfect-path\">here is a good starting point</a>.</p>\n<p>Doesn‚Äôt matter if you don‚Äôt have a computer science degree. You can learn about computer science and software development. There are great courses out there offered for free by <a href=\"http://online.stanford.edu/course/computer-science-101-self-paced\">Stanford</a>, <a href=\"http://cs50.tv/2016/fall/\">Harvard</a>, and <a href=\"https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00-introduction-to-computer-science-and-programming-fall-2008/\">MIT</a>.</p>\n<p>While having a computer science degree isn't a prerequisite to becoming a web developer, it's good to know the computer fundamentals.</p>\n<p>Once you have the basic understanding of how the computers work, pick a technology and start learning. If you have never written a single line of code, start with <a href=\"https://ilovecoding.org/courses/htmlcss2\">Learning HTML &amp; CSS Correctly Course</a> (It's free). Spend around 90 minutes a day, writing code in a peaceful environment where you don't get distracted.</p>\n<p>Practice a lot as you learn new material. When it comes to programming, you're never gonna stop learning because it's a constant process of learning and improving.</p>\n<p>Once you're familiar with the HTML &amp; CSS, you can then move along and <a href=\"https://ilovecoding.org/pages/why-javascript\">choose JavaScript as your first programming language</a>. The reason I recommend <a href=\"http://blog.ilovecoding.org/why-javascript/\">JavaScript</a> is because you can accomplish both, Front-End and Back-End tasks with one programming language.</p>\n<h2>Learn by Doing üîß</h2>\n<p>You can read an endless amount of books and watch countless tutorials but if you don‚Äôt take action, you know nothing. Period.</p>\n<p>The ideology is that you learn by doing, by copying, by following along.</p>\n<p>You are not going to feel confident if you do not implement something practically that you learned via an online course. We humans, learn best by doing it.</p>\n<p>There's a saying that <em><strong>practice makes a man perfect</strong>, </em>right?</p>\n<p>Copy tutorials, read books, build practical applications and start teaching. When you start teaching, you have to internalize that topic very clearly so you can articulate it.</p>\n<p>In that process, you learn even more. You may know how to drive,üöó but to explain someone how to drive a car or how to balance a bike, if you‚Äôre a teacher, you have to learn even more details that you don‚Äôt even know about so you can internalize that thing and teach.</p>\n<p>Programming is all about solving a particular problem. Breaking apps into features, and features into problems and problems into small chunks. Once you break it down, you can logically build stuff.</p>\n<p>Since computers are highly logical and emotionless, our code must be super logical to explain the computer what to do.</p>\n<p>---</p><p>Join online communities like Stack Overflow and start engaging with the community. If you get stuck or have a question, you can post your problem there and someone from the community will help out with the solution.<br></p>\n<p>Engaging with the community will enable you on how to search for programming related problems. It will only happen when you write code all by yourself and make mistakes. That's how you're going to be confident because you will know how to tackle these challenges.</p>\n<h2>Overcome your fear</h2>\n<p>Overcome your fear of not being good enough. You are not going to be a \"Perfect developer\". You will never who knows EVERYTHING there is to learn or master. Even the most experienced programmers fail and face challenges even after 20 years of experience.</p>\n<p>Get out and meet web developers; Go to meetups and hackathon, the website I recommend for this is <a href=\"http://www.meetup.com/\" rel=\"noreferrer nofollow\" data-qt-tooltip=\"meetup.com\" data-tooltip=\"attached\">Meetup.com</a></p>\n<h2>Build something practical that you can be proud of üòè</h2>\n<p>Build something meaningful: once you become comfortable enough with technology, try to come up with a project idea where you get to implement whatever you are learning.</p>\n<p>For example, you can build a blog website for a client, you can create a photo slider, to-do app or a fun game or some fancy web features like a hover effect or unlimited scrolling, etc.</p>\n<p>Create an account on Github and publish your projects, share with the community and get their feedback. Once you have enough projects under your belt, you can start applying for jobs and showcase your projects.</p>\n<h2>Pros and cons of being a self-taught developer?</h2>\n<p>A lot of good developers are self-taught. And the reason for that is that if somebody has the motivation to learn anything with their own will and freedom and they use their free time and they put their effort without any supervision or answers handed to them, that person by design has the motivation and willingness to make it.</p>\n<p>When you do not have a teacher, you make your own structure. And then you understand how things work better because you're figuring it out.</p>\n<p>A self-taught developer will spend more time figuring out the answers because he or she does not have readily available answers.</p>\n<p>And the process through which a self-taught developer goes through to teach and clarify himself/herself on a particular concept, that process makes him better.</p>\n<p>So for example, if you're trying to figure out \"how to loop through an array\" you will research, you will try three things and they will not work but the fourth thing will work. This way you have 4x the experience on what works and what does not.</p>\n<p>And if you go one step further, you will also know why something doesn't work.</p>\n<p>That's why at the end of a day, a self-taught developer is much more proficient just by the design of his training.</p><p>A little bit of guidance can speed up your learning. That is why we created iLoveCoding. Check out the <a href=\"https://ilovecoding.org/curriculum\">Full Curriculum of iLoveCoding</a>&nbsp;where you learn all the technical skill to think and build like a ninja software developer.</p>\n<p>I hope you enjoyed reading this blog. If you have any question, feel free to leave your comments below. I‚Äôll talk to you in the comments.</p>","createdIso":{"$date":"2018-12-03T01:48:04.174Z"},"active":true,"updatedIso":{"$date":"2019-04-02T21:54:36.027Z"}}
{"_id":{"$oid":"5c048ad0065efa010e52af33"},"slug":"world-of-software-development","title":"Discover the World of Software Development","subTitle":"Discover the 9 major kinds of software developers, and find what kind of work each developer does. Plus, a simple roadmap to learn Software Development, the way I did.","bodyContent":"<div class=\"video\"><iframe src=\"https://player.vimeo.com/video/197482455?title=0&amp;byline=0&amp;portrait=0\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n\n<div style=\"background-color: yellow; text-align: center;\"><strong>What did you think of this video?</strong><em><span style=\"text-decoration-line: underline;\"><strong><br></strong></span></em><span style=\"text-decoration-line: underline;\">Comment below</span></div>\n\n<p>&nbsp;</p>\n\n<h2>Video Transcript, Enjoy :-)</h2>\n<p>Hello and welcome to another episode of iLoveCoding. In this lesson, I will give you the map to the world of Software Development.</p>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/computer-1873831.png\"></p>\n<p>In this map, I will show the nine main areas of software development and give you the concrete examples on what kind of work each software developer does.</p>\n<p>Once you've learned about these nine areas, one or two things will happen; either you will clearly know which area you are most interested in and want to pursue or you will need guidance to pick an area to pursue.</p>\n<p>If you are a person from the second group, continue reading and I will recommend you the area of development you should focus on.</p>\n<p>Plus, I will give you the roadmap, the exact steps to take to learn how to code.</p>\n<h3><strong>A fair Warning:</strong></h3>\n<p>No one area is better than the other. People who say that this kind of development is better than the other are either junior people, biased or simply ignorant.</p>\n<p>So let's get started!</p>\n<h3>Language Compilers Dev</h3>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/software-development.png\">Number 1 on the list is <strong>language or compilers developer</strong>. These are like linguist of the programming world. Just like in linguist, a person works on the language, similarly, in the programming world, there are developers who actually create languages. Those are language or compilers developers. These constitute do about 1% of all developers.</p>\n<h3>Embedded System Developers</h3>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/software-development1.png\">Next on the list are <strong>Embedded System Developers</strong>. These are like 3% of developers on earth and they work with hardware developers, hardware manufacturers or hardware creators and write low-level code that operates the hardware.</p>\n<p>So think about raspberry pi or ATM chips sets, motherboards and different devices. Your keychain for your car, the computer chips for your TV, they‚Äôre software that are on those chips. These are the developers who create that.</p>\n<h3>OS developers</h3>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/software-development2.png\">Next, there are <strong>OS developers</strong>, people who create operating systems like your Mac operating system or your windows operating system or Linus operating system and so forth.</p>\n<p>These also constitute to around 3% of developers.</p>\n<h3>Data Science</h3>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/software-development3.png\">Next in line are <strong>Data Scientists</strong> or <strong>Data Science Developers</strong>. These are developers who work in technology such as Python to make data models or artificial intelligence models that can predict certain things. So for instance ‚Äì YouTube recommends you different videos based on your usage. Same with Twitter, same with Facebook, they will show you a feed. Instagram probably has the same thing.</p>\n<p>This is one particular example where data scientists are developers who take a bunch of data, your usage usages and then create predictive models or models of intelligence that can predict certain things that you may like and so forth.</p>\n<p>This is where things are going towards artificial intelligence in the future.</p>\n<h3>Video Games</h3>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/software-development4.png\">Next in line are Video Games developers. This probably needs no introduction. These constitute to around 8% of software developers who create video games. When I say video games, I really mean the advanced video games that you play on your console or your computer which has all kinds of different graphics.</p>\n<p>Video game developers usually work on a framework that they pick or they either will create a framework based on which they can create these kinds of advanced graphics and these interactions of video games.</p>\n<h3>Dev Ops</h3>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/software-development5.png\">Next in line are <strong>Dev Ops</strong>, which is a newer name for system administrators. These kinds of developers write mini scripts or different smaller pieces of code that help to maintain a particular developing environment.</p>\n<p>So let‚Äôs say you have a web application some kind of system administrator or dev ops is managing different machines in which the software application is running and the way its deployed throughout the internet.</p>\n<p>The cloud management of the different service, how it‚Äôs deployed, how the backups happen and the stuff like that.</p>\n<p>So they manage the workflow of the application deployed to a particular environment. Most of the time they‚Äôre not actively developing, they do development probably 10 to 20% of the time but most of the time they‚Äôre managing the process of the application infrastructure.</p>\n<p>Dev ops constitute to around 11% of the developers.</p>\n<h3>Desktop Apps</h3>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/software-development6.png\">Then we have <strong>Desktop Apps</strong>, these are developers who make applications like Adobe Photoshop or the Mac calendar and the applications that run on your desktop for Windows, Linux or Mac computers.</p>\n<h3>Mobile Apps Developers</h3>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/software-development7.png\"></p>\n<p>Next we have <strong>Mobile Apps</strong> <strong>Developers</strong>, who of course make applications for android, iOS and windows phone. These developers will typically work on technologies specific to; Let‚Äôs say if there are Android developers, they will work with Java as a programming language and their toolsets that Google provides for android development, or they‚Äôre going to use either Swift programming language or Objective-C to code in for iOS.</p>\n<p>But lately, they‚Äôre using web stack which we are going to talk in more detail later on. Which actually helps them use one particular technology and still make applications for multiple platforms.</p>\n<p>Mobile app developers constitute to around 20% of the web developers on the planet.</p>\n<h3>Web Apps (Front-End &amp; Back-End Development)</h3>\n<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/software-development8.png\"></p>\n<p>Finally, the biggest chunks of development happen in the web apps space. So there are websites like Google, Facebook, Quora, Twitter, iLoveCoding or Youtube any kind of website or web app is built by these developers.</p>\n<p>Which constitute to around 35% of the developers.</p>\n<p>Web application developers are split into two major components. There are Front-End developers who create the look, feel and interactions of a website. So let‚Äôs say you go to a website like iLoveCoding.org or Google so the interactions on what happens when you click a button, what the look and feel of the website looks like is made by a front-end developer.</p>\n<p>A back-end developer, on the other hand, is responsible for what happens with the background processes when you actually, make the interaction with the front-end.</p>\n<p>So let‚Äôs say you‚Äôre on iLoveCoding and you click on the login button, and developers are going to take your username and password and send it to the back-end, the back-end developer is then responsible to make sure that the user and passwords are actually correct users and passwords and if it‚Äôs correct, it‚Äôs going to validate that and then send the message to the front-end and say ‚Äúhey, yes the information was correct, do whatever you want to do with it‚Äù and the front-end developer is going to say ‚Äúokay if it‚Äôs correct then I‚Äôm going to redirect them to a success message, or a home page or account management or whatever‚Äù</p>\n<p>So that is how the front-end part of the web developers and the back-end developers work together to build a successful application. If you know both of these skills, you are considered a full-stack developer who can work on the back-end as well on the front-end of the website.</p>\n<p><strong>Disclaimer</strong>: I am not an expert on all of these areas of software development. In fact, I‚Äôm in the world of web and mobile development. I know a little bit of desktop and dev ops as well.</p>\n<p>Overall, I can do professionally about 78% of all development. If your interest lies in any of the other areas like video games, data science, OS, embedded system or language compilers I am not the right person to give you an advice.</p>\n<p>But if you want to build practical web and mobile applications and get a fast return on your time, I recommend you to start from learn web development first, particularly front-end.</p>\n<p>Now if you want to learn the exact steps on how I learned web development and made apps for united airlines, CVS health and a multitude of other companies and some side projects on the side as well. You can join iLoveCoding and&nbsp;<a href=\"http://ilovecoding.org/\">Become a Full Stack JavaScript Developer.</a>&nbsp;Where I will show you exactly those steps.</p>\n<p>iLoveCoding is the simplest, most effective path to front-end &amp; full-stack development.</p>\n<p>Thanks for reading, leave your comments below and let me know what you think.</p>","createdIso":{"$date":"2018-12-03T01:45:51.985Z"},"active":true,"updatedIso":{"$date":"2019-01-19T03:24:55.814Z"}}
{"_id":{"$oid":"5c039d235797d9001395f262"},"slug":"you-dont-have-to-memorize-everything-when-it-comes-to-programming","title":"You don‚Äôt have to memorize everything when it comes to programming","subTitle":"Good programmers do not waste their time memorizing everything. They are good at knowing the concepts and reading the documentation and googling correctly to fill in the blanks","bodyContent":"<p><img src=\"https://a.ilovecoding.org/img/_blogs/tirza-van-dijk-83736.jpg\" alt=\"\" class=\"img-fluid\" /></p>\n<p>A lot of beginners ask this question. Do developers memorize everything? Do they memorize the whole programming language and the documentation? Do I need to remember everything to be considered as a professional developer?</p>\n<p>The answer to all of these is a big NO</p>\n<p>There is absolutely no memorization required as a Software Developer. Period.</p>\n<p>We live in an era where you can look up nearly any piece of information right from your computer or smartphone.</p>\n<blockquote>Never memorize what you can look up in a book ‚Äì Einstein</blockquote>\n<p>This quotation from Albert Einstein is even more relevant today than it was before.<img src=\"https://a.ilovecoding.org/img/_blogs/You-don‚Äôt-have-to-memorize-everything-when-it-comes-to-Programming.png\" alt=\"\" class=\"img-fluid\" /></p>\n<p>In his time, there were books but nowadays, we have the internet. You can literally find any information on the internet easily.<br>\n</p>\n<p>You really shouldn‚Äôt waste time committing details to memory when you really should be remembering the bigger picture and understanding the important concepts.</p>\n<p>The most important concepts will stick in your mind because you use them over and over, and the more enigmatic ones will remain forever stored on the internet, do a quick google search anytime you need them.</p>\n<p>The #1 most used resource of a developer is.... <a href=\"http://Google.com\" rel=\"nofollow\">Google.com</a></p>\n<p>Yes, it's normal for developers to google information in the midst of coding their apps. Its as normal is drinking coffee.</p>\n<p>Having said that, to pass the interview, you must practice what you learn. Practice it enough that you are able to articulate your knowledge to prove your competence. It's not about memorization, it's about how well you know something.</p>\n<p>Below is the guide on what you should memorize the main concepts of HTML, CSS, and JavaScript:</p>\n<h3>HTMLüîß</h3>\n<p>For HTML, you should be familiar with 25 to 30 elements.</p>\n<p>Here‚Äôs a great <a href=\"https://ilovecoding.org/courses/htmlcss2\">starting point</a> to get you familiar with the most common HTML &amp; CSS elements.</p>\n<p>In HTML, learn the key elements to build a web page; start small and implement your learning. Know how the form element works, once you know all of the ins and outs of the HTML form elements, repeat the process with other tags.</p>\n<p>You should know the basic tags you‚Äôll be using on a daily basis like; body, div, head, p, ul, li, h1 - h6, span, strong, em, table,&nbsp;etc. These elements are the fundamentals you should really know.</p>\n<p>You should know how to write the HTML5 doctype. Also how to write a script tag for inline JavaScript and including a script file.</p>\n<h3>CSS üé®</h3>\n<p>You should know how to change font size, color, margin, padding, and width. You should know clearly how to float an element using float left or right, and how to clear afloat.</p>\n<p>You should know the difference between; em, px, rem, and %. You should also know how to write a basic media query if you want your website or application to be responsive across multiple platforms.</p>\n<p>It‚Äôs totally okay if you don‚Äôt know the half-a-dozen different elements of HTML and properties of CSS. If you need any help, there‚Äôs always Google</p>\n<h3>JavaScript üíª</h3>\n<p>You should know how to query the DOM without relying on any library.</p>\n<p>You should know the basic console commands</p>\n<ul>\n  <li>console.log</li>\n  <li>console.error</li>\n  <li>console.dir(object)</li>\n  <li>copy(string)</li>\n  <li>console.groupEnd</li>\n  <li>console.timeEnd(label)</li>\n  <li>console.groupCollapsed</li>\n  <li>console.time(label)</li>\n  <li>console.group(title)</li>\n</ul>\n<p>You should know the important concepts such as loops, if-else statements, objects, functions, arrays.</p>\n<p>Here‚Äôs an in-depth <a href=\"https://ilovecoding.org/courses/js2\">JavaScript Course</a> you can go through and master the fundamentals.</p>\n<h3>Continuous Learning</h3>\n<p>When it comes to programming, there‚Äôs never going to be a point at which you can say ‚ÄúI have learned and mastered everything‚Äù in a programming language.</p>\n<p>But there will be a point at which you will feel comfortable. You will no longer panic. If something new shows up, you will feel comfortable looking it up and figuring it out.</p>\n<p>All you have to do is to continue to learn and practice.</p>\n<p>P.S. If you are just starting out, you can <a href=\"https://ilovecoding.org/pricing\">Become a Full-Stack JavaScript Developer</a> by following the exact techniques and roadmap that Aziz Ali, founder of <a href=\"https://ilovecoding.org\">ILoveCoding</a>, used to become an expert in the field.</p>\n<p>I hope you enjoyed reading this blog. If you have any questions, leave your comments below.</p>\n<p><img alt=\"Ameer Abbas\" src=\"https://secure.gravatar.com/avatar/1cc1c18e1d540186c90a0b509f6d77c9?s=120&amp;d=mm&amp;r=g\" class=\"img-fluid\" /></p>\n<h3>Author: Ameer Abbas</h3>\n<p>Web Developer - Learnaholic - Reader -- I'm passionate about Marketing, Growth Hacking, Business, and Web Technology. When I‚Äôm not working, I love reading books, learning new skills, and indulging my love for seeing new places. I love running, reading books, and business blogs.</p>","createdIso":{"$date":"2018-12-02T08:51:47.107Z"},"active":true,"updatedIso":{"$date":"2021-02-26T12:39:34.054Z"}}
{"_id":{"$oid":"5c07fe5193366400132168a0"},"slug":"feature-track-progress","title":"üåü New feature: Track your progress","subTitle":"Your lessons will be marked as complete automatically when you finish a lesson + Progress indicator.","bodyContent":"<h3>New Feature: Progress Tracking.</h3><p>The most awaited feature is here: Progress Tracking.</p><p>Now when you are going through your courses, iLoveCoding automatically marks lessons as complete, when you finish the video.</p><p></p><p></p><p>The completed lesson will be marked as complete in the background.&nbsp;</p><p></p><ol><li>You will see the check mark indicator next to the lesson in the <b>Course content</b> and in the header area of the respective lesson.<br></li><li>You will also see the % completion on the top right of the <b>Course content.</b></li></ol><img src=\"https://a.ilovecoding.org/img/features/track-progress.png\" alt=\"iLoveCoding Track Progress\">\n<h3>Geeky information for the developers:</h3><p><b>You:</b> Aziz, Aziz, Aziz, this is so great, I wonder why it took so long?</p><p><b>Aziz:</b> I know, sorry.</p><p><b>You:</b> How did you create this feature technically?</p><p><b>Aziz:</b> OMG, I am glad you asked, here is how:</p><p>So to understand this, you must understand that browsers have a feature called \"event\".</p><p>An event is a trigger that happens whenever some kind of activity happens in the browser.</p><p></p><ul><li>When a user clicks on something, that is an event</li><li>When the browser loads some information, that is an event</li><li>When a user scrolls, that is an event.</li><li>When a video starts playing, that is an event</li><li>When a video is finished, that is an event &lt;--ü•áGOLD HERE.</li></ul><p>So what I did was simple. I attached an \"event listener\" on the \"Finish Video\" event.&nbsp;</p><p>When the video finishes, I wrote some code that makes a call to the backend and marks the video as complete for that user.</p><p>Simple. Done. Not that difficult.</p><p>Now if you are not following all of this, you should really <a href=\"https://ilovecoding.org/pricing\">Join iLoveCoding</a> and go through the <a href=\"https://ilovecoding.org/courses/js2\">Learn JavaScript Correctly</a> course.</p><p>There I explain to you the concept of events, in-depth, and also show you how to make your&nbsp;app talk to a backend.</p><p></p><p>Oh, this is important: This feature only works for students who are logged in. Since the progress is tracked in the database, we must have the user logged in so we know which student actually completed the lesson.</p><p>Think about it, if the user is not logged in, how does a computer/app know who you are? Of course, there are some shady ways to track users, but we don't do that. We keep it <a href=\"https://en.wikipedia.org/wiki/Halal\" title=\"Clean, pure, lawful\">halal</a> around here.</p><p>That's it for now, tell me what you think in the <b>comments below</b>.&nbsp;<font color=\"#1772f2\">‚¨áÔ∏è</font></p><p></p><p></p><p></p>","createdIso":{"$date":"2018-12-05T16:35:29.769Z"},"active":true,"updatedIso":{"$date":"2019-04-02T11:35:52.23Z"}}
{"_id":{"$oid":"5c043805065efa010e52af2b"},"slug":"why-javascript","title":"Why JavaScript: If You Could Learn Just One Programming Language, It Should Be JavaScript","subTitle":"Most people quit learning to code because they get inundated with hundreds of options and dozens of conflicting advice on how and where to get started. If you are getting started, you must know some things about JavaScript and why it's your best bet to starting and thriving as a programmer.","bodyContent":"<div class=\"video\"><iframe src=\"https://player.vimeo.com/video/326670143?color=1772f2&amp;title=0&amp;byline=0&amp;portrait=0\" width=\"640\" height=\"480\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe></div>\n<p>Learning a new programming language is not a trivial ordeal. Before committing to a programming language you must consider if its the right fit for you.</p><p>In most cases, you want to learn software development so you can build your app ideas and launch your career as a software developer.&nbsp;<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 0.9rem;\">Here are a few reasons how&nbsp;JavaScript will serve you in the short term as well as in the long term.</span></p><h3>Get started with JavaScript in 5 minutes.</h3><p>When newbies get started with programming, most other programming languages require them to have a certain computer specification. When those requirements are met, special&nbsp;software has to be installed on the computer for the student to start writing code. Before a single line of code is written the student may have to configure the software in a certain way. After all the setup is done, then they can finally start writing code.</p><p>In most cases, the student has to write 5 lines of code for the program to do anything. Importing libraries, setting up classes, compile code, understand the console and getting familiar with it takes time. By the time the student is able to&nbsp;display anything on the screen, he/she has invested 3 hours into the setup.</p><p>JavaScript is different.&nbsp;You do not need to install any extra software.</p><ul><li>There is no mandatory setup</li><li>There is no mandatory configuration</li><li>There is no compiling of code</li></ul><p>You can get started with JavaScript within literally 5 minutes.&nbsp;<strong>You can get started with JavaScript faster than any other programming language on the planet.</strong></p><p>Since all computers come with a Web browser installed, and all browsers have JavaScript in it, you can write your JavaScript code and run it in the browser.</p><p>To run your JavaScript code outside the browser, you would need Node.js installled</p><h3>JavaScript Developers are highly paid</h3><p>For the longest time, JavaScript was not taken seriously. However,&nbsp;in the last decade, the language and the community has matured. As a result, companies both large and small are aggressively hiring JavaScript developers to work for them. The good news for you is that this skill is in demand, and there are not as many people who do JavaScript well.</p><p>This means that a&nbsp;JavaScript developer..</p><ul><li>is in high demand</li><li>can control the recruiting conversation</li><li>has more options as to which company he/she wants to work for</li><li>commands a higher salary</li></ul><h3>JavaScript is used everywhere</h3><p>Unlike other languages, JavaScript is used everywhere.&nbsp;JavaScript is the only language on earth that is used to build applications on every platform imaginable. You can build&nbsp;Web applications, Mobile applications, Desktop Applications, Kiosk Applications, TV Application; you name it, you can build it.</p><p>When it comes to building applications on the browser, JavaScript has NO competitors. If you are going to build a decent website, you must know and use JavaScript.</p><h3>JavaScript is one of the easier languages to learn</h3><p>JavaScript is one of the easier programming languages to learn, if learned correctly. JavaScript has a straightforward syntax that is highly logical to grasp. It has fewer components&nbsp;that make up the language, that means faster learning. JavaScript is a very flexible language, and although it has fewer components, less is more in this case.</p><h3>JavaScript is powerful</h3><p>Here are some of the ways companies are using JavaScript</p><ul><li><a href=\"http://united.com\">United Airlines</a> built its new Customer Checkin Kiosk app with JavaScript</li><li><a href=\"https://trello.com/\">Trello</a> made a project management app with JavaScript</li><li><a href=\"https://geekli.st/home\">Geekli.st</a> made a social media platform like Facebook with JavaScript</li><li><a href=\"https://ghost.org/\">Ghost</a> is a blogging platform built with JavaScript</li></ul><p>Since 99% of all top websites use JavaScript, there are countless examples of how and where JavaScript is used.</p><h3>JavaScript is free!</h3><p>JavaScript is an Open Source language. Which means that its source code is openly available to the public. It's free to use, that is that you don't have to pay anyone to use the language. JavaScript specifications are managed by a committee comprising of several companies, including all major browser vendors who contribute to the development of the language. Many of these companies are competitors, that means that there are checks and balances in place so the development happens for the greater good of the community.</p><h3>JavaScript is here to stay</h3><p>Since JavaScript has such high adoption and no competition, we can‚Äôt really foresee JavaScript going anywhere, anytime soon. If JavaScript were to be replaced, we must have some sort of competitor language in sight, right? Well, we don‚Äôt know of any. Even if there was a good alternative, it would take many years for millions of websites to migrate their code to a different language. And that competitor has to be good to really change the tide.</p><p>If you are serious about becoming a Front-End or Full-Stack JavaScript developer, consider <a href=\"https://ilovecoding.org/pricing\">joining iLoveCoding</a>. iLoveCoding takes you deep into <a href=\"https://ilovecoding.org/courses/js2\">learning JavaScript correctly</a> so you can build modern front-end, back-end, mobile, and full-stack applications.</p>","createdIso":{"$date":"2018-12-02T19:52:37.478Z"},"active":true,"updatedIso":{"$date":"2019-04-03T17:06:12.568Z"}}
{"_id":{"$oid":"5c048c15065efa010e52af38"},"slug":"javascript-is-the-future-of-web-development","title":"JavaScript is the Future of Web Development","subTitle":"99 percent of all top websites use Javascript. Since Javascript has such high adoption and no competition, we can‚Äôt really foresee Javascript going anywhere, anytime soon. ","bodyContent":"<p><img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/code-583073_1280.jpg\" alt=\"\">JavaScript was first launched in 1995. It's been over 24 years; and in recent years, JavaScript has become extremely popular among the software development industry. Currently, it's used by 99% of all top websites.<br></p><p></p>\n<p>JavaScript is the most popular programming language and the fastest growing programming language 6-years in a row (<a href=\"https://insights.stackoverflow.com/survey/2018/#technology\">Stack Overflow Stats</a>). Also, JavaScript is the only programming language understood by the browser.<br></p>\n<p style=\"text-align: center;\"><strong><em>Nowadays, JavaScript is used almost everywhere.</em></strong></p>\n<p>In addition to being the only cross-browser scripting language, it's also used as a back-end language (Thanks to Node.js).</p>\n<p>Node.js was released in 2009, you can see the trend below</p>\n<p><img class=\"\" src=\"https://a.ilovecoding.org/img/_blogs/main-qimg-b641db2d20e018b23e2335caa2ca5e91.png\" alt=\"\"></p>\n<p>Source: <a class=\"external_link\" href=\"http://redmonk.com/dberkholz/2014/05/02/github-language-trends-and-the-fragmenting-landscape/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" data-qt-tooltip=\"redmonk.com\" data-tooltip=\"attached\">GitHub language trends and the fragmenting landscape</a></p>\n<h2>Ajax</h2>\n<p><a href=\"https://ilovecoding.org/lessons/what-is-ajax-how-and-why-to-use-it-asynchronous-javascript-and-xml\">Ajax</a> uses JavaScript to reload certain portions of web pages without reloading the entire page. Pretty cool hun? üòé</p>\n<p>Ajax stands for Asynchronous JavaScript and XML. Ajax is not a technology but a technique which is used in web programming to transfer information over the internet. Websites and web apps using Ajax are faster to navigate than traditional ones.</p>\n<p>Sites and applications using AJAX technique: Gmail, Facebook, YouTube, Google and Google Maps, etc.</p>\n<p>\n  <img class=\"\" width=\"100\" src=\"https://a.ilovecoding.org/img/_blogs/gmail.png\" alt=\"\"> <img class=\"\" width=\"100\" src=\"https://a.ilovecoding.org/img/_blogs/1492011231_facebook_circle_color.png\" alt=\"\"> <img class=\"\" width=\"100\" src=\"https://a.ilovecoding.org/img/_blogs/YouTube-logo-full_color.png\" alt=\"\"> <img class=\"\" width=\"100\" src=\"https://a.ilovecoding.org/img/_blogs/Google_icon_2015.png\" alt=\"\"> <img class=\"\" width=\"100\" src=\"https://a.ilovecoding.org/img/_blogs/Google_Maps_Icon.png\" alt=\"\"></p>\n<h2>jQuery</h2>\n<p class=\"desc ng-binding\">jQuery is a must know JavaScript library for every Front-end developer. jQuery makes you a better web developer.</p>\n<p>jQuery is a JavaScript library that is tremendously helpful to use when doing website design. A JavaScript library is a collection of several pre-coded features that a web designer would commonly use.</p>\n<h3>jQuery popularity</h3>\n<p>If you go to the website called <a href=\"http://builtwith.com/\">BuiltWith</a> you can find out what websites are using jQuery. If I type jQuery and hit enter and go to jQuery usage statistics you will see that according to Quantcast top 10k websites use jQuery.</p>\n\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/jquery-js-blog-1.png\" alt=\"\">\n<p><br></p>\n<img class=\"img-fluid\" src=\"https://a.ilovecoding.org/img/_blogs/jquery-js-blog1.png\" alt=\"\">\n<p>Microsoft, Amazon, Google, Dell, Bank of America and other popular websites use jQuery as well.</p>\n<h2>Node.js</h2>\n<p>Node.js is an open-source, cross-platform run-time environment for developing server-side web applications.</p>\n<p>JavaScript can now also be used as a server-side language through the Node.js framework, and in recent years the community has gained a lot of momentum.</p>\n<p><b>Note:</b> Node.js is not a platform, it's not a framework. Actually, Node JS is a run-time for JavaScript that allows you to run JavaScript on the machine itself. Historically speaking, JavaScript was designed for the browser. So you would create a website, User interactions, and all kinds of logic would be written in JavaScript and it would run in the browser only.</p>\n<p>But with the help of Node.js, you can run JavaScript on the machine. This means that now JavaScript can run on the browser as well as on the machine. JavaScript can now replace and compete with other programming languages such as Ruby, Python, Java, PHP, etc.</p>\n<p>With Node.js, now you can build:<br></p>\n<ul>\n  <li>Back-End of any Website</li>\n  <li>Blogs</li><li>Survey App</li>\n  <li>Chat App</li>\n  <li>Social Media App</li>\n  <li>Web API</li>\n  <li>Data Processing apps</li>\n  <li>Shopping Cart</li>\n  <li>Game Engines</li>\n  <li>Desktop App</li>\n</ul>\n<p>PayPal, LinkedIn, Yahoo, Mozilla, Netflix, Uber, Groupon, GoDaddy, and eBay are some of the companies who use Node.js in a major way.</p>\n<p>There's no doubt JavaScript will do great in the future. More and more developers will learn JavaScript than any other language. One of the reasons is because Node.js is so successful.</p>\n<p>With the increasing usage of desktop, tablet, and smartphones, JavaScript, of course, has a very lustrous future. The advantage of JavaScript is that it's native to the web, and the web is everywhere.</p>\n<p>There are lots of frameworks and libraries developed with JavaScript: jQuery, Node, Angular, React, Meteor, backbone, ember, and much more. We will definitely see a lot more JavaScript apps in the near future.</p>\n<h3>Final Thoughts</h3>\n<p>JavaScript will remain a very popular language for years to come. it would be suicide to your career as a web developer not to know it. It's foreseeable that JavaScript will not only conserve but extend its hold of the overall software industry during the coming years.</p>\n<p>Here is a <a href=\"https://ilovecoding.org/curriculum\">full curriculum</a> to becoming a front-end and full-stack JavaScript developer. iLoveCoding takes you from zero to giving you all the technical skills to becoming a job-ready software engineer.</p>\n<p>I hope you enjoyed reading this blog. If you have any question, leave your comments below.</p>","createdIso":{"$date":"2018-12-03T01:51:17.652Z"},"active":true,"updatedIso":{"$date":"2019-04-02T18:49:10.568Z"}}
{"_id":{"$oid":"5fd0e55abfd02000170d02f0"},"slug":"learn-html","title":"Learning HTML: Guide to learn HTML from Scratch","subTitle":"In this brief guide I‚Äôd answer your frequently asked questions related to HTML","bodyContent":"        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/learnhtml/html-intro.jpg\" alt=\"HTML Introduction\" />\n        <p>\n            People who are just starting with HTML have several questions. For example, What is HTML, how long will it\n            take\n            to learn HTML? Etc. Our Google Search Console reveals that many people land on our site to find answers to\n            these\n            questions.\n\n        </p>\n        <p>\n            I have come up with this handy guide, where I have answered the most frequently asked questions related to\n            HTML.\n            Let‚Äôs start right away.\n        </p>\n        <h2>What is HTML?</h2>\n        <p>\n            HTML stands for Hypertext Markup Language. It is a set of codes that help layout the structure of the web\n            page.\n            For example, it tells the web browser to make some text bold, underline it, or break it into paragraphs.\n            With\n            HTML you can create buttons, input fields for forms, insert videos and images, and even link two HTML pages.\n\n        </p>\n\n        <p>\n            HTML code looks like this:\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/learnhtml/how-html-looks.jpg\" alt=\"How HTML looks\" />\n\n        <p>\n            HTML emerged in the early days (1990) of the World Wide Web. Tim Berners-Lee proposed a repository of\n            documents\n            connected with links called Hypertext. HTML stands for Hyper Text Markup Language. It is a set of code that\n            tells the browser how a web page would look like. For example, you can make some text bold, italics, or\n            underlined. You can make headings of various sizes. You can insert images and other formatting options to\n            make\n            the web page look presentable.\n\n        </p>\n        <h2>Where is HTML used?</h2>\n        <p>\n            HTML is used to make the web pages of any website. All websites and all the webpages of the world are\n            created\n            with HTML. The Facebook feed, the Google Search results, the Amazon Store, and this very blog you are\n            reading;\n            all the pages are made with HTML. No HTML - No webpages.\n\n        </p>\n        <p>\n            HTML is a markup language, meaning its sole purpose is to layout web pages. HTML is combined with two other\n            technologies, namely CSS and JavaScript, to make stylish website design and advanced website features.\n\n        </p>\n        <h2>How easy is HTML to learn?</h2>\n        <p>\n            HTML is a straightforward language. The syntax is easy. Once you get the hang of the syntax, you can easily\n            repeat it. You can learn HTML tags and elements quickly, and it would take you little time to internalize it\n            fully.\n        </p>\n\n        <h2>How long does it take to learn HTML?</h2>\n        <p>It depends upon the capabilities of the learner. You can start dabbling with HTML in a matter of hours, and if you practice daily, you can get comfortable with it in a couple of months. We, at iLoveCoding, provide a newbie-friendly free <a href=\"https://ilovecoding.org/courses/htmlcss2\">HTML & CSS Correctly course</a>.\n\n        </p>\n        <a href=\"https://ilovecoding.org/courses/htmlcss2\"><img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/learnhtml/html-course.jpg\" alt=\"iLoveCoding HTML&CSS Course\" /></a>\n        <p>It is a comprehensive course and covers the subject thoroughly. The course duration is two weeks. However, a  month of practice is required to make you use HTML proficiently.\n        </p>\n        <h2>How to learn HTML? </h2>\n        <p>\n            There are tons of resources available to teach you HTML. You can read books or watch YouTube tutorials.\n            However,\n            some of these books are overwhelming, while others have very thin content. Similarly, the YouTube tutorials\n            are\n            not in a logical order, which can disorient the beginners. iLoveCoding has prepared a screen-cast video\n            course\n            that is relevant and logical. Click <a href=\"https://ilovecoding.org/courses/htmlcss2\">here</a> to learn\n            more.\n        </p>\n        <h2>\n            Which tools do you need for the HTML?\n        </h2>\n        <p>\n            You need two <a href=\"https://ilovecoding.org/courses/htmlcss2/lessons/tools-html-css-course\">tools</a> to\n            start\n            learning HTML. First, you need a modern web browser such as Google Chrome. You can use any browser; however,\n            Chrome has the edge over other browsers. It provides several developer tools that are better than those in\n            different browsers.\n        </p>\n        <p>\n            Secondly, you need a text editor. The text editor or code editor is a software where you write the code. VS\n            Code, Notepad++, Atom, Sublime Text are a few popular text editors.\n        </p>\n        <h2>\n            What's the best text editor?\n        </h2>\n        <p>\n            Lots of text editors are available in the market, both paid and free. We recommend using the VS Code. It is\n            a\n            text editor from Microsoft, and it is free. It is robust and intuitive. Some other text editors are Atom,\n            Sublime, and Notepad++.\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/learnhtml/vs-code.jpg\" alt=\"VS Code Editor\" />\n        <h2>\n            Can I use Notepad for HTML coding?\n        </h2>\n        <p>\n            Yes, you can use Notepad to write HTML code. The process is straightforward. After typing the code in\n            Notepad,\n            save the file with .html extension. Open that file with Chrome, and you are there!\n        </p>\n        <h2>How can I learn HTML and CSS for free?</h2>\n        <p>\n            You can join iLoveCoding‚Äôs free HTML & CSS course here. It is free, and we would keep it free forever. It is\n            a\n            screen-cast <a href=\"https://ilovecoding.org/courses/htmlcss2\">video course</a> with no technical jargon.\n            Aziz\n            is known to use simple language to explain concepts. Plus, you get an HTML & CSS cheat sheet and sample\n            projects\n            along the way.\n        </p>\n        <h2>\n            How to host an HTML website?\n        </h2>\n        <p>\n            The process is the same as buying hosting for other websites. All you need to do is purchase the domain name\n            and\n            hosting. Sometimes, some companies provide both the domain and hosting. While other times, you may buy them\n            separately. Although there are many services out there, Netlify.com is a great service to let you host\n            websites\n            for free. iLoveCoding.org is hosted with Netlify as well; And we love it.\n        </p>\n        <h2>\n            Is HTML worth learning?\n        </h2>\n        <p>\n            Yes! HTML is mandatory for becoming a web developer. There is no website in the world that doesn‚Äôt use HTML.\n            HTML, along with CSS and JavaScript, make a trio that is essential to the web.\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/learnhtml/frontend-trio.jpg\" alt=\"Frontend trio HTML CSS JS\" />\n        <h2>\n            By learning HTML and CSS, how can I earn money?\n        </h2>\n        <p>\n            You can make basic websites with HTML and CSS. You can use HTML to link pages so the website can be browsed\n            around. You can use CSS to make the website look pretty and modern. To add more capability to the website\n            you\n            can use JavaScript to add integrations, maps, image galleries and all sorts of features.\n        </p>\n        <p>\n            You can develop sites for businesses that only want to have a web presence and are not interested in showy\n            websites and frills. Similarly, you can get small HTML projects on outsourcing/freelancing websites.\n\n        </p>\n        <p>\n            To call yourself a frontend developer and have a decent job, you need to learn a programming language such\n            as\n            JavaScript. Find the road map to become a frontend developer <a\n                href=\"https://ilovecoding.org/curriculum\">here</a>.\n        </p>\n        <h2>\n            What is the difference between HTML and HTML5?\n        </h2>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/learnhtml/html5.jpg\" alt=\"What is HTML5?\" />\n        <p>\n            HTML 5 is the latest version of HTML. The HTML's initial versions were very basic. With subsequent versions,\n            its\n            capabilities increased. Now HTML supports audio and video natively. It uses a database to store offline\n            data. It\n            supports graphics as well. Find more differences <a\n                href=\"https://www.geeksforgeeks.org/difference-between-html-and-html5/\">here</a>.\n\n        </p>\n        <h2>\n            Is HTML important for SEO?\n        </h2>\n        <p>\n            Yes, HTML is very <a href=\"https://ilovecoding.org/courses/htmlcss2/lessons/meta-elements-continued\">crucial\n                to\n                SEO</a>. Search engines consider many meta tags for ranking the website on search pages such as\n            description,\n            keyword, title, header, robot, and alt tags.\n        </p>\n        <h2>\n            Can I use videos and sound on a web page with HTML?\n        </h2>\n        <p>\n            Yes, besides using images, you can insert<a\n                href=\"https://ilovecoding.org/courses/htmlcss2/lessons/video-audio\">videos and sound</a> on web pages\n            with\n            HTML using video and audio elements. With HTML5, you can use several other multimedia attributes such as the\n            control to add a pause, play, and repeat options. Find more on this free <a\n                href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\">resource</a> or check iLoveCoding‚Äôs\n            HTML &\n            CSS course.\n\n        </p>\n        <h2>\n            How to comment in HTML?\n        </h2>\n        <p>\n            Like programming languages, you can add your comments within the code to clarify, instruct, and track. It\n            comes\n            handy when several people are working on the same project. Similarly, it is a useful tool if you go back to\n            the\n            code file after some time. It would refresh your memory.\n\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/learnhtml/comment-in-html.jpg\" alt=\"HTML Comments\" />\n        <h2>\n            What are the HTML elements and tags?\n        </h2>\n        <p>\n            An <a href=\"https://ilovecoding.org/courses/htmlcss2/lessons/common-elements-cheatsheet\">element</a> is an\n            individual component of an HTML file. The example of elements is a title tags in angle brackets that\n            represents the title of the web\n            page.\n\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/learnhtml/html-elements.jpg\" alt=\"HTML Elements\"  />\n        <p>\n            Tags, on the other hand, show the start and end of an element. For example,\n            p in angle brackets is used for a paragraph.The tag with forward slash shows the end of an element. In the\n            image above 'h1' and 'p' are the opening\n            and closing tags.\n        <h2>\n            What next after learning HTML and CSS?\n        </h2>\n        <p>\n            The next logical step after finishing HTML and CSS is to learn JavaScript. JS adds interactivity to the\n            website.\n            Similarly, you can learn JavaScript to become a full-stack developer. Find out how you can become a\n            confident\n            full-stack developer <a href=\"https://ilovecoding.org/curriculum\">here</a>.\n\n        </p>\n        <h2>\n            What should I do to practice my skills?\n        </h2>\n        <p>\n            The best way to practice any language is to build practice projects. You can create your portfolio website.\n            Similarly, you can find people who want to have a simple website. You can earn some money by freelancing\n            while\n            practicing your skills.\n\n        </p>\n        <h2>\n            Conclusion\n        </h2>\n        <p>\n            HTML is the backbone of the web. No website can exist without HTML. If you want to become a web developer or\n            a\n            front-end developer, you must learn HTML. The popularity of HTML will continue to grow. Now, it is your\n            turn.\n            Did you find the answers mentioned above helpful? Tell us in the comments or read <a\n                href=\"https://ilovecoding.org/blog\"> previous blog posts</a>.\n\n        </p>","createdIso":{"$date":"2020-12-09T14:55:22.829Z"},"updatedIso":{"$date":"2020-12-09T15:16:47.35Z"},"active":true}
{"_id":{"$oid":"5fd3c11a7b333c00170f9735"},"slug":"design-101","title":"Design 101 for Coders and Programmers","subTitle":"Design Principles explained in an easy to understand guide for non-designers specially programmers and\n            coders.","bodyContent":"<img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/design-items-intro.jpg\" alt=\"Design items intro\" />\n\n        <p>When it comes to web design, programmers think it is a graphic designer‚Äôs job. The situation gets trickier\n            when there is a clash of ideas on a design matter between a designer and developer. The project manager has\n            to step in to resolve the issue.\n        </p>\n        <h2>Why learn web design?</h2>\n        <p>\n            Not all can afford the luxury of design and developer teams, especially small companies where people have to\n            wear multiple hats. The programmer in this situation has to do web design as well. It is especially true for\n            single-person businesses such as freelancing and entrepreneurship.\n\n        </p>\n        <h2>Learn design to create UX and UI</h2>\n        \n        <p>\n            User Experience or <a href=\"https://en.wikipedia.org/wiki/User_experience\">UX Design </a> or <a\n                href=\"https://en.wikipedia.org/wiki/User_interface_design\"> User Interface</a> (UI) Design are\n            interrelated concepts that have gained much\n            importance in recent years. UI is a subset of UX; the primary aim is to make users experience pleasant so\n            they become permanent users and eventually customers.\n        </p>\n        <h2>Design concepts are easy to understand</h2>\n        <p>\n            Basic design principles are quite easy to grasp and implement. All web developers, and programmers, in\n            general, should spend some time learning the basics. Learning them will help you appreciate the designers‚Äô\n            point of view and share holistic insight for your next project.\n\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/desing-elements.jpg\" alt=\"Desing Elements\" />\n        <figcaption>Fig 1. Design Elements at a glance</figcaption>\n\n        <p>\n            If you are a <a href=\"https://ilovecoding.org/blog/roadmap\">front-end developer</a> and want to make cool\n            websites or a full-stack developer working on a\n            fantastic mobile or web app, then this article is for you. Similarly, if you are making some software and\n            developing its GUI, you need to implement some of the design principles mentioned here to make them popup\n            and impress the users.\n\n\n        </p>\n        <p>\n            I have enlisted the basics of design here. Let‚Äôs explore them one by one:\n\n        </p>\n        <h2>\n            Design Principles:\n        </h2>\n        <p>\n            Design principles are like a recipe for your favorite dish. While design elements are the ingredients that\n            make up the dish, design principles tell you how to use them. For example, if you are designing a webpage,\n            you can use the principle of contrast to highlight the text or bring attention to a particular object on the\n            page. Either you can make it bigger than the rest of the text or you can use the contrasting colors such as\n            the black font on white background, blue text on a yellow background, and vice versa.\n\n\n        </p>\n        <p>\n            Another example is news websites, they use different sizes of fonts which creates a visual hierarchy. The\n            user reads the biggest text (headline) first, then the bigger one (sub-headings), and finally the smaller\n            (the body of news).\n        </p>\n        <p>\n            I have enumerated the design principles in the following list:\n\n        </p>\n        <p>\n            <strong>Alignment:</strong> Almost everyone who has used a computer or used word processor must be familiar\n            with alignment. There are usually four options for alignment: right-aligned, left-aligned, center-aligned,\n            and justified.\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/alignment.jpg\" alt=\"alignment\">\n        <figcaption>Fig 2. An example of alignment.</figcaption>\n        <p>\n            Unaligned elements on a web page are the hallmark of amateur designers. The text and images on the web are\n            haphazardly put together without any alignment. Use the <a\n                href=\"https://www.w3schools.com/css/css_grid.asp\">grid in CSS</a> to align objects. It helps you align\n            elements in different rows and columns. Alignment creates an invisible wall, which makes the user absorb\n            information in a defined way. There is no excuse not to use it. So use it wisely.\n\n        </p>\n        <p>\n            <strong>Repetition:</strong> Simply put, it is consistent reuse of design elements such as lines, shapes,\n            colors to create unity and\n            consistency on a page or series of pages.\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/repetition.jpg\" alt=\"repetition\">\n        <figcaption>Fig 3. An example of repetition.</figcaption>\n        <p>\n            For example, the same elements repeated across on inner pages consistently shows that you are on the same\n            site. It also prompts users that a piece of particular information could be found in a specific place. For\n            example, the social media icons in the footer let users know that the icons would be in the footer on all\n            pages.\n\n        </p>\n        <p>\n            <strong>Hierarchy:</strong> It means emphasizing elements on a page in the order of importance. For example,\n            The bigger the font, the more attention they attract. You can use the <a\n                href=\"https://en.wikipedia.org/wiki/Visual_design_elements_and_principles#Hierarchy\">hierarchy</a> to\n            attract the attention of\n            users on a particular text/copy or action. For example, the subheadings let users skim the long pieces of\n            content.\n\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/hierarchy.jpg\" alt=\"Hierarchy\">\n        <figcaption>Fig 4. An example of Visual Hierarchy.</figcaption>\n\n        <p>\n            Check the advertisements on websites and magazines; they use it deliberately to attract attention to a\n            particular text/copy. Learn from them and use them in your web design. Another example is that if you want\n            someone to download an ebook, you should make the call-to-action/download button bold and more prominent,\n            having contrasting colors to the background.\n\n        </p>\n        <p>\n            <strong>Balance:</strong> You can achieve balance when you put visual elements in a fixed proportion. It\n            helps make the design of the entire page pleasant without jeopardizing other aspects. The absence of balance\n            will make some part of your page pop out while the rest will go into obscurity. Primarily <a\n                href=\"https://en.wikipedia.org/wiki/Visual_design_elements_and_principles#Types_of_balance_in_visual_design\">balance</a>\n            is\n            achieved using symmetry. However, its opposite (asymmetry) can sometimes be used to create balance.\n\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/balance.jpg\" alt=\"Visual Balance\">\n        <figcaption>Fig 5. An example of visual balace</figcaption>\n        <p>\n            For example, when creating a UI design, you may create a message box left-aligned. But if the rest of the\n            page is empty, it would disturb the balance. However, if you add a body of text on the right side, it would\n            create a delicate balance between the message box and the text column on the right.\n\n        </p>\n        <p>\n            <strong>Contrast:</strong> As its name implies, <a\n                href=\"https://en.wikipedia.org/wiki/Visual_design_elements_and_principles#Contrasts\">contrast</a> is\n            achieved if two contrasting design elements are used. The contrast is more pronounced in color use. The most\n            basic example is black font on a white or light background and vice versa.\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/contrast.jpg\" alt=\"contrast\">\n        <figcaption>Different kind of contrasts in design.</figcaption>\n\n        <p>\n            <strong>Color Theory:</strong> Absurd color use is the most notorious feature of programmers. They don‚Äôt\n            know which color goes with which, so they use it sporadically and generously. The thumb rule for color use\n            in web design or design of any sort is: Less is more! There is a concept called Color theory. All\n            programmers should know this concept. Stick to a couple of primary and secondary colors.\n\n\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/color theory.jpg\" alt=\"Color theory\">\n        <figcaption>Color theory is an important concept in Graphics Design.</figcaption>\n        <p>\n            Color theory states that there are 3 primary colors, i.e., red, green, and blue. They fall on opposite sides\n            of the color wheel. The color wheel is a circular arrangement of colors which shows the relationship between\n            primary, secondary, and tertiary colors.\n        </p>\n        <p>When primary colors are mixed together they form secondary colors. A mixture of blue and green produces cyan,\n            blue and red give magenta, and yellow (a mixture of green and red). And when different primary and secondary\n            colors are mixed, they form tertiary colors.\n        </p>\n        <p>\n            There are different color schemes that help you choose the colors, e.g., complementary, monochromatic,\n            analogous, split complementary, triadic, and tetradic. For example in complementary color schemes, you use\n            the colors falling on <a href=\"https://www.sessions.edu/color-calculator/\">opposite sides</a> of the color\n            wheel.\n        </p>\n\n        <p>\n            <strong>Harmony:</strong> It refers to the state when all elements and principles of design have been done\n            rightly without over or underuse. Make a checklist of design elements and principles and mark checks for\n            accomplished items. If you have all elements checked, then you are good to go, otherwise keep working on the\n            design.\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/harmony.jpg\" alt=\"Harmony in design\">\n        <figcaption>Harmony in design</figcaption>\n\n        <h2>Design Elements</h2>\n        <p>\n            Now let‚Äôs focus on design elements. These are the ingredients that actually make up the design. Let‚Äôs\n            explore them one-by-one.\n        </p>\n        <p>\n            <strong>1. Line:</strong> The line is the most basic but essential design ingredient. It is used to create\n            division between different design elements and focus your attention on a particular object or text.\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/line .jpg\" alt=\"design theory lines\">\n        <figcaption>Design element: Line</figcaption>\n        <p>\n            For example, the line divides content, headlines, and side panels. Notice how Microsoft Word and Google Docs\n            use lines to separate menus and sub-menus. It also creates a hierarchy. The essential elements are in the\n            first row. In the drop-down menu too, the related options are packaged together and separated by lines.\n\n\n        </p>\n        <p>\n            <strong>2. Shapes:</strong> We get shapes when the line is connected from end to end, e.g., square,\n            triangle, circle, rectangle, and polygon. Shapes add interest and energy to the design.\n\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/shapes.jpg\" alt=\"Shapes\">\n        <figcaption>Design elements: Shapes</figcaption>\n\n        <p>\n            Some shapes are synonymous with particular design elements, such as place holders are usually in squares and\n            rectangles. Buttons are almost rectangles. Profile images on Instagram are round.\n        </p>\n        <p>\n            <strong>3. Color:</strong> Color is the most powerful tool in the toolbox of a designer. It evokes emotions\n            and\n            responses, like no other elements. As a designer, you must know the concept of <a\n                href=\"https://www.verywellmind.com/color-psychology-2795824\">color psychology</a>, i.e., how\n            each color is associated with emotions. For example, red shows danger. However, it is also closely related\n            to love and passion. Cool colors exude calmness and clarity.\n\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/color-psychology.jpg\" alt=\"color psychology\">\n        <figcaption>Design elements: Colors</figcaption>\n        <p>\n            As mentioned earlier, you should also learn about color theory and color wheel. It will tell you about\n            primary, secondary, tertiary colors. You can learn about complementary and contrasting colors in color\n            theory. Blue and yellow are complementary colors, while black and white are contrasting colors.\n        </p>\n        <p>\n            <strong>4. Space:</strong> Space is the empty region in your design. It is also called negative space. It\n            lets\n            your design breathe. Many novices fill up all space on-screen with text or elements, which make the design\n            team smirk.\n\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/space.jpg\" alt=\"Space\">\n        <figcaption>Design elements: Space</figcaption>\n        <p>\n            To avoid their smirk and subtle sarcasm, learn how to use negative space. There is a ton of material\n            available on design elements, including <a\n                href=\"https://www.edgee.net/how-to-apply-the-7-elements-of-design-to-your-work-element-3-space/\">space</a>.\n            So learn it.\n\n        </p>\n        <p>\n            <strong>5. Texture:</strong> The texture is the look and feels of objects on the screen. It appears that you\n            can‚Äôt touch the elements on the screen, but the fact of the matter is that elements do exude texture. It\n            makes elements have an element of depth.\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/texture.jpg\" alt=\"texture\">\n        <figcaption>Design elements: Texture</figcaption>\n\n        <p>\n            <strong>6. Typography:</strong> Typography is as old as the printing machines. This art was born when the\n            first printing presses emerged in Europe. In a nutshell, it is the use of text or font in your design. Each\n            font evokes a different reaction from the reader, just like the colors. Primarily, the fonts are divided\n            into Serifs and San Serif. Serif fonts have edges and lines protruding from corners and edges. San serif is\n            without these frills and is less formal.\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/typography.jpg\" alt=\"typography\">\n        <figcaption>Design elements: Typography</figcaption>\n        <p>\n            Use the single font for your site or app according to its nature. If the website is a formal and technical,\n            serif and cursive fonts wouldn‚Äôt be a good choice. Its use also depends on the end-user. For example, fonts\n            for a mobile app must be legible on a small screen.\n        </p>\n        <p>\n            <strong>7. Size:</strong> Size or Scale is also a crucial element of design. It refers to the size of the\n            elements. For example, the bigger the font/text, the more important it will appear.\n        </p>\n        <img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/design101/size.jpg\" alt=\"size\">\n        <figcaption>Designg elements: Size or Scale</figcaption>\n        <p>\n            Similarly, size adds interest to the design. If all elements on the page are of the same size, you would\n            have a hard time grabbing users' attention.\n\n        </p>\n        <h2>Conclusion</h2>\n        <p>\n            Having a good sense of design is not optional for solopreneurs and freelancers. It is a make-or-break factor\n            for your career. Let us know in your opinion if you learned something new or how you will use this\n            information in your design? Feel free to comment below or read our previous <a href=\"https://ilovecoding.org/blog\">posts</a>.\n\n        </p>\n","createdIso":{"$date":"2020-12-11T18:57:30.395Z"},"active":true}
{"_id":{"$oid":"602b0d2399096d00170df158"},"slug":"learn-programming-during-covid-19-pandemic","title":"Why should you learn programming during the COVID-19 pandemic (2020-21)?","subTitle":"","bodyContent":"<p>\n    The year 2020 will be remembered as a historic year. The world is grappling with Novel <a\n        href=\"https://en.wikipedia.org/wiki/Coronavirus\">Coronavirus or Covid-19</a>.\n    Millions of people have been affected in the world, resulting in more than <a\n        href=\"https://www.worldometers.info/coronavirus/\">2.27 Million deaths </a> globally (January\n    2021 statistics). The World Health Organization has declared it a pandemic.\n\n\n\n</p>\n<p>\n    The authorities all over the world have resorted to unconventional methods such as lockdown, social\n    distancing,\n    and curfew to combat the viral disease. Although the lockdown and restrictions are being lifted gradually,\n    the\n    virus is still lurking and affecting people.\n\n</p>\n<img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/js-covid/covid 1.jpg\"\n    alt=\"Social Distancing\" />\n\n<p>\n\n    The pandemic brought a multitude of social changes as people were restricted to their homes. People resorted\n    to\n    online resources to find the latest news about the Coronavirus, share their thoughts, and/or simply pass\n    their\n    time.\n</p>\n\n<p>\n    Similarly, educational institutes shifted to online learning during the lockdown. They have been using\n    different\n    video conferencing software and apps such as Zoom, WhatsApp Video, Apple‚Äôs Facetime, Skype, etc.\n</p>\n\n<img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/js-covid/covid 2.png\"\n    alt=\"Conference Software - Zoom, Facetime, WhatsApp\" />\n\n<p>\n    Businesses and companies opted for a <a href=\"https://www.worldometers.info/coronavirus/\">work-from-home\n        model\n    </a>. Big companies like Facebook have also implemented a\n    work-from-home model for their employees. Due to the pandemic, people have more time to spare (because of\n    less\n    travel, limited outings, and fewer\n    day-to-day outdoor activities in order to mitigate covid-19). More time at home means more opportunities to\n    learn new skills and advance your career. One of the best skills to learn these days is to learn how to\n    code.\n    Let's look into the details on how learning programming could be just the right skill for you before the\n    pandemic ends.\n</p>\n\n<p>\n    Due to the covid-19 pandemic people have been more interested in remote/online job opportunities. Despite regression in other\n    industries, the IT industry has shown resilience and is still managing to provide job opportunities. But to\n    avail these opportunities, you need to learn at least one programming language. Now you may ask which\n    programming language you should learn? The best answer is Javascript.\n</p>\n\n\n\n<h2>\n\n    Why learn JavaScript?\n\n</h2>\n<p>\n    JavaScript is one of the most popular programming languages in the world. Similarly, it is also the most\n    sought-after language for jobs. The salary of a junior JS developer ranges anywhere between 60K-140K.\n    JavaScript\n    has the edge over its competitors due to its versatility. It is the only language that can be used\n    for front-end, back-end, and full-stack development. You can also develop mobile and desktop apps with it.\n    Now you may be wondering how you should learn Javascript?\n\n</p>\n<img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/js-covid/covid 4.png\"\n    alt=\"JavaScript\" />\n\n<h2>iLoveCoding‚Äôs Curriculum</h2>\n<p>\n    iLoveCoding‚Äôs solid curriculum makes you a confident full-stack Javascript developer. It builds the\n    foundation\n    by first teaching <a href=\"https://ilovecoding.org/courses/htmlcss2\">HTML and CSS</a>. Once you master these\n    tools, you can move forward to learn <a href=\"https://ilovecoding.org/courses/js2\">JavaScript</a>. Then you\n    can add to your skills by gradually learning JavaScript libraries and frameworks until you become a\n    full-stack\n    developer. With dedicated\n    time you can become a full-stack Javascript developer in just five months. Ilovecoding‚Äôs curriculum consists\n    of\n    the following topics: HTML, CSS, Javascript, Node.js, React.js, Angular.js, Express.js, JQuery, Bootstrap,\n    MongoDB, and much more. Not only do you learn these topics with videocasts training, but you also get to\n    practice your skills with tons of practice projects. In addition, you have a mentor-led student community\n    that\n    is there to help and guide you whenever you need it. You can share your questions, concerns, or your code\n    with\n    your mentor and peers and get feedback. Check out iLoveCoding‚Äôs full curriculum <a\n        href=\"https://ilovecoding.org/curriculum\">here</a>.\n\n</p>\n<p>\n    <strong>Some of the benefits of learning online</strong> Here we have enlisted some of the benefits of\n    learning\n    online or distance learning.\n</p>\n<img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/js-covid/covid 5.png\"\n    alt=\"Distance Learning, convenience\" />\n<p>\n    <strong>Flexibility:</strong> learning online provides you the flexibility to choose appropriate time\n    according\n    to your circumstances and needs. You can learn anytime during the day or at night. This is particularly\n    important for people who are working remotely, students, housewives, and others. You can also decide how\n    much\n    time you want to spend daily.\n\n</p>\n\n<p>\n    <strong>Convenience:</strong> Online education is convenient. You don‚Äôt have to leave your home, which is\n    particularly important at this time of self-isolation. You can sit anywhere in your house comfortably, lying\n    down in your bed or standing up.\n\n</p>\n\n<p>\n    <strong>Economical:</strong> Online learning is generally inexpensive. Some organizations and universities\n    offer\n    online courses such as <a href=\"https://online-learning.harvard.edu/\">Harvard</a> and <a\n        href=\"https://ocw.mit.edu/index.htm\">MIT</a>. You get the same material that their graduates learn from.\n    Some distance\n    educational institutes have slashed fees to attract more learners.\n\n\n</p>\n\n<p>\n    <strong>Provides a pastime:</strong> Learning online could be fun if you have friends learning along with\n    you.\n    If you are taking live classes through Zoom, you can talk to your peers. This activity provides an\n    opportunity\n    to socialize and kill some time. It is really important in this stressful time, and it helps ventilate\n    negative\n    energy.\n\n\n</p>\n\n<p>\n    <strong>Updating and Refreshing Current skills:</strong> You can brush up on already learned skills that are\n    relevant to your job or education. This will help you not only in short-term, you can leverage it for\n    getting\n    better opportunities as well as for getting promoted and job enrichment in the long-run. This is a golden\n    opportunity to learn all skills that you promised and wished to learn.Programmers can learn new languages\n    and\n    tools.\n\n</p>\n\n<h3>Some of the cons of online learning</h3>\n<p>\n    Despite its usefulness and recent popularity, learning online has its <a\n        href=\"https://campustechnology.com/articles/2020/04/30/covid19s-ultimate-impact-on-online-learning-the-good-and-the-bad.aspx\">flip\n        side</a>. Some of the cons that can be\n    attributed to online learning are:\n\n\n\n</p>\n<p>\n    Most of the time, online resources such as MOOC lack support, which is very crucial for beginners. If you\n    get\n    stuck somewhere, you need to google your problem. If you are lucky, you may find the answer quickly, but you\n    get\n    inundated with information and lose track in most cases.\n</p>\n\n<p>\n    Similarly, you need a mentor or guide in your journey to learn online. Most of the online education programs\n    lack this important factor. The mentor will guide you through the information overload. S/he will tell you\n    the\n    tips and tricks which will shorten your learning curve.\n\n</p>\n\n<p>\n    Procrastination can be a big problem when it comes to e-learning. You may skip on important material just\n    because you were feeling lethargic. Quality may be compromised when it comes to online education. Recently,\n    many\n    universities had to stop their\n    online classes due to complaints by students of poor quality.\n\n\n</p>\n<h3>\n    Work-from-home model\n</h3>\n<p>\n    When the lockdown was imposed, businesses had to find a way to work. Thanks to the internet and the web, now\n    we\n    have an alternative. People were asked to work from their homes. Not all businesses could resort to this\n    model,\n    such as brick and mortar businesses; however, the software houses and technology companies readily shifted\n    to\n    this model, including tech giants such as Facebook and Twitter.\n\n</p>\n<img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/js-covid/covid 6.jpg\"\n    alt=\"Work-from-home\" />\n\n<p>\n    <a\n        href=\"https://www.theguardian.com/technology/2020/may/21/facebook-coronavirus-remote-working-policy-extended-years\">Facebook\n        and Twitter></a> have liked this model so much that they have decided to continue it even after the\n    lockdown\n    is lifted. But it stated that the salary would be restructured. Experience and location would be the\n    decisive\n    factors to be eligible for this model. Following the trend, Silicon Valley and other IT companies will\n    pursue\n    this path and we are going to see this\n    model in the near future.\n\n\n</p>\n<h3>\n    Some of the helpful tips for distance learning\n</h3>\n<p>\n    To maximize the benefits of distance learning, we have jotted down some helpful tips.\n</p>\n\n<img class=\"img-fluid\" src=\"https://a.iLoveCoding.Org/img/_blogs/js-covid/covid 7.jpg\"\n    alt=\"Tips for elearning\" />\n<ol>\n    <li>Stick to a time-table or Schedule. Set a specific time for online learning and other mundane activities.\n    </li>\n    <li>Designate a specific area in your house that is exclusive for work and learning, away from noise and\n        distractions.</li>\n    <li>Take breaks. Sitting in one posture for a long time can be harmful to your body. Take a 5-minute break\n        after\n        25\n        minutes or a 10-minute break after 50 minutes. This will keep lots of things in check, including\n        digestion\n        and\n        mental health.</li>\n    <li>Take notes. Just like real-life classes, you should have a notebook nearby to jot down pointers. You may\n        use\n        word processors or a mobile app if you prefer typing.</li>\n</ol>\n\n\n\n<h2>\n    Conclusion\n</h2>\n<p>\n    As you have seen, the Covid-19 pandemic disrupted normal life. However, it has also provided opportunities\n    such\n    as distance learning and remote work. Self-quarantine and lockdown provided ample time to pursue the skills\n    and\n    passion we all wanted to learn. Learning to program, especially JavaScript, has been a vital trend during\n    Covid-19. JS development has a wide scope for jobs, freelancing, teaching, and entrepreneurship.\n\n</p>\n<p>\n    <strong>What are you doing during the lockdown?</strong> Did you learn any programming language? Let us know\n    in\n    the comments.\n</p>","createdIso":{"$date":"2021-02-16T00:09:07.339Z"},"updatedIso":{"$date":"2021-02-17T20:25:57.393Z"},"active":true}
